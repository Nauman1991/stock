import { AfterContentInit, EventEmitter, QueryList, TemplateRef } from '@angular/core';
import { DataTableColumnComponent } from './data-table-column.component';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableComponent<T> implements AfterContentInit {
    items: T[];
    itemsPerPage: number;
    currentPage: number;
    totalItems: number;
    allSelected: boolean;
    isRowSelectedFn: (item: T) => boolean;
    emptyStateLabel: string;
    allSelectChange: EventEmitter<void>;
    rowSelectChange: EventEmitter<T>;
    pageChange: EventEmitter<number>;
    itemsPerPageChange: EventEmitter<number>;
    columns: QueryList<DataTableColumnComponent>;
    templateRefs: QueryList<TemplateRef<any>>;
    rowTemplate: TemplateRef<any>;
    ngAfterContentInit(): void;
    trackByFn(index: number, item: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableComponent<any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DataTableComponent<any>, "vdr-data-table", never, { "items": "items"; "itemsPerPage": "itemsPerPage"; "currentPage": "currentPage"; "totalItems": "totalItems"; "allSelected": "allSelected"; "isRowSelectedFn": "isRowSelectedFn"; "emptyStateLabel": "emptyStateLabel"; }, { "allSelectChange": "allSelectChange"; "rowSelectChange": "rowSelectChange"; "pageChange": "pageChange"; "itemsPerPageChange": "itemsPerPageChange"; }, ["columns", "templateRefs"], never>;
}

//# sourceMappingURL=data-table.component.d.ts.map