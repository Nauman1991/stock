import { gql } from 'apollo-angular';
export const REQUEST_STARTED = gql `
    mutation RequestStarted {
        requestStarted @client
    }
`;
export const REQUEST_COMPLETED = gql `
    mutation RequestCompleted {
        requestCompleted @client
    }
`;
export const USER_STATUS_FRAGMENT = gql `
    fragment UserStatus on UserStatus {
        username
        isLoggedIn
        loginTime
        activeChannelId
        permissions
        channels {
            id
            code
            token
            permissions
        }
    }
`;
export const SET_AS_LOGGED_IN = gql `
    mutation SetAsLoggedIn($input: UserStatusInput!) {
        setAsLoggedIn(input: $input) @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const SET_AS_LOGGED_OUT = gql `
    mutation SetAsLoggedOut {
        setAsLoggedOut @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const SET_UI_LANGUAGE = gql `
    mutation SetUiLanguage($languageCode: LanguageCode!) {
        setUiLanguage(languageCode: $languageCode) @client
    }
`;
export const SET_CONTENT_LANGUAGE = gql `
    mutation SetContentLanguage($languageCode: LanguageCode!) {
        setContentLanguage(languageCode: $languageCode) @client
    }
`;
export const SET_UI_THEME = gql `
    mutation SetUiTheme($theme: String!) {
        setUiTheme(theme: $theme) @client
    }
`;
export const GET_NEWTORK_STATUS = gql `
    query GetNetworkStatus {
        networkStatus @client {
            inFlightRequests
        }
    }
`;
export const GET_USER_STATUS = gql `
    query GetUserStatus {
        userStatus @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const GET_UI_STATE = gql `
    query GetUiState {
        uiState @client {
            language
            contentLanguage
            theme
        }
    }
`;
export const GET_CLIENT_STATE = gql `
    query GetClientState {
        networkStatus @client {
            inFlightRequests
        }
        userStatus @client {
            ...UserStatus
        }
        uiState @client {
            language
            contentLanguage
            theme
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const SET_ACTIVE_CHANNEL = gql `
    mutation SetActiveChannel($channelId: ID!) {
        setActiveChannel(channelId: $channelId) @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const UPDATE_USER_CHANNELS = gql `
    mutation UpdateUserChannels($channels: [CurrentUserChannelInput!]!) {
        updateUserChannels(channels: $channels) @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LWRlZmluaXRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb3JlL3NyYy9kYXRhL2RlZmluaXRpb25zL2NsaWVudC1kZWZpbml0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckMsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLEdBQUcsQ0FBQTs7OztDQUlqQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsR0FBRyxDQUFBOzs7O0NBSW5DLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7Ozs7O0NBY3RDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU03QixvQkFBb0I7Q0FDekIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTTlCLG9CQUFvQjtDQUN6QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLEdBQUcsQ0FBQTs7OztDQUlqQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsR0FBRyxDQUFBOzs7O0NBSXRDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsR0FBRyxDQUFBOzs7O0NBSTlCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLENBQUE7Ozs7OztDQU1wQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTTVCLG9CQUFvQjtDQUN6QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLEdBQUcsQ0FBQTs7Ozs7Ozs7Q0FROUIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLEdBQUcsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7TUFjN0Isb0JBQW9CO0NBQ3pCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU0vQixvQkFBb0I7Q0FDekIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTWpDLG9CQUFvQjtDQUN6QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3FsIH0gZnJvbSAnYXBvbGxvLWFuZ3VsYXInO1xyXG5cclxuZXhwb3J0IGNvbnN0IFJFUVVFU1RfU1RBUlRFRCA9IGdxbGBcclxuICAgIG11dGF0aW9uIFJlcXVlc3RTdGFydGVkIHtcclxuICAgICAgICByZXF1ZXN0U3RhcnRlZCBAY2xpZW50XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgUkVRVUVTVF9DT01QTEVURUQgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBSZXF1ZXN0Q29tcGxldGVkIHtcclxuICAgICAgICByZXF1ZXN0Q29tcGxldGVkIEBjbGllbnRcclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBVU0VSX1NUQVRVU19GUkFHTUVOVCA9IGdxbGBcclxuICAgIGZyYWdtZW50IFVzZXJTdGF0dXMgb24gVXNlclN0YXR1cyB7XHJcbiAgICAgICAgdXNlcm5hbWVcclxuICAgICAgICBpc0xvZ2dlZEluXHJcbiAgICAgICAgbG9naW5UaW1lXHJcbiAgICAgICAgYWN0aXZlQ2hhbm5lbElkXHJcbiAgICAgICAgcGVybWlzc2lvbnNcclxuICAgICAgICBjaGFubmVscyB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIGNvZGVcclxuICAgICAgICAgICAgdG9rZW5cclxuICAgICAgICAgICAgcGVybWlzc2lvbnNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU0VUX0FTX0xPR0dFRF9JTiA9IGdxbGBcclxuICAgIG11dGF0aW9uIFNldEFzTG9nZ2VkSW4oJGlucHV0OiBVc2VyU3RhdHVzSW5wdXQhKSB7XHJcbiAgICAgICAgc2V0QXNMb2dnZWRJbihpbnB1dDogJGlucHV0KSBAY2xpZW50IHtcclxuICAgICAgICAgICAgLi4uVXNlclN0YXR1c1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7VVNFUl9TVEFUVVNfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU0VUX0FTX0xPR0dFRF9PVVQgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBTZXRBc0xvZ2dlZE91dCB7XHJcbiAgICAgICAgc2V0QXNMb2dnZWRPdXQgQGNsaWVudCB7XHJcbiAgICAgICAgICAgIC4uLlVzZXJTdGF0dXNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke1VTRVJfU1RBVFVTX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNFVF9VSV9MQU5HVUFHRSA9IGdxbGBcclxuICAgIG11dGF0aW9uIFNldFVpTGFuZ3VhZ2UoJGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlISkge1xyXG4gICAgICAgIHNldFVpTGFuZ3VhZ2UobGFuZ3VhZ2VDb2RlOiAkbGFuZ3VhZ2VDb2RlKSBAY2xpZW50XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU0VUX0NPTlRFTlRfTEFOR1VBR0UgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBTZXRDb250ZW50TGFuZ3VhZ2UoJGxhbmd1YWdlQ29kZTogTGFuZ3VhZ2VDb2RlISkge1xyXG4gICAgICAgIHNldENvbnRlbnRMYW5ndWFnZShsYW5ndWFnZUNvZGU6ICRsYW5ndWFnZUNvZGUpIEBjbGllbnRcclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTRVRfVUlfVEhFTUUgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBTZXRVaVRoZW1lKCR0aGVtZTogU3RyaW5nISkge1xyXG4gICAgICAgIHNldFVpVGhlbWUodGhlbWU6ICR0aGVtZSkgQGNsaWVudFxyXG4gICAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdFVF9ORVdUT1JLX1NUQVRVUyA9IGdxbGBcclxuICAgIHF1ZXJ5IEdldE5ldHdvcmtTdGF0dXMge1xyXG4gICAgICAgIG5ldHdvcmtTdGF0dXMgQGNsaWVudCB7XHJcbiAgICAgICAgICAgIGluRmxpZ2h0UmVxdWVzdHNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX1VTRVJfU1RBVFVTID0gZ3FsYFxyXG4gICAgcXVlcnkgR2V0VXNlclN0YXR1cyB7XHJcbiAgICAgICAgdXNlclN0YXR1cyBAY2xpZW50IHtcclxuICAgICAgICAgICAgLi4uVXNlclN0YXR1c1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7VVNFUl9TVEFUVVNfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX1VJX1NUQVRFID0gZ3FsYFxyXG4gICAgcXVlcnkgR2V0VWlTdGF0ZSB7XHJcbiAgICAgICAgdWlTdGF0ZSBAY2xpZW50IHtcclxuICAgICAgICAgICAgbGFuZ3VhZ2VcclxuICAgICAgICAgICAgY29udGVudExhbmd1YWdlXHJcbiAgICAgICAgICAgIHRoZW1lXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdFVF9DTElFTlRfU1RBVEUgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRDbGllbnRTdGF0ZSB7XHJcbiAgICAgICAgbmV0d29ya1N0YXR1cyBAY2xpZW50IHtcclxuICAgICAgICAgICAgaW5GbGlnaHRSZXF1ZXN0c1xyXG4gICAgICAgIH1cclxuICAgICAgICB1c2VyU3RhdHVzIEBjbGllbnQge1xyXG4gICAgICAgICAgICAuLi5Vc2VyU3RhdHVzXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHVpU3RhdGUgQGNsaWVudCB7XHJcbiAgICAgICAgICAgIGxhbmd1YWdlXHJcbiAgICAgICAgICAgIGNvbnRlbnRMYW5ndWFnZVxyXG4gICAgICAgICAgICB0aGVtZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7VVNFUl9TVEFUVVNfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU0VUX0FDVElWRV9DSEFOTkVMID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gU2V0QWN0aXZlQ2hhbm5lbCgkY2hhbm5lbElkOiBJRCEpIHtcclxuICAgICAgICBzZXRBY3RpdmVDaGFubmVsKGNoYW5uZWxJZDogJGNoYW5uZWxJZCkgQGNsaWVudCB7XHJcbiAgICAgICAgICAgIC4uLlVzZXJTdGF0dXNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke1VTRVJfU1RBVFVTX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFVQREFURV9VU0VSX0NIQU5ORUxTID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gVXBkYXRlVXNlckNoYW5uZWxzKCRjaGFubmVsczogW0N1cnJlbnRVc2VyQ2hhbm5lbElucHV0IV0hKSB7XHJcbiAgICAgICAgdXBkYXRlVXNlckNoYW5uZWxzKGNoYW5uZWxzOiAkY2hhbm5lbHMpIEBjbGllbnQge1xyXG4gICAgICAgICAgICAuLi5Vc2VyU3RhdHVzXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtVU0VSX1NUQVRVU19GUkFHTUVOVH1cclxuYDtcclxuIl19