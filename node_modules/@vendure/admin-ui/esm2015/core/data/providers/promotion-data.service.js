import { CREATE_PROMOTION, DELETE_PROMOTION, GET_ADJUSTMENT_OPERATIONS, GET_PROMOTION, GET_PROMOTION_LIST, UPDATE_PROMOTION, } from '../definitions/promotion-definitions';
export class PromotionDataService {
    constructor(baseDataService) {
        this.baseDataService = baseDataService;
    }
    getPromotions(take = 10, skip = 0) {
        return this.baseDataService.query(GET_PROMOTION_LIST, {
            options: {
                take,
                skip,
            },
        });
    }
    getPromotion(id) {
        return this.baseDataService.query(GET_PROMOTION, {
            id,
        });
    }
    getPromotionActionsAndConditions() {
        return this.baseDataService.query(GET_ADJUSTMENT_OPERATIONS);
    }
    createPromotion(input) {
        return this.baseDataService.mutate(CREATE_PROMOTION, {
            input,
        });
    }
    updatePromotion(input) {
        return this.baseDataService.mutate(UPDATE_PROMOTION, {
            input,
        });
    }
    deletePromotion(id) {
        return this.baseDataService.mutate(DELETE_PROMOTION, { id });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbW90aW9uLWRhdGEuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvZGF0YS9wcm92aWRlcnMvcHJvbW90aW9uLWRhdGEuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFVQSxPQUFPLEVBQ0gsZ0JBQWdCLEVBQ2hCLGdCQUFnQixFQUNoQix5QkFBeUIsRUFDekIsYUFBYSxFQUNiLGtCQUFrQixFQUNsQixnQkFBZ0IsR0FDbkIsTUFBTSxzQ0FBc0MsQ0FBQztBQUk5QyxNQUFNLE9BQU8sb0JBQW9CO0lBQzdCLFlBQW9CLGVBQWdDO1FBQWhDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtJQUFHLENBQUM7SUFFeEQsYUFBYSxDQUFDLE9BQWUsRUFBRSxFQUFFLE9BQWUsQ0FBQztRQUM3QyxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUM3QixrQkFBa0IsRUFDbEI7WUFDSSxPQUFPLEVBQUU7Z0JBQ0wsSUFBSTtnQkFDSixJQUFJO2FBQ1A7U0FDSixDQUNKLENBQUM7SUFDTixDQUFDO0lBRUQsWUFBWSxDQUFDLEVBQVU7UUFDbkIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBNkMsYUFBYSxFQUFFO1lBQ3pGLEVBQUU7U0FDTCxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsZ0NBQWdDO1FBQzVCLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQWdDLHlCQUF5QixDQUFDLENBQUM7SUFDaEcsQ0FBQztJQUVELGVBQWUsQ0FBQyxLQUEyQjtRQUN2QyxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUM5QixnQkFBZ0IsRUFDaEI7WUFDSSxLQUFLO1NBQ1IsQ0FDSixDQUFDO0lBQ04sQ0FBQztJQUVELGVBQWUsQ0FBQyxLQUEyQjtRQUN2QyxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUM5QixnQkFBZ0IsRUFDaEI7WUFDSSxLQUFLO1NBQ1IsQ0FDSixDQUFDO0lBQ04sQ0FBQztJQUVELGVBQWUsQ0FBQyxFQUFVO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQzlCLGdCQUFnQixFQUNoQixFQUFFLEVBQUUsRUFBRSxDQUNULENBQUM7SUFDTixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgQ3JlYXRlUHJvbW90aW9uLFxyXG4gICAgQ3JlYXRlUHJvbW90aW9uSW5wdXQsXHJcbiAgICBEZWxldGVQcm9tb3Rpb24sXHJcbiAgICBHZXRBZGp1c3RtZW50T3BlcmF0aW9ucyxcclxuICAgIEdldFByb21vdGlvbixcclxuICAgIEdldFByb21vdGlvbkxpc3QsXHJcbiAgICBVcGRhdGVQcm9tb3Rpb24sXHJcbiAgICBVcGRhdGVQcm9tb3Rpb25JbnB1dCxcclxufSBmcm9tICcuLi8uLi9jb21tb24vZ2VuZXJhdGVkLXR5cGVzJztcclxuaW1wb3J0IHtcclxuICAgIENSRUFURV9QUk9NT1RJT04sXHJcbiAgICBERUxFVEVfUFJPTU9USU9OLFxyXG4gICAgR0VUX0FESlVTVE1FTlRfT1BFUkFUSU9OUyxcclxuICAgIEdFVF9QUk9NT1RJT04sXHJcbiAgICBHRVRfUFJPTU9USU9OX0xJU1QsXHJcbiAgICBVUERBVEVfUFJPTU9USU9OLFxyXG59IGZyb20gJy4uL2RlZmluaXRpb25zL3Byb21vdGlvbi1kZWZpbml0aW9ucyc7XHJcblxyXG5pbXBvcnQgeyBCYXNlRGF0YVNlcnZpY2UgfSBmcm9tICcuL2Jhc2UtZGF0YS5zZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBQcm9tb3Rpb25EYXRhU2VydmljZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGJhc2VEYXRhU2VydmljZTogQmFzZURhdGFTZXJ2aWNlKSB7fVxyXG5cclxuICAgIGdldFByb21vdGlvbnModGFrZTogbnVtYmVyID0gMTAsIHNraXA6IG51bWJlciA9IDApIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5iYXNlRGF0YVNlcnZpY2UucXVlcnk8R2V0UHJvbW90aW9uTGlzdC5RdWVyeSwgR2V0UHJvbW90aW9uTGlzdC5WYXJpYWJsZXM+KFxyXG4gICAgICAgICAgICBHRVRfUFJPTU9USU9OX0xJU1QsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG9wdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YWtlLFxyXG4gICAgICAgICAgICAgICAgICAgIHNraXAsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0UHJvbW90aW9uKGlkOiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5iYXNlRGF0YVNlcnZpY2UucXVlcnk8R2V0UHJvbW90aW9uLlF1ZXJ5LCBHZXRQcm9tb3Rpb24uVmFyaWFibGVzPihHRVRfUFJPTU9USU9OLCB7XHJcbiAgICAgICAgICAgIGlkLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFByb21vdGlvbkFjdGlvbnNBbmRDb25kaXRpb25zKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmJhc2VEYXRhU2VydmljZS5xdWVyeTxHZXRBZGp1c3RtZW50T3BlcmF0aW9ucy5RdWVyeT4oR0VUX0FESlVTVE1FTlRfT1BFUkFUSU9OUyk7XHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlUHJvbW90aW9uKGlucHV0OiBDcmVhdGVQcm9tb3Rpb25JbnB1dCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmJhc2VEYXRhU2VydmljZS5tdXRhdGU8Q3JlYXRlUHJvbW90aW9uLk11dGF0aW9uLCBDcmVhdGVQcm9tb3Rpb24uVmFyaWFibGVzPihcclxuICAgICAgICAgICAgQ1JFQVRFX1BST01PVElPTixcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgaW5wdXQsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVQcm9tb3Rpb24oaW5wdXQ6IFVwZGF0ZVByb21vdGlvbklucHV0KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYmFzZURhdGFTZXJ2aWNlLm11dGF0ZTxVcGRhdGVQcm9tb3Rpb24uTXV0YXRpb24sIFVwZGF0ZVByb21vdGlvbi5WYXJpYWJsZXM+KFxyXG4gICAgICAgICAgICBVUERBVEVfUFJPTU9USU9OLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGRlbGV0ZVByb21vdGlvbihpZDogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYmFzZURhdGFTZXJ2aWNlLm11dGF0ZTxEZWxldGVQcm9tb3Rpb24uTXV0YXRpb24sIERlbGV0ZVByb21vdGlvbi5WYXJpYWJsZXM+KFxyXG4gICAgICAgICAgICBERUxFVEVfUFJPTU9USU9OLFxyXG4gICAgICAgICAgICB7IGlkIH0sXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG4iXX0=