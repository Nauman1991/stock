import { Pipe } from '@angular/core';
export class AssetPreviewPipe {
    transform(asset, preset = 'thumb') {
        if (!asset) {
            return '';
        }
        if (!asset.preview || typeof asset.preview !== 'string') {
            throw new Error(`Expected an Asset, got ${JSON.stringify(asset)}`);
        }
        const fp = asset.focalPoint ? `&fpx=${asset.focalPoint.x}&fpy=${asset.focalPoint.y}` : '';
        if (Number.isNaN(Number(preset))) {
            return `${asset.preview}?preset=${preset}${fp}`;
        }
        else {
            return `${asset.preview}?w=${preset}&h=${preset}${fp}`;
        }
    }
}
AssetPreviewPipe.decorators = [
    { type: Pipe, args: [{
                name: 'assetPreview',
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXQtcHJldmlldy5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb3JlL3NyYy9zaGFyZWQvcGlwZXMvYXNzZXQtcHJldmlldy5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBT3BELE1BQU0sT0FBTyxnQkFBZ0I7SUFDekIsU0FBUyxDQUFDLEtBQXFCLEVBQUUsU0FBMEIsT0FBTztRQUM5RCxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1IsT0FBTyxFQUFFLENBQUM7U0FDYjtRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLE9BQU8sS0FBSyxDQUFDLE9BQU8sS0FBSyxRQUFRLEVBQUU7WUFDckQsTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDdEU7UUFDRCxNQUFNLEVBQUUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxRQUFRLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxRQUFRLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUMxRixJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUU7WUFDOUIsT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLFdBQVcsTUFBTSxHQUFHLEVBQUUsRUFBRSxDQUFDO1NBQ25EO2FBQU07WUFDSCxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sTUFBTSxNQUFNLE1BQU0sTUFBTSxHQUFHLEVBQUUsRUFBRSxDQUFDO1NBQzFEO0lBQ0wsQ0FBQzs7O1lBakJKLElBQUksU0FBQztnQkFDRixJQUFJLEVBQUUsY0FBYzthQUN2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IEFzc2V0RnJhZ21lbnQgfSBmcm9tICcuLi8uLi9jb21tb24vZ2VuZXJhdGVkLXR5cGVzJztcclxuXHJcbkBQaXBlKHtcclxuICAgIG5hbWU6ICdhc3NldFByZXZpZXcnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXNzZXRQcmV2aWV3UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gICAgdHJhbnNmb3JtKGFzc2V0PzogQXNzZXRGcmFnbWVudCwgcHJlc2V0OiBzdHJpbmcgfCBudW1iZXIgPSAndGh1bWInKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoIWFzc2V0KSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFhc3NldC5wcmV2aWV3IHx8IHR5cGVvZiBhc3NldC5wcmV2aWV3ICE9PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIGFuIEFzc2V0LCBnb3QgJHtKU09OLnN0cmluZ2lmeShhc3NldCl9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGZwID0gYXNzZXQuZm9jYWxQb2ludCA/IGAmZnB4PSR7YXNzZXQuZm9jYWxQb2ludC54fSZmcHk9JHthc3NldC5mb2NhbFBvaW50Lnl9YCA6ICcnO1xyXG4gICAgICAgIGlmIChOdW1iZXIuaXNOYU4oTnVtYmVyKHByZXNldCkpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBgJHthc3NldC5wcmV2aWV3fT9wcmVzZXQ9JHtwcmVzZXR9JHtmcH1gO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBgJHthc3NldC5wcmV2aWV3fT93PSR7cHJlc2V0fSZoPSR7cHJlc2V0fSR7ZnB9YDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19