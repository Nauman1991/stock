{"version":3,"file":"vendure-admin-ui-core.js","sources":["../../src/lib/core/src/data/definitions/administrator-definitions.ts","../../src/lib/core/src/data/providers/administrator-data.service.ts","../../src/lib/core/src/data/definitions/shared-definitions.ts","../../src/lib/core/src/data/definitions/auth-definitions.ts","../../src/lib/core/src/data/providers/auth-data.service.ts","../../src/lib/core/src/providers/local-storage/local-storage.service.ts","../../src/lib/core/src/data/definitions/client-definitions.ts","../../src/lib/core/src/data/query-result.ts","../../src/lib/core/src/data/definitions/settings-definitions.ts","../../src/lib/core/src/data/server-config.ts","../../src/lib/core/src/data/utils/add-custom-fields.ts","../../src/lib/core/src/data/utils/remove-readonly-custom-fields.ts","../../src/lib/core/src/data/utils/transform-relation-custom-field-inputs.ts","../../src/lib/core/src/data/providers/base-data.service.ts","../../src/lib/core/src/data/providers/client-data.service.ts","../../src/lib/core/src/data/definitions/product-definitions.ts","../../src/lib/core/src/data/definitions/collection-definitions.ts","../../src/lib/core/src/data/providers/collection-data.service.ts","../../src/lib/core/src/data/definitions/customer-definitions.ts","../../src/lib/core/src/data/providers/customer-data.service.ts","../../src/lib/core/src/data/definitions/facet-definitions.ts","../../src/lib/core/src/data/providers/facet-data.service.ts","../../src/lib/core/src/data/definitions/order-definitions.ts","../../src/lib/core/src/data/providers/order-data.service.ts","../../src/lib/core/src/common/generated-types.ts","../../src/lib/core/src/data/providers/product-data.service.ts","../../src/lib/core/src/data/definitions/promotion-definitions.ts","../../src/lib/core/src/data/providers/promotion-data.service.ts","../../src/lib/core/src/data/providers/settings-data.service.ts","../../src/lib/core/src/data/definitions/shipping-definitions.ts","../../src/lib/core/src/data/providers/shipping-method-data.service.ts","../../src/lib/core/src/data/providers/data.service.ts","../../src/lib/core/src/app.component.ts","../../src/lib/core/src/app.config.ts","../../src/lib/core/src/common/utilities/get-default-ui-language.ts","../../src/lib/core/src/providers/auth/auth.service.ts","../../src/lib/core/src/providers/i18n/i18n.service.ts","../../src/lib/core/src/shared/components/modal-dialog/modal-dialog.component.ts","../../src/lib/core/src/shared/components/simple-dialog/simple-dialog.component.ts","../../src/lib/core/src/providers/overlay-host/overlay-host.service.ts","../../src/lib/core/src/providers/modal/modal.service.ts","../../src/lib/core/src/components/ui-language-switcher-dialog/ui-language-switcher-dialog.component.ts","../../src/lib/core/src/components/app-shell/app-shell.component.ts","../../src/lib/core/src/components/breadcrumb/breadcrumb.component.ts","../../src/lib/core/src/components/channel-switcher/channel-switcher.component.ts","../../src/lib/core/src/data/utils/get-server-location.ts","../../src/lib/core/src/providers/health-check/health-check.service.ts","../../src/lib/core/src/providers/job-queue/job-queue.service.ts","../../src/lib/core/src/providers/nav-builder/nav-builder.service.ts","../../src/lib/core/src/components/main-nav/main-nav.component.ts","../../src/lib/core/src/components/notification/notification.component.ts","../../src/lib/core/src/components/overlay-host/overlay-host.component.ts","../../src/lib/core/src/components/theme-switcher/theme-switcher.component.ts","../../src/lib/core/src/components/user-menu/user-menu.component.ts","../../src/lib/core/src/common/introspection-result.ts","../../src/lib/core/src/common/introspection-result-wrapper.ts","../../src/lib/core/src/data/check-jobs-link.ts","../../src/lib/core/src/data/client-state/client-defaults.ts","../../src/lib/core/src/data/client-state/client-resolvers.ts","../../src/lib/core/src/data/omit-typename-link.ts","../../src/lib/core/src/data/providers/fetch-adapter.ts","../../src/lib/core/src/providers/notification/notification.service.ts","../../src/lib/core/src/data/providers/interceptor.ts","../../src/lib/core/src/data/data.module.ts","../../src/lib/core/src/providers/i18n/custom-http-loader.ts","../../src/lib/core/src/providers/i18n/custom-message-format-compiler.ts","../../src/lib/core/src/providers/component-registry/component-registry.service.ts","../../src/lib/core/src/providers/custom-field-component/custom-field-component.service.ts","../../src/lib/core/src/shared/dynamic-form-inputs/boolean-form-input/boolean-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/currency-form-input/currency-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/customer-group-form-input/customer-group-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/date-form-input/date-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/facet-value-form-input/facet-value-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/number-form-input/number-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/password-form-input/password-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/product-selector-form-input/product-selector-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/relation-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/select-form-input/select-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/text-form-input/text-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/textarea-form-input/textarea-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/register-dynamic-input-components.ts","../../src/lib/core/src/shared/components/action-bar-items/action-bar-items.component.ts","../../src/lib/core/src/shared/components/action-bar/action-bar.component.ts","../../src/lib/core/src/shared/components/address-form/address-form.component.ts","../../src/lib/core/src/shared/components/affixed-input/affixed-input.component.ts","../../src/lib/core/src/shared/components/affixed-input/percentage-suffix-input.component.ts","../../src/lib/core/src/shared/components/asset-file-input/asset-file-input.component.ts","../../src/lib/core/src/shared/components/asset-preview-dialog/asset-preview-dialog.component.ts","../../src/lib/core/src/shared/components/asset-gallery/asset-gallery.component.ts","../../src/lib/core/src/common/single-search-selection-model.ts","../../src/lib/core/src/shared/components/asset-search-input/asset-search-input.component.ts","../../src/lib/core/src/shared/components/asset-picker-dialog/asset-picker-dialog.component.ts","../../src/lib/core/src/shared/components/manage-tags-dialog/manage-tags-dialog.component.ts","../../src/lib/core/src/shared/components/asset-preview/asset-preview.component.ts","../../src/lib/core/src/shared/components/channel-assignment-control/channel-assignment-control.component.ts","../../src/lib/core/src/shared/components/channel-badge/channel-badge.component.ts","../../src/lib/core/src/shared/components/chip/chip.component.ts","../../src/lib/core/src/common/utilities/configurable-operation-utils.ts","../../src/lib/core/src/common/utilities/interpolate-description.ts","../../src/lib/core/src/shared/components/configurable-input/configurable-input.component.ts","../../src/lib/core/src/shared/components/currency-input/currency-input.component.ts","../../src/lib/core/src/shared/components/custom-field-control/custom-field-control.component.ts","../../src/lib/core/src/shared/components/customer-label/customer-label.component.ts","../../src/lib/core/src/shared/components/data-table/data-table-column.component.ts","../../src/lib/core/src/shared/components/data-table/data-table.component.ts","../../src/lib/core/src/shared/components/dropdown/dropdown.component.ts","../../src/lib/core/src/shared/components/datetime-picker/constants.ts","../../src/lib/core/src/shared/components/datetime-picker/datetime-picker.service.ts","../../src/lib/core/src/shared/components/datetime-picker/datetime-picker.component.ts","../../src/lib/core/src/shared/components/dropdown/dropdown-item.directive.ts","../../src/lib/core/src/shared/components/dropdown/dropdown-menu.component.ts","../../src/lib/core/src/shared/components/dropdown/dropdown-trigger.directive.ts","../../src/lib/core/src/shared/components/edit-note-dialog/edit-note-dialog.component.ts","../../src/lib/core/src/shared/components/empty-placeholder/empty-placeholder.component.ts","../../src/lib/core/src/shared/components/entity-info/entity-info.component.ts","../../src/lib/core/src/shared/components/extension-host/extension-host.service.ts","../../src/lib/core/src/shared/components/extension-host/extension-host.component.ts","../../src/lib/core/src/shared/components/facet-value-chip/facet-value-chip.component.ts","../../src/lib/core/src/common/utilities/flatten-facet-values.ts","../../src/lib/core/src/shared/components/facet-value-selector/facet-value-selector.component.ts","../../src/lib/core/src/shared/components/focal-point-control/focal-point-control.component.ts","../../src/lib/core/src/shared/components/form-field/form-field-control.directive.ts","../../src/lib/core/src/shared/components/form-field/form-field.component.ts","../../src/lib/core/src/shared/components/form-item/form-item.component.ts","../../src/lib/core/src/shared/components/formatted-address/formatted-address.component.ts","../../src/lib/core/src/shared/components/help-tooltip/help-tooltip.component.ts","../../src/lib/core/src/shared/components/history-entry-detail/history-entry-detail.component.ts","../../src/lib/core/src/shared/components/items-per-page-controls/items-per-page-controls.component.ts","../../src/lib/core/src/shared/components/labeled-data/labeled-data.component.ts","../../src/lib/core/src/shared/components/language-selector/language-selector.component.ts","../../src/lib/core/src/shared/components/modal-dialog/dialog-buttons.directive.ts","../../src/lib/core/src/shared/components/modal-dialog/dialog-component-outlet.component.ts","../../src/lib/core/src/shared/components/modal-dialog/dialog-title.directive.ts","../../src/lib/core/src/shared/components/object-tree/object-tree.component.ts","../../src/lib/core/src/shared/components/order-state-label/order-state-label.component.ts","../../src/lib/core/src/shared/components/pagination-controls/pagination-controls.component.ts","../../src/lib/core/src/shared/components/product-selector/product-selector.component.ts","../../src/lib/core/src/shared/components/rich-text-editor/external-image-dialog/external-image-dialog.component.ts","../../src/lib/core/src/shared/components/rich-text-editor/link-dialog/link-dialog.component.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/inputrules.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/keymap.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/menu/menu-common.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/menu/images.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/menu/links.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/menu/menu.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/utils.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/plugins/link-select-plugin.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/prosemirror.service.ts","../../src/lib/core/src/shared/components/rich-text-editor/rich-text-editor.component.ts","../../src/lib/core/src/shared/components/select-toggle/select-toggle.component.ts","../../src/lib/core/src/shared/components/table-row-action/table-row-action.component.ts","../../src/lib/core/src/shared/components/tag-selector/tag-selector.component.ts","../../src/lib/core/src/shared/components/timeline-entry/timeline-entry.component.ts","../../src/lib/core/src/shared/components/title-input/title-input.component.ts","../../src/lib/core/src/shared/directives/disabled.directive.ts","../../src/lib/core/src/shared/directives/if-directive-base.ts","../../src/lib/core/src/shared/directives/if-default-channel-active.directive.ts","../../src/lib/core/src/shared/directives/if-multichannel.directive.ts","../../src/lib/core/src/shared/directives/if-permissions.directive.ts","../../src/lib/core/src/shared/dynamic-form-inputs/dynamic-form-input/dynamic-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/asset/relation-asset-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/relation-selector-dialog/relation-selector-dialog.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/customer/relation-customer-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/product-variant/relation-product-variant-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/product/relation-product-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/relation-card/relation-card.component.ts","../../src/lib/core/src/shared/pipes/asset-preview.pipe.ts","../../src/lib/core/src/shared/pipes/channel-label.pipe.ts","../../src/lib/core/src/shared/pipes/custom-field-label.pipe.ts","../../src/lib/core/src/shared/pipes/duration.pipe.ts","../../src/lib/core/src/shared/pipes/file-size.pipe.ts","../../src/lib/core/src/shared/pipes/has-permission.pipe.ts","../../src/lib/core/src/shared/pipes/locale-base.pipe.ts","../../src/lib/core/src/shared/pipes/locale-currency-name.pipe.ts","../../src/lib/core/src/shared/pipes/locale-currency.pipe.ts","../../src/lib/core/src/shared/pipes/locale-date.pipe.ts","../../src/lib/core/src/shared/pipes/locale-language-name.pipe.ts","../../src/lib/core/src/shared/pipes/sentence-case.pipe.ts","../../src/lib/core/src/shared/pipes/sort.pipe.ts","../../src/lib/core/src/shared/pipes/state-i18n-token.pipe.ts","../../src/lib/core/src/common/utilities/string-to-color.ts","../../src/lib/core/src/shared/pipes/string-to-color.pipe.ts","../../src/lib/core/src/shared/pipes/time-ago.pipe.ts","../../src/lib/core/src/shared/providers/routing/can-deactivate-detail-guard.ts","../../src/lib/core/src/shared/shared.module.ts","../../src/lib/core/src/core.module.ts","../../src/lib/core/src/app.component.module.ts","../../src/lib/core/src/common/base-detail.component.ts","../../src/lib/core/src/common/base-entity-resolver.ts","../../src/lib/core/src/common/base-list.component.ts","../../src/lib/core/src/common/detail-breadcrumb.ts","../../src/lib/core/src/common/utilities/find-translation.ts","../../src/lib/core/src/common/utilities/create-updated-translatable.ts","../../src/lib/core/src/common/version.ts","../../src/lib/core/src/providers/dashboard-widget/dashboard-widget.service.ts","../../src/lib/core/src/providers/dashboard-widget/register-dashboard-widget.ts","../../src/lib/core/src/providers/guard/auth.guard.ts","../../src/lib/core/src/shared/components/extension-host/extension-host-config.ts","../../src/lib/core/src/shared/components/extension-host/host-external-frame.ts","../../src/lib/core/src/public_api.ts","../../src/lib/core/src/vendure-admin-ui-core.ts"],"names":["hasCustomFields","observableCombineLatest","observableOf","_","introspectionResult","ApolloLink","rxjsTake"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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ACC,IAAC,SAAS,CAAI,KAAqB;AAAK,QACnC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C,KAAI;AACJ;AACA;AAAC,MChGW,gBAAgB,GAAG,GAAG,CAAA;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,gBAAgB,GAAG,GAAG,CAAA;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,uBAAuB,GAAG,GAAG,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,WAAW,GAAG,GAAG,CAAA;AAC9B;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,aAAa,GAAG,GAAG,CAAA;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,SAAS,GAAG,GAAG,CAAA;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,QAAQ,GAAG,GAAG,CAAA;AAC3B;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa;AACnB,EAAE;AACF,MACa,WAAW,GAAG,GAAG,CAAA;AAC9B;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa;AACnB,EAAE;AACF,MACa,WAAW,GAAG,GAAG,CAAA;AAC9B;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa;AACnB,EAAE;AACF,MACa,WAAW,GAAG,GAAG,CAAA;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa;AACnB,EAAE;AACF,MACa,wBAAwB,GAAG,GAAG,CAAA;AAC3C;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa;AACnB,EAAE;AACF,MACa,qBAAqB,GAAG,GAAG,CAAA;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,kBAAkB,GAAG,GAAG,CAAA;AACrC;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,gBAAgB,GAAG,GAAG,CAAA;AACnC;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB,EAAE;AACF,MACa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB,EAAE;AACF,MACa,eAAe,GAAG,GAAG,CAAA;AAClC;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB,EAAE;AACF,MACa,eAAe,GAAG,GAAG,CAAA;AAClC;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB,EAAE;AACF,MACa,eAAe,GAAG,GAAG,CAAA;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,gBAAgB,GAAG,GAAG,CAAA;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,WAAW,GAAG,GAAG,CAAA;AAC9B;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,kBAAkB,GAAG,GAAG,CAAA;AACrC;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,uBAAuB,GAAG,GAAG,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+BAA+B;AACrC,EAAE;AACF,MACa,uBAAuB,GAAG,GAAG,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB;AAC7B,EAAE;AACF,MACa,6BAA6B,GAAG,GAAG,CAAA;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mCAAmC;AACzC,EAAE;AACF,MACa,kBAAkB,GAAG,GAAG,CAAA;AACrC;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB;AAC7B,EAAE;AACF,MACa,qBAAqB,GAAG,GAAG,CAAA;AACxC;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB;AAC7B,EAAE;AACF,MACa,qBAAqB,GAAG,GAAG,CAAA;AACxC;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB;AAC7B,EAAE;AACF,MACa,qBAAqB,GAAG,GAAG,CAAA;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,wBAAwB,GAAG,GAAG,CAAA;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB;AAC9B,EAAE;AACF,MACa,sBAAsB,GAAG,GAAG,CAAA;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB;AAC9B,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,4BAA4B,GAAG,GAAG,CAAA;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,4BAA4B,GAAG,GAAG,CAAA;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,EAAE;AACF,MAAa,mCAAmC,GAAG,GAAG,CAAA;AACtD;AACA;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,EAAE;AACF,MAAa,0BAA0B,GAAG,GAAG,CAAA;AAC7C;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,EAAE;AACF,MAAa,6BAA6B,GAAG,GAAG,CAAA;AAChD;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,EAAE;AACF,MAAa,yBAAyB,GAAG,GAAG,CAAA;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,EAAE;AACF,MAAa,2BAA2B,GAAG,GAAG,CAAA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,EAAE;AACF,MAAa,+BAA+B,GAAG,GAAG,CAAA;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,EAAE;AACF,MAAa,8BAA8B,GAAG,GAAG,CAAA;AACjD;AACA;AACA;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,EAAE;AACF,MACa,0BAA0B,GAAG,GAAG,CAAA;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAA4B;AAClC,MAAM,mCAAmC;AACzC,MAAM,0BAA0B;AAChC,MAAM,6BAA6B;AACnC,MAAM,yBAAyB;AAC/B,MAAM,2BAA2B;AACjC,MAAM,+BAA+B;AACrC,MAAM,8BAA8B;AACpC,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0BAA0B;AAChC,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB,EAAE;AACF,MACa,aAAa,GAAG,GAAG,CAAA;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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IAAI,CAAC,eAAe,CAAC,MAAM,CAC9B,oBAAoB,EACpB;AACZ,YAAgB,YAAY;AAC5B,SAAa,CACJ,CAAC;AACV,KAAK;AACL,IACI,UAAU,CAAC,KAAa;AAC5B,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAA4C,YAAY,EAAE;AACpG,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,gBAAgB,CAAC,SAAiB;AACtC,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAC9B,kBAAkB,EAClB;AACZ,YAAgB,SAAS;AACzB,SAAa,CACJ,CAAC;AACV,KAAK;AACL,IACI,kBAAkB,CAAC,QAAmC;AAC1D,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAC9B,oBAAoB,EACpB;AACZ,YAAgB,QAAQ;AACxB,SAAa,CACJ,CAAC;AACV,KAAK;AACL;AAAE;AACF,MCjHa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,6BAA6B,GAAG,GAAG,CAAA;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,uBAAuB,GAAG,GAAG,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,wBAAwB,GAAG,GAAG,CAAA;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB;AAC7B,MAAM,cAAc;AACpB,EAAE;AAEF,MAAa,8BAA8B,GAAG,GAAG,CAAA;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6BAA6B;AACnC,MAAM,wBAAwB;AAC9B,MAAM,cAAc;AACpB,EAAE;AAEF,MAAa,0CAA0C,GAAG,GAAG,CAAA;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA,MAAM,8BAA8B;AACpC,EAAE;AAEF,MAAa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA,MAAM,8BAA8B;AACpC,EAAE;AAEF,MAAa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,uBAAuB,GAAG,GAAG,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB;AAC9B,EAAE;AAEF,MAAa,uBAAuB,GAAG,GAAG,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA,MAAM,wBAAwB;AAC9B,EAAE;AAEF,MAAa,2BAA2B,GAAG,GAAG,CAAA;AAC9C;AACA;AACA;AACA;AACA;AACA,MAAM,0CAA0C;AAChD,EAAE;AAEF,MAAa,wBAAwB,GAAG,GAAG,CAAA;AAC3C;AACA;AACA;AACA;AACA;AACA,MAAM,0CAA0C;AAChD,EAAE;AAEF,MAAa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,2BAA2B,GAAG,GAAG,CAAA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,gCAAgC,GAAG,GAAG,CAAA;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,EAAE;AAEF,MAAa,yBAAyB,GAAG,GAAG,CAAA;AAC5C;AACA;AACA;AACA;AACA;AACA,MAAM,8BAA8B;AACpC,EAAE;AAEF,MAAa,kBAAkB,GAAG,GAAG,CAAA;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc;AACpB,EAAE;AAEF,MAAa,gBAAgB,GAAG,GAAG,CAAA;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,yBAAyB,GAAG,GAAG,CAAA;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,EAAE;AAEF,MAAa,SAAS,GAAG,GAAG,CAAA;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,EAAE;AAEF,MAAa,aAAa,GAAG,GAAG,CAAA;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,EAAE;AAEF,MAAa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,EAAE;AAEF,MAAa,aAAa,GAAG,GAAG,CAAA;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,eAAe,GAAG,GAAG,CAAA;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,uBAAuB,GAAG,GAAG,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,qBAAqB,GAAG,GAAG,CAAA;AACxC;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB;AAC7B,EAAE;AAEF,MAAa,sBAAsB,GAAG,GAAG,CAAA;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,2BAA2B,GAAG,GAAG,CAAA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uBAAuB;AAC7B,EAAE;AAEF,MAAa,0BAA0B,GAAG,GAAG,CAAA;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,0BAA0B,GAAG,GAAG,CAAA;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,4BAA4B,GAAG,GAAG,CAAA;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,4BAA4B,GAAG,GAAG,CAAA;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,wBAAwB,GAAG,GAAG,CAAA;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAEF,MAAa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB,EAAE;AAEF,MAAa,OAAO,GAAG,GAAG,CAAA;AAC1B;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB,EAAE;AAEF,MAAa,UAAU,GAAG,GAAG,CAAA;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB,EAAE;AAEF,MAAa,UAAU,GAAG,GAAG,CAAA;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB,EAAE;AAEF,MAAa,UAAU,GAAG,GAAG,CAAA;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAC,MC/tBY,sBAAsB,GAAG,GAAG,CAAA;AACzC;AACA;AACA;AACA;AACA;AACA,MAAM,mCAAmC;AACzC,EAAE;AACF,MACa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc;AACpB,MAAM,+BAA+B;AACrC,EAAE;A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EAAE;AACzB,gBAAoB,IAAI;AACxB,gBAAoB,IAAI;AACxB,gBAAoB,MAAM;AAC1B,aAAiB;AACjB,SAAa,CACJ,CAAC;AACV,KAAK;AACL;AAAE;AACF,MC3Ha,gBAAgB,GAAG,GAAG,CAAA;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB,EAAE;AACF,MACa,eAAe,GAAG,GAAG,CAAA;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,eAAe,GAAG,GAAG,CAAA;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,eAAe,GAAG,GAAG,CAAA;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,uBAAuB,GAAG,GAAG,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,uBAAuB,GAAG,GAAG,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MACa,qBAAqB,GAAG,GAAG,CAAA;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,qBAAqB,GAAG,GAAG,CAAA;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,qBAAqB,GAAG,GAAG,CAAA;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,iCAAiC,GAAG,GAAG,CAAA;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,sBAAsB,GAAG,GAAG,CAAA;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,2BAA2B,GAAG,GAAG,CAAA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,oBAAoB,GAAG,GAAG,CAAA;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,oBAAoB,GAAG,GAAG,CAAA;AACvC;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,oBAAoB,GAAG,GAAG,CAAA;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,oBAAoB,GAAG,GAAG,CAAA;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AAAG;AACH,MCpOa,mBAAmB;AAChC,IAAI,YAAoB,eAAgC;AAAK,QAArC,oBAAe,GAAf,eAAe,CAAiB;AAAE,KAAE;AAC5D,IACI,eAAe,CAAC,OAAe,EAAE,EAAE,OAAe,CAAC,EAAE,UAAmB;AAC5E,QAAQ,MAAM,MAAM,GAAG,UAAU;AACjC,cAAc;AACd,gBAAkB,MAAM,EAAE;AAC1B,oBAAsB,YAAY,EAAE;AACpC,wB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CA,EAAE;AACF,MACa,oBAAoB,GAAG,GAAG,CAAA;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,mBAAmB,GAAG,GAAG,CAAA;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,qBAAqB,GAAG,GAAG,CAAA;AACxiBAAiB;AACvB,MAAM,sBAAsB;AAC5B,MAAM,oBAAoB;AAC1B,MAAM,mBAAmB;AACzB,EAAE;AACF,MACa,eAAe,GAAG,GAAG,CAAA;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc;AACpB,EAAE;AACF,MACa,SAAS,GAAG,GAAG,CAAA;AAC5B;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,cAAc,GAAG,GAAG,CAAA;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,2BAA2B,GAAG,GAAG,CAAA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,kBAAkB,GAAG,GAAG,CAAA;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB;AAC1B,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe;AACrB,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,aAAa,GAAG,GAAG,CAAA;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe;AACrB,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,yBAAyB,GAAG,GAAG,CAAA;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc;AACpB,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,0BAA0B,GAAG,GAAG,CAAA;AAC7C;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc;AACpB,EAAE;AACF,MACa,+BAA+B,GAAG,GAAG,CAAA;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oBAAoB;AAC1B,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,iBAAiB,GAAG,GAAG,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MACa,YAAY,GAAG,GAAG,CAAA;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;AAC3B,EAAE;AACF,MACa,2BAA2B,GAAG,GAAG,CAAA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;AAC3B;AAAG;AACH,MC3aa,gBAAgB;AAC7B,IAAI,YAAoB,eAAgC;AAAK,QAArC,oBAAe,GAAf,eAAe,CAAiB;AAAE,KAAE;AAC5D,IACI,SAAS,CAAC,UAA4B,EAAE,IAAI,EAAE,EAAE,EAAE;AACtD,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAA6C,eAAe,EAAE;AACvG,YAAY,OAAO;AACnB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,QAAQ,CAAC,EAAU;AACvB,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAqC,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACjG,KAAK;AACL,IACI,eAAe,CAAC,EAAU,EAAE,OAAiC;AACjE,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAC7B,iBAAiB,EACjB;AACZ,YAAgB,EAAE;AAClB,YAAgB,OAAO;AACvB,SAAa,CACJ,CAAC;AACV,KAAK;AACL,IACI,aAAa,CAAC,EAAU;AAC5B,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAkD,cAAc,EAAE;AAC5G,YAAY,EAAE;AACd,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,wBAAwB,CAAC,EAAU,EAAE,KAAa;AACtD,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAGhC,2BAA2B,EAAE;AACvC,YAAY,EAAE;AACd,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,iBAAiB,CAAC,KAAwB;AAC9C,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAC9B,kBAAkB,EAClB;AACZ,YAAgB,KAAK;AACrB,SAAa,CACJ,CAAC;AACV,KAAK;AACL,IACI,4BAA4B,CAAC,EAAU,EAAE,KAAa;AAC1D,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAGhC,+BAA+B,EAAE;AAC3C,YAAY,EAAE;AACd,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,WAAW,CAAC,KAAuB;AACvC,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAA8C,YAAY,EAAE;AACtG,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,WAAW,CAAC,KAAuB;AACvC,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAA8C,YAAY,EAAE;AACtG,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,YAAY,CAAC,KAAwB,EAAE,OAAe;AAC1D,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAgD,aAAa,EAAE;AACzG,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,cAAc,CAAC,KAA0B;AAC7C,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAC9B,iBAAiB,EACjB;AACZ,YAAgB,KAAK;AACrB,SAAa,CACJ,CAAC;AACV,KAAK;AACL,IACI,eAAe,CAAC,KAA2B;AAC/C,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAC9B,iBAAiB,EACjB;AACZ,YAAgB,KAAK;AACrB,SAAa,CACJ,CAAC;AACV,KAAK;AACL,IACI,eAAe,CAAC,EAAU;AAC9B,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAC9B,iBAAiB,EACjB;AACZ,YAAgB,EAAE;AAClB,SAAa,CACJ,CAAC;AACV,KAAK;AACL,IACI,iBAAiB,CAAC,EAAU,EAAE,KAAa;AAC/C,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAC9B,yBAAyB,EACzB;AACZ,YAAgB,EAAE;AAClB,YAAgB,KAAK;AACrB,SAAa,CACJ,CAAC;AACV,KAAK;AACL,IACI,uBAAuB,CAAC,KAAuB;AACnD,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAGhC,0BAA0B,EAAE;AACtC,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,eAAe,CAAC,KAAW,EAAE,GAAS;AAC1C,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAC7B,iBAAiB,EACjB;AACZ,YAAgB,KAAK,EAAE,KAAK,CAAC,WAAW,EAAE;AAC1C,YAAgB,GAAG,EAAE,GAAG,CAAC,WAAW,EAAE;AACtC,SAAa,CACJ,CAAC;AACV,KAAK;AACL,IACI,WAAW,CAAC,KAAuB;AACvC,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAA8C,YAAY,EAAE;AACtG,YAAY,KAAK;AACjB,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,uBAAuB,CAAC,KAAyB;AACrD,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAC9B,2BAA2B,EAC3B,EAAE,KAAK,EAAE,CACZ,CAAC;AACV,KAAK;AACL;AAAE;AC82CF;AACC;AACC;AAEF;AAAI;AAEH;AAAK,IAAM;AAAZ,WAAY,QAAQ;AAClB,IAAA,+BAAmB,CAAA;AACrB,IAAE,+BAAmB,CAAA;AACrB,IAAE,mCAAuB,CAAA;AACzB,IAAE,iCAAqB,CAAA;AACvB,IAAE,6BAAiB,CAAA;AACnB,IAAE,mCAAuB,CAAA;AACzB,CAAC,EAPW,QAAQ,KAAR,QAAQ,QAOnB;AAED,IAo6BY;AAAZ,WAAY,iBAAiB;AAC3B,IAAA,8CAAyB,CAAA;AAC3B,IAAE,8CAAyB,CAAA;AAC3B,IAAE,wCAAmB,CAAA;AACrB,IAAE,kCAAa,CAAA;AACf,IAAE,kDAA6B,CAAA;AAC/B,IAAE,sCAAiB,CAAA;AACnB,CAAC,EAPW,iBAAiB,KAAjB,iBAAiB,QAO5B;AAED,IAgLY;AAAZ,WAAY,SAAS;AACnB,IAAA,4BAAe,CAAA;AACjB,IAAE,4BAAe,CAAA;AACjB,IAAE,8BAAiB,CAAA;AACnB,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;AAED,IA4DY;AAAZ,WAAY,UAAU;AACpB,IAAA,2BAAa,CAAA;AACf,IAAE,6BAAe,CAAA;AACjB,IAAE,iCAAmB,CAAA;AACrB,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB;AAED,IAAY;AAAZ,WAAY,cAAc;AACxB,IAAA,yCAAuB,CAAA;AACzB,IAAE,6EAA2D,CAAA;AAC7D,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB;AAED,IAAY;AAAZ,WAAY,cAAc;AACxB;AACG,IAAH,qCAAmB,CAAA;AACrB;AACG,IAAD,6CAA2B,CAAA;AAC7B,CAAC,EALW,cAAc,KAAd,cAAc,QAKzB;AAED;AACC;AACC;AACC;AAEF;AAAI;AAEH;AAAK,IAAK;AAAZ,WAAY,UAAU;AACpB;AACG,IAAH,6CAA+B,CAAA;AACjC;AACG,IAAD,yDAA2C,CAAA;AAC7C;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,mDAAqC,CAAA;AACvC;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,+CAAiC,CAAA;AACnC;AACG,IAAD,yDAA2C,CAAA;AAC7C;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,yDAA2C,CAAA;AAC7C;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,iDAAmC,CAAA;AACrC;AACG,IAAD,+CAAiC,CAAA;AACnC;AACG,IAAD,2DAA6C,CAAA;AAC/C;AACG,IAAD,2CAA6B,CAAA;AAC/B;AACG,IAAD,qCAAuB,CAAA;AACzB;AACG,IAAD,qDAAuC,CAAA;AACzC;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,uCAAyB,CAAA;AAC3B;AACG,IAAD,yDAA2C,CAAA;AAC7C;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,mDAAqC,CAAA;AACvC;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,+CAAiC,CAAA;AACnC;AACG,IAAD,yDAA2C,CAAA;AAC7C;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,yDAA2C,CAAA;AAC7C;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,iDAAmC,CAAA;AACrC;AACG,IAAD,+CAAiC,CAAA;AACnC;AACG,IAAD,2DAA6C,CAAA;AAC/C;AACG,IAAD,2CAA6B,CAAA;AAC/B;AACG,IAAD,qCAAuB,CAAA;AACzB;AACG,IAAD,qDAAuC,CAAA;AACzC;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,uCAAyB,CAAA;AAC3B;AACG,IAAD,6BAAe,CAAA;AACjB,IAAE,yCAA2B,CAAA;AAC7B;AACG,IAAD,+BAAiB,CAAA;AACnB;AACG,IAAD,qDAAuC,CAAA;AACzC;AACG,IAAD,qCAAuB,CAAA;AACzB;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,+CAAiC,CAAA;AACnC;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,2CAA6B,CAAA;AAC/B;AACG,IAAD,qDAAuC,CAAA;AACzC;AACG,IAAD,qCAAuB,CAAA;AACzB;AACG,IAAD,qCAAuB,CAAA;AACzB;AACG,IAAD,qDAAuC,CAAA;AACzC;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,2CAA6B,CAAA;AAC/B;AACG,IAAD,uDAAyC,CAAA;AAC3C;AACG,IAAD,uCAAyB,CAAA;AAC3B;AACG,IAAD,iCAAmB,CAAA;AACrB;AACG,IAAD,iDAAmC,CAAA;AACrC;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,mCAAqB,CAAA;AACvB;AACG,IAAD,uCAAyB,CAAA;AAC3B;AACG,IAAD,yDAA2C,CAAA;AAC7C;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,mDAAqC,CAAA;AACvC;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,+CAAiC,CAAA;AACnC;AACG,IAAD,yDAA2C,CAAA;AAC7C;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,2DAA6C,CAAA;AAC/C;AACG,IAAD,yCAA2B,CAAA;AAC7B;AACG,IAAD,yDAA2C,CAAA;AAC7C;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,iDAAmC,CAAA;AACrC;AACG,IAAD,+CAAiC,CAAA;AACnC;AACG,IAAD,2DAA6C,CAAA;AAC/C;AACG,IAAD,2CAA6B,CAAA;AAC/B;AACG,IAAD,qCAAuB,CAAA;AACzB;AACG,IAAD,qDAAuC,CAAA;AACzC;AACG,IAAD,6CAA+B,CAAA;AACjC;AACG,IAAD,uCAAyB,CAAA;AAC3B,CAAC,EA5KW,UAAU,KAAV,UAAU,QA4KrB;AAED,IAAY;AAAZ,WAAY,SAAS;AACnB,IAAA,wBAAW,CAAA;AACb,IAAE,0BAAa,CAAA;AACf,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB;AAED,IAAY;AAAZ,WAAY,SAAS;AACnB,IAAA,4CAA+B,CAAA;AACjC,IAAE,gDAAmC,CAAA;AACrC,IAAE,0EAA6D,CAAA;AAC/D,IAAE,8EAAiE,CAAA;AACnE,IAAE,0DAA6C,CAAA;AAC/C,IAAE,kFAAqE,CAAA;AACvE,IAAE,4EAA+D,CAAA;AACjE,IAAE,oFAAuE,CAAA;AACzE,IAAE,kEAAqD,CAAA;AACvD,IAAE,kFAAqE,CAAA;AACvE,IAAE,0DAA6C,CAAA;AAC/C,IAAE,oEAAuD,CAAA;AACzD,IAAE,0EAA6D,CAAA;AAC/D,IAAE,kEAAqD,CAAA;AACvD,IAAE,gEAAmD,CAAA;AACrD,IAAE,8DAAiD,CAAA;AACnD,IAAE,kEAAqD,CAAA;AACvD,IAAE,4EAA+D,CAAA;AACjE,IAAE,8EAAiE,CAAA;AACnE,IAAE,sFAAyE,CAAA;AAC3E,IAAE,8EAAiE,CAAA;AACnE,IAAE,sEAAyD,CAAA;AAC3D,IAAE,0EAA6D,CAAA;AAC/D,IAAE,gFAAmE,CAAA;AACrE,IAAE,sEAAyD,CAAA;AAC3D,IAAE,wEAA2D,CAAA;AAC7D,IAAE,kEAAqD,CAAA;AACvD,IAAE,sEAAyD,CAAA;AAC3D,IAAE,oEAAuD,CAAA;AACzD,IAAE,0EAA6D,CAAA;AAC/D,IAAE,0EAA6D,CAAA;AAC/D,IAAE,oDAAuC,CAAA;AACzC,IAAE,gEAAmD,CAAA;AACrD,IAAE,kEAAqD,CAAA;AACvD,CAAC,EAnCW,SAAS,KAAT,SAAS,QAmCpB;AAED,IAAY;AAAZ,WAAY,eAAe;AACzB,IAAA,8BAAW,CAAA;AACb,IAAE,4BAAS,CAAA;AACX,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B;AA+SD;AACC;AACC;AAEF;AAAI;AAEH;AAAK,IAAM;AAAZ,WAAY,YAAY;AACtB;AACG,IAAH,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA;AACb;AACG,IAAD,2BAAW,CAAA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Ae,CAAA;AACjB;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,+BAAe,CAAA;AACjB;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,+BAAe,CAAA;AACjB;AACG,IAAD,+BAAe,CAAA;AACjB;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,+BAAe,CAAA;AACjB;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,+BAAe,CAAA;AACjB;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS,CAAA;AACX;AACG,IAAD,yBAAS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","sourcesContent":["import { gql } from 'apollo-angular';\r\n\r\nexport const ROLE_FRAGMENT = gql`\r\n    fragment Role on Role {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        description\r\n        permissions\r\n        channels {\r\n            id\r\n            code\r\n            token\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADMINISTRATOR_FRAGMENT = gql`\r\n    fragment Administrator on Administrator {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        firstName\r\n        lastName\r\n        emailAddress\r\n        user {\r\n            id\r\n            identifier\r\n            lastLogin\r\n            roles {\r\n                ...Role\r\n            }\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ADMINISTRATORS = gql`\r\n    query GetAdministrators($options: AdministratorListOptions) {\r\n        administrators(options: $options) {\r\n            items {\r\n                ...Administrator\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ACTIVE_ADMINISTRATOR = gql`\r\n    query GetActiveAdministrator {\r\n        activeAdministrator {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ADMINISTRATOR = gql`\r\n    query GetAdministrator($id: ID!) {\r\n        administrator(id: $id) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_ADMINISTRATOR = gql`\r\n    mutation CreateAdministrator($input: CreateAdministratorInput!) {\r\n        createAdministrator(input: $input) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ADMINISTRATOR = gql`\r\n    mutation UpdateAdministrator($input: UpdateAdministratorInput!) {\r\n        updateAdministrator(input: $input) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ACTIVE_ADMINISTRATOR = gql`\r\n    mutation UpdateActiveAdministrator($input: UpdateActiveAdministratorInput!) {\r\n        updateActiveAdministrator(input: $input) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_ADMINISTRATOR = gql`\r\n    mutation DeleteAdministrator($id: ID!) {\r\n        deleteAdministrator(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_ROLES = gql`\r\n    query GetRoles($options: RoleListOptions) {\r\n        roles(options: $options) {\r\n            items {\r\n                ...Role\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ROLE = gql`\r\n    query GetRole($id: ID!) {\r\n        role(id: $id) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_ROLE = gql`\r\n    mutation CreateRole($input: CreateRoleInput!) {\r\n        createRole(input: $input) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ROLE = gql`\r\n    mutation UpdateRole($input: UpdateRoleInput!) {\r\n        updateRole(input: $input) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_ROLE = gql`\r\n    mutation DeleteRole($id: ID!) {\r\n        deleteRole(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ASSIGN_ROLE_TO_ADMINISTRATOR = gql`\r\n    mutation AssignRoleToAdministrator($administratorId: ID!, $roleId: ID!) {\r\n        assignRoleToAdministrator(administratorId: $administratorId, roleId: $roleId) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n","import { FetchPolicy } from '@apollo/client';\n\nimport {\n    CreateAdministrator,\n    CreateAdministratorInput,\n    CreateRole,\n    CreateRoleInput,\n    DeleteAdministrator,\n    DeleteRole,\n    GetActiveAdministrator,\n    GetAdministrator,\n    GetAdministrators,\n    GetRole,\n    GetRoles,\n    UpdateActiveAdministrator,\n    UpdateActiveAdministratorInput,\n    UpdateAdministrator,\n    UpdateAdministratorInput,\n    UpdateRole,\n    UpdateRoleInput,\n} from '../../common/generated-types';\nimport {\n    CREATE_ADMINISTRATOR,\n    CREATE_ROLE,\n    DELETE_ADMINISTRATOR,\n    DELETE_ROLE,\n    GET_ACTIVE_ADMINISTRATOR,\n    GET_ADMINISTRATOR,\n    GET_ADMINISTRATORS,\n    GET_ROLE,\n    GET_ROLES,\n    UPDATE_ACTIVE_ADMINISTRATOR,\n    UPDATE_ADMINISTRATOR,\n    UPDATE_ROLE,\n} from '../definitions/administrator-definitions';\n\nimport { BaseDataService } from './base-data.service';\n\nexport class AdministratorDataService {\n    constructor(private baseDataService: BaseDataService) {}\n\n    getAdministrators(take: number = 10, skip: number = 0) {\n        return this.baseDataService.query<GetAdministrators.Query, GetAdministrators.Variables>(\n            GET_ADMINISTRATORS,\n            {\n                options: {\n                    take,\n                    skip,\n                },\n            },\n        );\n    }\n\n    getActiveAdministrator(fetchPolicy: FetchPolicy = 'cache-first') {\n        return this.baseDataService.query<GetActiveAdministrator.Query>(\n            GET_ACTIVE_ADMINISTRATOR,\n            {},\n            fetchPolicy,\n        );\n    }\n\n    getAdministrator(id: string) {\n        return this.baseDataService.query<GetAdministrator.Query, GetAdministrator.Variables>(\n            GET_ADMINISTRATOR,\n            {\n                id,\n            },\n        );\n    }\n\n    createAdministrator(input: CreateAdministratorInput) {\n        return this.baseDataService.mutate<CreateAdministrator.Mutation, CreateAdministrator.Variables>(\n            CREATE_ADMINISTRATOR,\n            { input },\n        );\n    }\n\n    updateAdministrator(input: UpdateAdministratorInput) {\n        return this.baseDataService.mutate<UpdateAdministrator.Mutation, UpdateAdministrator.Variables>(\n            UPDATE_ADMINISTRATOR,\n            { input },\n        );\n    }\n\n    updateActiveAdministrator(input: UpdateActiveAdministratorInput) {\n        return this.baseDataService.mutate<\n            UpdateActiveAdministrator.Mutation,\n            UpdateActiveAdministrator.Variables\n        >(UPDATE_ACTIVE_ADMINISTRATOR, { input });\n    }\n\n    deleteAdministrator(id: string) {\n        return this.baseDataService.mutate<DeleteAdministrator.Mutation, DeleteAdministrator.Variables>(\n            DELETE_ADMINISTRATOR,\n            { id },\n        );\n    }\n\n    getRoles(take: number = 10, skip: number = 0) {\n        return this.baseDataService.query<GetRoles.Query, GetRoles.Variables>(GET_ROLES, {\n            options: {\n                take,\n                skip,\n            },\n        });\n    }\n\n    getRole(id: string) {\n        return this.baseDataService.query<GetRole.Query, GetRole.Variables>(GET_ROLE, { id });\n    }\n\n    createRole(input: CreateRoleInput) {\n        return this.baseDataService.mutate<CreateRole.Mutation, CreateRole.Variables>(CREATE_ROLE, { input });\n    }\n\n    updateRole(input: UpdateRoleInput) {\n        return this.baseDataService.mutate<UpdateRole.Mutation, UpdateRole.Variables>(UPDATE_ROLE, { input });\n    }\n\n    deleteRole(id: string) {\n        return this.baseDataService.mutate<DeleteRole.Mutation, DeleteRole.Variables>(DELETE_ROLE, { id });\n    }\n}\n","import { gql } from 'apollo-angular';\n\nexport const CONFIGURABLE_OPERATION_FRAGMENT = gql`\n    fragment ConfigurableOperation on ConfigurableOperation {\n        args {\n            name\n            value\n        }\n        code\n    }\n`;\n\nexport const CONFIGURABLE_OPERATION_DEF_FRAGMENT = gql`\n    fragment ConfigurableOperationDef on ConfigurableOperationDefinition {\n        args {\n            name\n            type\n            required\n            defaultValue\n            list\n            ui\n            label\n        }\n        code\n        description\n    }\n`;\n\nexport const ERROR_RESULT_FRAGMENT = gql`\n    fragment ErrorResult on ErrorResult {\n        errorCode\n        message\n    }\n`;\n","import { gql } from 'apollo-angular';\r\n\r\nimport { ERROR_RESULT_FRAGMENT } from './shared-definitions';\r\n\r\nexport const CURRENT_USER_FRAGMENT = gql`\r\n    fragment CurrentUser on CurrentUser {\r\n        id\r\n        identifier\r\n        channels {\r\n            id\r\n            code\r\n            token\r\n            permissions\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ATTEMPT_LOGIN = gql`\r\n    mutation AttemptLogin($username: String!, $password: String!, $rememberMe: Boolean!) {\r\n        login(username: $username, password: $password, rememberMe: $rememberMe) {\r\n            ...CurrentUser\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CURRENT_USER_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const LOG_OUT = gql`\r\n    mutation LogOut {\r\n        logout {\r\n            success\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CURRENT_USER = gql`\r\n    query GetCurrentUser {\r\n        me {\r\n            ...CurrentUser\r\n        }\r\n    }\r\n    ${CURRENT_USER_FRAGMENT}\r\n`;\r\n","import { AttemptLogin, GetCurrentUser, LogOut } from '../../common/generated-types';\r\nimport { ATTEMPT_LOGIN, GET_CURRENT_USER, LOG_OUT } from '../definitions/auth-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class AuthDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    currentUser() {\r\n        return this.baseDataService.query<GetCurrentUser.Query>(GET_CURRENT_USER);\r\n    }\r\n\r\n    attemptLogin(username: string, password: string, rememberMe: boolean) {\r\n        return this.baseDataService.mutate<AttemptLogin.Mutation, AttemptLogin.Variables>(ATTEMPT_LOGIN, {\r\n            username,\r\n            password,\r\n            rememberMe,\r\n        });\r\n    }\r\n\r\n    logOut() {\r\n        return this.baseDataService.mutate<LogOut.Mutation>(LOG_OUT);\r\n    }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { LanguageCode } from '../../common/generated-types';\r\nimport { WidgetLayoutDefinition } from '../dashboard-widget/dashboard-widget-types';\r\n\r\nexport type LocalStorageTypeMap = {\r\n    activeChannelToken: string;\r\n    authToken: string;\r\n    uiLanguageCode: LanguageCode;\r\n    contentLanguageCode: LanguageCode;\r\n    orderListLastCustomFilters: any;\r\n    dashboardWidgetLayout: WidgetLayoutDefinition;\r\n    activeTheme: string;\r\n};\r\n\r\nexport type LocalStorageLocationBasedTypeMap = {\r\n    shippingTestOrder: any;\r\n    shippingTestAddress: any;\r\n};\r\n\r\nconst PREFIX = 'vnd_';\r\n\r\n/**\r\n * Wrapper around the browser's LocalStorage / SessionStorage object, for persisting data to the browser.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocalStorageService {\r\n    constructor(private location: Location) {}\r\n    /**\r\n     * Set a key-value pair in the browser's LocalStorage\r\n     */\r\n    public set<K extends keyof LocalStorageTypeMap>(key: K, value: LocalStorageTypeMap[K]): void {\r\n        const keyName = this.keyName(key);\r\n        localStorage.setItem(keyName, JSON.stringify(value));\r\n    }\r\n\r\n    /**\r\n     * Set a key-value pair specific to the current location (url)\r\n     */\r\n    public setForCurrentLocation<K extends keyof LocalStorageLocationBasedTypeMap>(\r\n        key: K,\r\n        value: LocalStorageLocationBasedTypeMap[K],\r\n    ) {\r\n        const compositeKey = this.getLocationBasedKey(key);\r\n        this.set(compositeKey as any, value);\r\n    }\r\n\r\n    /**\r\n     * Set a key-value pair in the browser's SessionStorage\r\n     */\r\n    public setForSession<K extends keyof LocalStorageTypeMap>(key: K, value: LocalStorageTypeMap[K]): void {\r\n        const keyName = this.keyName(key);\r\n        sessionStorage.setItem(keyName, JSON.stringify(value));\r\n    }\r\n\r\n    /**\r\n     * Get the value of the given key from the SessionStorage or LocalStorage.\r\n     */\r\n    public get<K extends keyof LocalStorageTypeMap>(key: K): LocalStorageTypeMap[K] | null {\r\n        const keyName = this.keyName(key);\r\n        const item = sessionStorage.getItem(keyName) || localStorage.getItem(keyName);\r\n        let result: any;\r\n        try {\r\n            result = JSON.parse(item || 'null');\r\n        } catch (e) {\r\n            // tslint:disable-next-line:no-console\r\n            console.error(`Could not parse the localStorage value for \"${key}\" (${item})`);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Get the value of the given key for the current location (url)\r\n     */\r\n    public getForCurrentLocation<K extends keyof LocalStorageLocationBasedTypeMap>(\r\n        key: K,\r\n    ): LocalStorageLocationBasedTypeMap[K] {\r\n        const compositeKey = this.getLocationBasedKey(key);\r\n        return this.get(compositeKey as any);\r\n    }\r\n\r\n    public remove(key: keyof LocalStorageTypeMap): void {\r\n        const keyName = this.keyName(key);\r\n        sessionStorage.removeItem(keyName);\r\n        localStorage.removeItem(keyName);\r\n    }\r\n\r\n    private getLocationBasedKey(key: string) {\r\n        const path = this.location.path();\r\n        return key + path;\r\n    }\r\n\r\n    private keyName(key: keyof LocalStorageTypeMap): string {\r\n        return PREFIX + key;\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nexport const REQUEST_STARTED = gql`\r\n    mutation RequestStarted {\r\n        requestStarted @client\r\n    }\r\n`;\r\n\r\nexport const REQUEST_COMPLETED = gql`\r\n    mutation RequestCompleted {\r\n        requestCompleted @client\r\n    }\r\n`;\r\n\r\nexport const USER_STATUS_FRAGMENT = gql`\r\n    fragment UserStatus on UserStatus {\r\n        username\r\n        isLoggedIn\r\n        loginTime\r\n        activeChannelId\r\n        permissions\r\n        channels {\r\n            id\r\n            code\r\n            token\r\n            permissions\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SET_AS_LOGGED_IN = gql`\r\n    mutation SetAsLoggedIn($input: UserStatusInput!) {\r\n        setAsLoggedIn(input: $input) @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const SET_AS_LOGGED_OUT = gql`\r\n    mutation SetAsLoggedOut {\r\n        setAsLoggedOut @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const SET_UI_LANGUAGE = gql`\r\n    mutation SetUiLanguage($languageCode: LanguageCode!) {\r\n        setUiLanguage(languageCode: $languageCode) @client\r\n    }\r\n`;\r\n\r\nexport const SET_CONTENT_LANGUAGE = gql`\r\n    mutation SetContentLanguage($languageCode: LanguageCode!) {\r\n        setContentLanguage(languageCode: $languageCode) @client\r\n    }\r\n`;\r\n\r\nexport const SET_UI_THEME = gql`\r\n    mutation SetUiTheme($theme: String!) {\r\n        setUiTheme(theme: $theme) @client\r\n    }\r\n`;\r\n\r\nexport const GET_NEWTORK_STATUS = gql`\r\n    query GetNetworkStatus {\r\n        networkStatus @client {\r\n            inFlightRequests\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_USER_STATUS = gql`\r\n    query GetUserStatus {\r\n        userStatus @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const GET_UI_STATE = gql`\r\n    query GetUiState {\r\n        uiState @client {\r\n            language\r\n            contentLanguage\r\n            theme\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CLIENT_STATE = gql`\r\n    query GetClientState {\r\n        networkStatus @client {\r\n            inFlightRequests\r\n        }\r\n        userStatus @client {\r\n            ...UserStatus\r\n        }\r\n        uiState @client {\r\n            language\r\n            contentLanguage\r\n            theme\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const SET_ACTIVE_CHANNEL = gql`\r\n    mutation SetActiveChannel($channelId: ID!) {\r\n        setActiveChannel(channelId: $channelId) @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_USER_CHANNELS = gql`\r\n    mutation UpdateUserChannels($channels: [CurrentUserChannelInput!]!) {\r\n        updateUserChannels(channels: $channels) @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n","import { ApolloQueryResult, NetworkStatus } from '@apollo/client/core';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { Apollo, QueryRef } from 'apollo-angular';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, finalize, map, skip, take, takeUntil, tap } from 'rxjs/operators';\n\nimport { GetUserStatus } from '../common/generated-types';\n\nimport { GET_USER_STATUS } from './definitions/client-definitions';\n\n/**\n * This class wraps the Apollo Angular QueryRef object and exposes some getters\n * for convenience.\n */\nexport class QueryResult<T, V = Record<string, any>> {\n    constructor(private queryRef: QueryRef<T, V>, private apollo: Apollo) {\n        this.valueChanges = queryRef.valueChanges;\n    }\n\n    completed$ = new Subject();\n    private valueChanges: Observable<ApolloQueryResult<T>>;\n\n    /**\n     * Refetch this query whenever the active Channel changes.\n     */\n    refetchOnChannelChange() {\n        const userStatus$ = this.apollo.watchQuery<GetUserStatus.Query>({ query: GET_USER_STATUS })\n            .valueChanges;\n        const activeChannelId$ = userStatus$.pipe(\n            map(data => data.data.userStatus.activeChannelId),\n            filter(notNullOrUndefined),\n            distinctUntilChanged(),\n            skip(1),\n            takeUntil(this.completed$),\n        );\n        const loggedOut$ = userStatus$.pipe(\n            map(data => data.data.userStatus.isLoggedIn),\n            distinctUntilChanged(),\n            skip(1),\n            filter(isLoggedIn => !isLoggedIn),\n            takeUntil(this.completed$),\n        );\n\n        this.valueChanges = merge(activeChannelId$, this.queryRef.valueChanges).pipe(\n            tap(val => {\n                if (typeof val === 'string') {\n                    new Promise(resolve => setTimeout(resolve, 50)).then(() => this.queryRef.refetch());\n                }\n            }),\n            filter<any>(val => typeof val !== 'string'),\n            takeUntil(loggedOut$),\n            takeUntil(this.completed$),\n        );\n        this.queryRef.valueChanges = this.valueChanges;\n        return this;\n    }\n\n    /**\n     * Returns an Observable which emits a single result and then completes.\n     */\n    get single$(): Observable<T> {\n        return this.valueChanges.pipe(\n            filter(result => result.networkStatus === NetworkStatus.ready),\n            take(1),\n            map(result => result.data),\n            finalize(() => {\n                this.completed$.next();\n                this.completed$.complete();\n            }),\n        );\n    }\n\n    /**\n     * Returns an Observable which emits until unsubscribed.\n     */\n    get stream$(): Observable<T> {\n        return this.valueChanges.pipe(\n            filter(result => result.networkStatus === NetworkStatus.ready),\n            map(result => result.data),\n            finalize(() => {\n                this.completed$.next();\n                this.completed$.complete();\n            }),\n        );\n    }\n\n    get ref(): QueryRef<T, V> {\n        return this.queryRef;\n    }\n\n    /**\n     * Returns a single-result Observable after applying the map function.\n     */\n    mapSingle<R>(mapFn: (item: T) => R): Observable<R> {\n        return this.single$.pipe(map(mapFn));\n    }\n\n    /**\n     * Returns a multiple-result Observable after applying the map function.\n     */\n    mapStream<R>(mapFn: (item: T) => R): Observable<R> {\n        return this.stream$.pipe(map(mapFn));\n    }\n}\n","import { gql } from 'apollo-angular';\r\n\r\nimport {\r\n    CONFIGURABLE_OPERATION_DEF_FRAGMENT,\r\n    CONFIGURABLE_OPERATION_FRAGMENT,\r\n    ERROR_RESULT_FRAGMENT,\r\n} from './shared-definitions';\r\n\r\nexport const COUNTRY_FRAGMENT = gql`\r\n    fragment Country on Country {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        name\r\n        enabled\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_COUNTRY_LIST = gql`\r\n    query GetCountryList($options: CountryListOptions) {\r\n        countries(options: $options) {\r\n            items {\r\n                id\r\n                code\r\n                name\r\n                enabled\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_AVAILABLE_COUNTRIES = gql`\r\n    query GetAvailableCountries {\r\n        countries(options: { filter: { enabled: { eq: true } } }) {\r\n            items {\r\n                id\r\n                code\r\n                name\r\n                enabled\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_COUNTRY = gql`\r\n    query GetCountry($id: ID!) {\r\n        country(id: $id) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_COUNTRY = gql`\r\n    mutation CreateCountry($input: CreateCountryInput!) {\r\n        createCountry(input: $input) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_COUNTRY = gql`\r\n    mutation UpdateCountry($input: UpdateCountryInput!) {\r\n        updateCountry(input: $input) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_COUNTRY = gql`\r\n    mutation DeleteCountry($id: ID!) {\r\n        deleteCountry(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ZONE_FRAGMENT = gql`\r\n    fragment Zone on Zone {\r\n        id\r\n        name\r\n        members {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ZONES = gql`\r\n    query GetZones {\r\n        zones {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            members {\r\n                createdAt\r\n                updatedAt\r\n                id\r\n                name\r\n                code\r\n                enabled\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_ZONE = gql`\r\n    query GetZone($id: ID!) {\r\n        zone(id: $id) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_ZONE = gql`\r\n    mutation CreateZone($input: CreateZoneInput!) {\r\n        createZone(input: $input) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ZONE = gql`\r\n    mutation UpdateZone($input: UpdateZoneInput!) {\r\n        updateZone(input: $input) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_ZONE = gql`\r\n    mutation DeleteZone($id: ID!) {\r\n        deleteZone(id: $id) {\r\n            message\r\n            result\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_MEMBERS_TO_ZONE = gql`\r\n    mutation AddMembersToZone($zoneId: ID!, $memberIds: [ID!]!) {\r\n        addMembersToZone(zoneId: $zoneId, memberIds: $memberIds) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const REMOVE_MEMBERS_FROM_ZONE = gql`\r\n    mutation RemoveMembersFromZone($zoneId: ID!, $memberIds: [ID!]!) {\r\n        removeMembersFromZone(zoneId: $zoneId, memberIds: $memberIds) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const TAX_CATEGORY_FRAGMENT = gql`\r\n    fragment TaxCategory on TaxCategory {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        isDefault\r\n    }\r\n`;\r\n\r\nexport const GET_TAX_CATEGORIES = gql`\r\n    query GetTaxCategories {\r\n        taxCategories {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\n\r\nexport const GET_TAX_CATEGORY = gql`\r\n    query GetTaxCategory($id: ID!) {\r\n        taxCategory(id: $id) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_TAX_CATEGORY = gql`\r\n    mutation CreateTaxCategory($input: CreateTaxCategoryInput!) {\r\n        createTaxCategory(input: $input) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_TAX_CATEGORY = gql`\r\n    mutation UpdateTaxCategory($input: UpdateTaxCategoryInput!) {\r\n        updateTaxCategory(input: $input) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_TAX_CATEGORY = gql`\r\n    mutation DeleteTaxCategory($id: ID!) {\r\n        deleteTaxCategory(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TAX_RATE_FRAGMENT = gql`\r\n    fragment TaxRate on TaxRate {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        enabled\r\n        value\r\n        category {\r\n            id\r\n            name\r\n        }\r\n        zone {\r\n            id\r\n            name\r\n        }\r\n        customerGroup {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_TAX_RATE_LIST = gql`\r\n    query GetTaxRateList($options: TaxRateListOptions) {\r\n        taxRates(options: $options) {\r\n            items {\r\n                ...TaxRate\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_TAX_RATE = gql`\r\n    query GetTaxRate($id: ID!) {\r\n        taxRate(id: $id) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_TAX_RATE = gql`\r\n    mutation CreateTaxRate($input: CreateTaxRateInput!) {\r\n        createTaxRate(input: $input) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_TAX_RATE = gql`\r\n    mutation UpdateTaxRate($input: UpdateTaxRateInput!) {\r\n        updateTaxRate(input: $input) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_TAX_RATE = gql`\r\n    mutation DeleteTaxRate($id: ID!) {\r\n        deleteTaxRate(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CHANNEL_FRAGMENT = gql`\r\n    fragment Channel on Channel {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        token\r\n        pricesIncludeTax\r\n        currencyCode\r\n        defaultLanguageCode\r\n        defaultShippingZone {\r\n            id\r\n            name\r\n        }\r\n        defaultTaxZone {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CHANNELS = gql`\r\n    query GetChannels {\r\n        channels {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\r\n\r\nexport const GET_CHANNEL = gql`\r\n    query GetChannel($id: ID!) {\r\n        channel(id: $id) {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ACTIVE_CHANNEL = gql`\r\n    query GetActiveChannel {\r\n        activeChannel {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_CHANNEL = gql`\r\n    mutation CreateChannel($input: CreateChannelInput!) {\r\n        createChannel(input: $input) {\r\n            ...Channel\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_CHANNEL = gql`\r\n    mutation UpdateChannel($input: UpdateChannelInput!) {\r\n        updateChannel(input: $input) {\r\n            ...Channel\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_CHANNEL = gql`\r\n    mutation DeleteChannel($id: ID!) {\r\n        deleteChannel(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PAYMENT_METHOD_FRAGMENT = gql`\r\n    fragment PaymentMethod on PaymentMethod {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        code\r\n        description\r\n        enabled\r\n        checker {\r\n            ...ConfigurableOperation\r\n        }\r\n        handler {\r\n            ...ConfigurableOperation\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PAYMENT_METHOD_LIST = gql`\r\n    query GetPaymentMethodList($options: PaymentMethodListOptions!) {\r\n        paymentMethods(options: $options) {\r\n            items {\r\n                ...PaymentMethod\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PAYMENT_METHOD_OPERATIONS = gql`\r\n    query GetPaymentMethodOperations {\r\n        paymentMethodEligibilityCheckers {\r\n            ...ConfigurableOperationDef\r\n        }\r\n        paymentMethodHandlers {\r\n            ...ConfigurableOperationDef\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PAYMENT_METHOD = gql`\r\n    query GetPaymentMethod($id: ID!) {\r\n        paymentMethod(id: $id) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_PAYMENT_METHOD = gql`\r\n    mutation CreatePaymentMethod($input: CreatePaymentMethodInput!) {\r\n        createPaymentMethod(input: $input) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_PAYMENT_METHOD = gql`\r\n    mutation UpdatePaymentMethod($input: UpdatePaymentMethodInput!) {\r\n        updatePaymentMethod(input: $input) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_PAYMENT_METHOD = gql`\r\n    mutation DeletePaymentMethod($id: ID!, $force: Boolean) {\r\n        deletePaymentMethod(id: $id, force: $force) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GLOBAL_SETTINGS_FRAGMENT = gql`\r\n    fragment GlobalSettings on GlobalSettings {\r\n        id\r\n        availableLanguages\r\n        trackInventory\r\n        outOfStockThreshold\r\n        serverConfig {\r\n            permissions {\r\n                name\r\n                description\r\n                assignable\r\n            }\r\n            orderProcess {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_GLOBAL_SETTINGS = gql`\r\n    query GetGlobalSettings {\r\n        globalSettings {\r\n            ...GlobalSettings\r\n        }\r\n    }\r\n    ${GLOBAL_SETTINGS_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_GLOBAL_SETTINGS = gql`\r\n    mutation UpdateGlobalSettings($input: UpdateGlobalSettingsInput!) {\r\n        updateGlobalSettings(input: $input) {\r\n            ...GlobalSettings\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${GLOBAL_SETTINGS_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const CUSTOM_FIELD_CONFIG_FRAGMENT = gql`\r\n    fragment CustomFieldConfig on CustomField {\r\n        name\r\n        type\r\n        list\r\n        description {\r\n            languageCode\r\n            value\r\n        }\r\n        label {\r\n            languageCode\r\n            value\r\n        }\r\n        readonly\r\n    }\r\n`;\r\n\r\nexport const STRING_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment StringCustomField on StringCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        pattern\r\n        options {\r\n            label {\r\n                languageCode\r\n                value\r\n            }\r\n            value\r\n        }\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const LOCALE_STRING_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment LocaleStringCustomField on LocaleStringCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        pattern\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const TEXT_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment TextCustomField on TextCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const BOOLEAN_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment BooleanCustomField on BooleanCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const INT_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment IntCustomField on IntCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        intMin: min\r\n        intMax: max\r\n        intStep: step\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const FLOAT_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment FloatCustomField on FloatCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        floatMin: min\r\n        floatMax: max\r\n        floatStep: step\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const DATE_TIME_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment DateTimeCustomField on DateTimeCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        datetimeMin: min\r\n        datetimeMax: max\r\n        datetimeStep: step\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const RELATION_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment RelationCustomField on RelationCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        entity\r\n        scalarFields\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\n\r\nexport const ALL_CUSTOM_FIELDS_FRAGMENT = gql`\r\n    fragment CustomFields on CustomField {\r\n        ... on StringCustomFieldConfig {\r\n            ...StringCustomField\r\n        }\r\n        ... on LocaleStringCustomFieldConfig {\r\n            ...LocaleStringCustomField\r\n        }\r\n        ... on TextCustomFieldConfig {\r\n            ...TextCustomField\r\n        }\r\n        ... on BooleanCustomFieldConfig {\r\n            ...BooleanCustomField\r\n        }\r\n        ... on IntCustomFieldConfig {\r\n            ...IntCustomField\r\n        }\r\n        ... on FloatCustomFieldConfig {\r\n            ...FloatCustomField\r\n        }\r\n        ... on DateTimeCustomFieldConfig {\r\n            ...DateTimeCustomField\r\n        }\r\n        ... on RelationCustomFieldConfig {\r\n            ...RelationCustomField\r\n        }\r\n    }\r\n    ${STRING_CUSTOM_FIELD_FRAGMENT}\r\n    ${LOCALE_STRING_CUSTOM_FIELD_FRAGMENT}\r\n    ${TEXT_CUSTOM_FIELD_FRAGMENT}\r\n    ${BOOLEAN_CUSTOM_FIELD_FRAGMENT}\r\n    ${INT_CUSTOM_FIELD_FRAGMENT}\r\n    ${FLOAT_CUSTOM_FIELD_FRAGMENT}\r\n    ${DATE_TIME_CUSTOM_FIELD_FRAGMENT}\r\n    ${RELATION_CUSTOM_FIELD_FRAGMENT}\r\n`;\r\n\r\nexport const GET_SERVER_CONFIG = gql`\r\n    query GetServerConfig {\r\n        globalSettings {\r\n            id\r\n            serverConfig {\r\n                orderProcess {\r\n                    name\r\n                    to\r\n                }\r\n                permittedAssetTypes\r\n                permissions {\r\n                    name\r\n                    description\r\n                    assignable\r\n                }\r\n                customFieldConfig {\r\n                    Address {\r\n                        ...CustomFields\r\n                    }\r\n                    Administrator {\r\n                        ...CustomFields\r\n                    }\r\n                    Asset {\r\n                        ...CustomFields\r\n                    }\r\n                    Channel {\r\n                        ...CustomFields\r\n                    }\r\n                    Collection {\r\n                        ...CustomFields\r\n                    }\r\n                    Customer {\r\n                        ...CustomFields\r\n                    }\r\n                    Facet {\r\n                        ...CustomFields\r\n                    }\r\n                    FacetValue {\r\n                        ...CustomFields\r\n                    }\r\n                    Fulfillment {\r\n                        ...CustomFields\r\n                    }\r\n                    GlobalSettings {\r\n                        ...CustomFields\r\n                    }\r\n                    Order {\r\n                        ...CustomFields\r\n                    }\r\n                    OrderLine {\r\n                        ...CustomFields\r\n                    }\r\n                    Product {\r\n                        ...CustomFields\r\n                    }\r\n                    ProductOption {\r\n                        ...CustomFields\r\n                    }\r\n                    ProductOptionGroup {\r\n                        ...CustomFields\r\n                    }\r\n                    ProductVariant {\r\n                        ...CustomFields\r\n                    }\r\n                    ShippingMethod {\r\n                        ...CustomFields\r\n                    }\r\n                    User {\r\n                        ...CustomFields\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${ALL_CUSTOM_FIELDS_FRAGMENT}\r\n`;\r\n\r\nexport const JOB_INFO_FRAGMENT = gql`\r\n    fragment JobInfo on Job {\r\n        id\r\n        createdAt\r\n        startedAt\r\n        settledAt\r\n        queueName\r\n        state\r\n        isSettled\r\n        progress\r\n        duration\r\n        data\r\n        result\r\n        error\r\n    }\r\n`;\r\n\r\nexport const GET_JOB_INFO = gql`\r\n    query GetJobInfo($id: ID!) {\r\n        job(jobId: $id) {\r\n            ...JobInfo\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n\r\nexport const GET_JOBS_LIST = gql`\r\n    query GetAllJobs($options: JobListOptions) {\r\n        jobs(options: $options) {\r\n            items {\r\n                ...JobInfo\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n\r\nexport const GET_JOBS_BY_ID = gql`\r\n    query GetJobsById($ids: [ID!]!) {\r\n        jobsById(jobIds: $ids) {\r\n            ...JobInfo\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n\r\nexport const GET_JOB_QUEUE_LIST = gql`\r\n    query GetJobQueueList {\r\n        jobQueues {\r\n            name\r\n            running\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CANCEL_JOB = gql`\r\n    mutation CancelJob($id: ID!) {\r\n        cancelJob(jobId: $id) {\r\n            ...JobInfo\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n\r\nexport const REINDEX = gql`\r\n    mutation Reindex {\r\n        reindex {\r\n            ...JobInfo\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n","import { Injectable, Injector } from '@angular/core';\n\nimport {\n    CustomFieldConfig,\n    CustomFields,\n    GetGlobalSettings,\n    GetServerConfig,\n    OrderProcessState,\n    PermissionDefinition,\n    ServerConfig,\n} from '../common/generated-types';\n\nimport { GET_GLOBAL_SETTINGS, GET_SERVER_CONFIG } from './definitions/settings-definitions';\nimport { BaseDataService } from './providers/base-data.service';\n\nexport function initializeServerConfigService(serverConfigService: ServerConfigService): () => Promise<any> {\n    return serverConfigService.init();\n}\n\n/**\n * A service which fetches the config from the server upon initialization, and then provides that config\n * to the components which require it.\n */\n@Injectable()\nexport class ServerConfigService {\n    private _serverConfig: ServerConfig = {} as any;\n\n    private get baseDataService() {\n        return this.injector.get<BaseDataService>(BaseDataService);\n    }\n\n    constructor(private injector: Injector) {}\n\n    /**\n     * Fetches the ServerConfig. Should be run as part of the app bootstrap process by attaching\n     * to the Angular APP_INITIALIZER token.\n     */\n    init(): () => Promise<any> {\n        return () => this.getServerConfig();\n    }\n\n    /**\n     * Fetch the ServerConfig. Should be run on app init (in case user is already logged in) and on successful login.\n     */\n    getServerConfig() {\n        return this.baseDataService\n            .query<GetServerConfig.Query>(GET_SERVER_CONFIG)\n            .single$.toPromise()\n            .then(\n                result => {\n                    this._serverConfig = result.globalSettings.serverConfig;\n                },\n                err => {\n                    // Let the error fall through to be caught by the http interceptor.\n                },\n            );\n    }\n\n    getAvailableLanguages() {\n        return this.baseDataService\n            .query<GetGlobalSettings.Query>(GET_GLOBAL_SETTINGS, {}, 'cache-first')\n            .mapSingle(res => res.globalSettings.availableLanguages);\n    }\n\n    /**\n     * When any of the GlobalSettings are modified, this method should be called to update the Apollo cache.\n     */\n    refreshGlobalSettings() {\n        return this.baseDataService.query<GetGlobalSettings.Query>(GET_GLOBAL_SETTINGS, {}, 'network-only')\n            .single$;\n    }\n\n    /**\n     * Retrieves the custom field configs for the given entity type.\n     */\n    getCustomFieldsFor(type: Exclude<keyof CustomFields, '__typename'>): CustomFieldConfig[] {\n        return this.serverConfig.customFieldConfig[type] || [];\n    }\n\n    getOrderProcessStates(): OrderProcessState[] {\n        return this.serverConfig.orderProcess;\n    }\n\n    getPermittedAssetTypes(): string[] {\n        return this.serverConfig.permittedAssetTypes;\n    }\n\n    getPermissionDefinitions(): PermissionDefinition[] {\n        return this.serverConfig.permissions;\n    }\n\n    get serverConfig(): ServerConfig {\n        return this._serverConfig;\n    }\n}\n","import {\r\n    DefinitionNode,\r\n    DocumentNode,\r\n    FieldNode,\r\n    FragmentDefinitionNode,\r\n    Kind,\r\n    SelectionNode,\r\n} from 'graphql';\r\n\r\nimport { CustomFields, RelationCustomField, RelationCustomFieldFragment } from '../../common/generated-types';\r\n\r\n/**\r\n * Given a GraphQL AST (DocumentNode), this function looks for fragment definitions and adds and configured\r\n * custom fields to those fragments.\r\n */\r\nexport function addCustomFields(documentNode: DocumentNode, customFields: CustomFields): DocumentNode {\r\n    const fragmentDefs = documentNode.definitions.filter(isFragmentDefinition);\r\n\r\n    for (const fragmentDef of fragmentDefs) {\r\n        let entityType = fragmentDef.typeCondition.name.value as keyof Pick<\r\n            CustomFields,\r\n            Exclude<keyof CustomFields, '__typename'>\r\n        >;\r\n\r\n        if (entityType === ('OrderAddress' as any)) {\r\n            // OrderAddress is a special case of the Address entity, and shares its custom fields\r\n            // so we treat it as an alias\r\n            entityType = 'Address';\r\n        }\r\n\r\n        const customFieldsForType = customFields[entityType];\r\n        if (customFieldsForType && customFieldsForType.length) {\r\n            (fragmentDef.selectionSet.selections as SelectionNode[]).push({\r\n                name: {\r\n                    kind: Kind.NAME,\r\n                    value: 'customFields',\r\n                },\r\n                kind: Kind.FIELD,\r\n                selectionSet: {\r\n                    kind: Kind.SELECTION_SET,\r\n                    selections: customFieldsForType.map(customField => {\r\n                        return {\r\n                            kind: Kind.FIELD,\r\n                            name: {\r\n                                kind: Kind.NAME,\r\n                                value: customField.name,\r\n                            },\r\n                            // For \"relation\" custom fields, we need to also select\r\n                            // all the scalar fields of the related type\r\n                            ...(customField.type === 'relation'\r\n                                ? {\r\n                                      selectionSet: {\r\n                                          kind: Kind.SELECTION_SET,\r\n                                          selections: (customField as RelationCustomFieldFragment).scalarFields.map(\r\n                                              f => ({\r\n                                                  kind: Kind.FIELD,\r\n                                                  name: { kind: Kind.NAME, value: f },\r\n                                              }),\r\n                                          ),\r\n                                      },\r\n                                  }\r\n                                : {}),\r\n                        } as FieldNode;\r\n                    }),\r\n                },\r\n            });\r\n\r\n            const localeStrings = customFieldsForType.filter(field => field.type === 'localeString');\r\n\r\n            const translationsField = fragmentDef.selectionSet.selections\r\n                .filter(isFieldNode)\r\n                .find(field => field.name.value === 'translations');\r\n\r\n            if (localeStrings.length && translationsField && translationsField.selectionSet) {\r\n                (translationsField.selectionSet.selections as SelectionNode[]).push({\r\n                    name: {\r\n                        kind: Kind.NAME,\r\n                        value: 'customFields',\r\n                    },\r\n                    kind: Kind.FIELD,\r\n                    selectionSet: {\r\n                        kind: Kind.SELECTION_SET,\r\n                        selections: localeStrings.map(customField => {\r\n                            return {\r\n                                kind: Kind.FIELD,\r\n                                name: {\r\n                                    kind: Kind.NAME,\r\n                                    value: customField.name,\r\n                                },\r\n                            } as FieldNode;\r\n                        }),\r\n                    },\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return documentNode;\r\n}\r\n\r\nfunction isFragmentDefinition(value: DefinitionNode): value is FragmentDefinitionNode {\r\n    return value.kind === Kind.FRAGMENT_DEFINITION;\r\n}\r\n\r\nfunction isFieldNode(value: SelectionNode): value is FieldNode {\r\n    return value.kind === Kind.FIELD;\r\n}\r\n","import { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\r\nimport { DocumentNode, getOperationAST, NamedTypeNode, TypeNode } from 'graphql';\r\n\r\nimport { CustomFieldConfig } from '../../common/generated-types';\r\n\r\nconst CREATE_ENTITY_REGEX = /Create([A-Za-z]+)Input/;\r\nconst UPDATE_ENTITY_REGEX = /Update([A-Za-z]+)Input/;\r\n\r\n/**\r\n * Checks the current documentNode for an operation with a variable named \"Create<Entity>Input\" or \"Update<Entity>Input\"\r\n * and if a match is found, returns the <Entity> name.\r\n */\r\nexport function isEntityCreateOrUpdateMutation(documentNode: DocumentNode): string | undefined {\r\n    const operationDef = getOperationAST(documentNode, null);\r\n    if (operationDef && operationDef.variableDefinitions) {\r\n        for (const variableDef of operationDef.variableDefinitions) {\r\n            const namedType = extractInputType(variableDef.type);\r\n            const inputTypeName = namedType.name.value;\r\n\r\n            // special cases which don't follow the usual pattern\r\n            if (inputTypeName === 'UpdateActiveAdministratorInput') {\r\n                return 'Administrator';\r\n            }\r\n\r\n            const createMatch = inputTypeName.match(CREATE_ENTITY_REGEX);\r\n            if (createMatch) {\r\n                return createMatch[1];\r\n            }\r\n            const updateMatch = inputTypeName.match(UPDATE_ENTITY_REGEX);\r\n            if (updateMatch) {\r\n                return updateMatch[1];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction extractInputType(type: TypeNode): NamedTypeNode {\r\n    if (type.kind === 'NonNullType') {\r\n        return extractInputType(type.type);\r\n    }\r\n    if (type.kind === 'ListType') {\r\n        return extractInputType(type.type);\r\n    }\r\n    return type;\r\n}\r\n\r\n/**\r\n * Removes any `readonly` custom fields from an entity (including its translations).\r\n * To be used before submitting the entity for a create or update request.\r\n */\r\nexport function removeReadonlyCustomFields<T extends { input?: any } & Record<string, any> = any>(\r\n    variables: T,\r\n    customFieldConfig: CustomFieldConfig[],\r\n): T {\r\n    if (variables.input) {\r\n        removeReadonly(variables.input, customFieldConfig);\r\n    }\r\n    return removeReadonly(variables, customFieldConfig);\r\n}\r\n\r\nfunction removeReadonly(input: any, customFieldConfig: CustomFieldConfig[]) {\r\n    for (const field of customFieldConfig) {\r\n        if (field.readonly) {\r\n            if (field.type === 'localeString') {\r\n                if (hasTranslations(input)) {\r\n                    for (const translation of input.translations) {\r\n                        if (\r\n                            hasCustomFields(translation) &&\r\n                            translation.customFields[field.name] !== undefined\r\n                        ) {\r\n                            delete translation.customFields[field.name];\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (hasCustomFields(input) && input.customFields[field.name] !== undefined) {\r\n                    delete input.customFields[field.name];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return input;\r\n}\r\n\r\nfunction hasCustomFields(input: any): input is { customFields: { [key: string]: any } } {\r\n    return input != null && input.hasOwnProperty('customFields');\r\n}\r\n\r\nfunction hasTranslations(input: any): input is { translations: any[] } {\r\n    return input != null && input.hasOwnProperty('translations');\r\n}\r\n","import { getGraphQlInputName } from '@vendure/common/lib/shared-utils';\r\nimport { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\r\n\r\nimport { CustomFieldConfig } from '../../common/generated-types';\r\n\r\n/**\r\n * Transforms any custom field \"relation\" type inputs into the corresponding `<name>Id` format,\r\n * as expected by the server.\r\n */\r\nexport function transformRelationCustomFieldInputs<\r\n    T extends { input?: Record<string, any> | Array<Record<string, any>> } & Record<string, any> = any\r\n>(variables: T, customFieldConfig: CustomFieldConfig[]): T {\r\n    if (variables.input) {\r\n        if (Array.isArray(variables.input)) {\r\n            for (const item of variables.input) {\r\n                transformRelations(item, customFieldConfig);\r\n            }\r\n        } else {\r\n            transformRelations(variables.input, customFieldConfig);\r\n        }\r\n    }\r\n    return transformRelations(variables, customFieldConfig);\r\n}\r\n\r\n/**\r\n * @description\r\n * When persisting custom fields, we need to send just the IDs of the relations,\r\n * rather than the objects themselves.\r\n */\r\nfunction transformRelations<T>(input: T, customFieldConfig: CustomFieldConfig[]) {\r\n    for (const field of customFieldConfig) {\r\n        if (field.type === 'relation') {\r\n            if (hasCustomFields(input)) {\r\n                const entityValue = input.customFields[field.name];\r\n                if (input.customFields.hasOwnProperty(field.name)) {\r\n                    delete input.customFields[field.name];\r\n                    input.customFields[getGraphQlInputName(field)] =\r\n                        field.list && Array.isArray(entityValue)\r\n                            ? entityValue.map(v => v?.id)\r\n                            : entityValue === null\r\n                            ? null\r\n                            : entityValue?.id;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return input;\r\n}\r\n\r\nfunction hasCustomFields(input: any): input is { customFields: { [key: string]: any } } {\r\n    return input != null && input.hasOwnProperty('customFields') && typeof input.customFields === 'object';\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DataProxy, MutationUpdaterFn, WatchQueryFetchPolicy } from '@apollo/client/core';\r\nimport { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\r\nimport { Apollo } from 'apollo-angular';\r\nimport { DocumentNode } from 'graphql/language/ast';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CustomFields } from '../../common/generated-types';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\nimport { QueryResult } from '../query-result';\r\nimport { ServerConfigService } from '../server-config';\r\nimport { addCustomFields } from '../utils/add-custom-fields';\r\nimport {\r\n    isEntityCreateOrUpdateMutation,\r\n    removeReadonlyCustomFields,\r\n} from '../utils/remove-readonly-custom-fields';\r\nimport { transformRelationCustomFieldInputs } from '../utils/transform-relation-custom-field-inputs';\r\n\r\n@Injectable()\r\nexport class BaseDataService {\r\n    constructor(\r\n        private apollo: Apollo,\r\n        private httpClient: HttpClient,\r\n        private localStorageService: LocalStorageService,\r\n        private serverConfigService: ServerConfigService,\r\n    ) {}\r\n\r\n    private get customFields(): CustomFields {\r\n        return this.serverConfigService.serverConfig.customFieldConfig || {};\r\n    }\r\n\r\n    /**\r\n     * Performs a GraphQL watch query\r\n     */\r\n    query<T, V = Record<string, any>>(\r\n        query: DocumentNode,\r\n        variables?: V,\r\n        fetchPolicy: WatchQueryFetchPolicy = 'cache-and-network',\r\n    ): QueryResult<T, V> {\r\n        const withCustomFields = addCustomFields(query, this.customFields);\r\n        const queryRef = this.apollo.watchQuery<T, V>({\r\n            query: withCustomFields,\r\n            variables,\r\n            fetchPolicy,\r\n        });\r\n        const queryResult = new QueryResult<T, any>(queryRef, this.apollo);\r\n        return queryResult;\r\n    }\r\n\r\n    /**\r\n     * Performs a GraphQL mutation\r\n     */\r\n    mutate<T, V = Record<string, any>>(\r\n        mutation: DocumentNode,\r\n        variables?: V,\r\n        update?: MutationUpdaterFn<T>,\r\n    ): Observable<T> {\r\n        const withCustomFields = addCustomFields(mutation, this.customFields);\r\n        const withoutReadonlyFields = this.prepareCustomFields(mutation, variables);\r\n\r\n        return this.apollo\r\n            .mutate<T, V>({\r\n                mutation: withCustomFields,\r\n                variables: withoutReadonlyFields,\r\n                update,\r\n            })\r\n            .pipe(map(result => result.data as T));\r\n    }\r\n\r\n    private prepareCustomFields<V>(mutation: DocumentNode, variables: V): V {\r\n        const entity = isEntityCreateOrUpdateMutation(mutation);\r\n        if (entity) {\r\n            const customFieldConfig = this.customFields[entity];\r\n            if (variables && customFieldConfig) {\r\n                let variablesClone = simpleDeepClone(variables as any);\r\n                variablesClone = removeReadonlyCustomFields(variablesClone, customFieldConfig);\r\n                variablesClone = transformRelationCustomFieldInputs(variablesClone, customFieldConfig);\r\n                return variablesClone;\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n}\r\n","import {\r\n    CurrentUserChannel,\r\n    CurrentUserChannelInput,\r\n    GetNetworkStatus,\r\n    GetUiState,\r\n    GetUserStatus,\r\n    LanguageCode,\r\n    RequestCompleted,\r\n    RequestStarted,\r\n    SetActiveChannel,\r\n    SetAsLoggedIn,\r\n    SetContentLanguage,\r\n    SetUiLanguage,\r\n    SetUiTheme,\r\n    UpdateUserChannels,\r\n} from '../../common/generated-types';\r\nimport {\r\n    GET_NEWTORK_STATUS,\r\n    GET_UI_STATE,\r\n    GET_USER_STATUS,\r\n    REQUEST_COMPLETED,\r\n    REQUEST_STARTED,\r\n    SET_ACTIVE_CHANNEL,\r\n    SET_AS_LOGGED_IN,\r\n    SET_AS_LOGGED_OUT,\r\n    SET_CONTENT_LANGUAGE,\r\n    SET_UI_LANGUAGE,\r\n    SET_UI_THEME,\r\n    UPDATE_USER_CHANNELS,\r\n} from '../definitions/client-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n/**\r\n * Note: local queries all have a fetch-policy of \"cache-first\" explicitly specified due to:\r\n * https://github.com/apollographql/apollo-link-state/issues/236\r\n */\r\nexport class ClientDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    startRequest() {\r\n        return this.baseDataService.mutate<RequestStarted.Mutation>(REQUEST_STARTED);\r\n    }\r\n\r\n    completeRequest() {\r\n        return this.baseDataService.mutate<RequestCompleted.Mutation>(REQUEST_COMPLETED);\r\n    }\r\n\r\n    getNetworkStatus() {\r\n        return this.baseDataService.query<GetNetworkStatus.Query>(GET_NEWTORK_STATUS, {}, 'cache-first');\r\n    }\r\n\r\n    loginSuccess(username: string, activeChannelId: string, channels: CurrentUserChannel[]) {\r\n        return this.baseDataService.mutate<SetAsLoggedIn.Mutation, SetAsLoggedIn.Variables>(\r\n            SET_AS_LOGGED_IN,\r\n            {\r\n                input: {\r\n                    username,\r\n                    loginTime: Date.now().toString(),\r\n                    activeChannelId,\r\n                    channels,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    logOut() {\r\n        return this.baseDataService.mutate(SET_AS_LOGGED_OUT);\r\n    }\r\n\r\n    userStatus() {\r\n        return this.baseDataService.query<GetUserStatus.Query>(GET_USER_STATUS, {}, 'cache-first');\r\n    }\r\n\r\n    uiState() {\r\n        return this.baseDataService.query<GetUiState.Query>(GET_UI_STATE, {}, 'cache-first');\r\n    }\r\n\r\n    setUiLanguage(languageCode: LanguageCode) {\r\n        return this.baseDataService.mutate<SetUiLanguage.Mutation, SetUiLanguage.Variables>(SET_UI_LANGUAGE, {\r\n            languageCode,\r\n        });\r\n    }\r\n\r\n    setContentLanguage(languageCode: LanguageCode) {\r\n        return this.baseDataService.mutate<SetContentLanguage.Mutation, SetContentLanguage.Variables>(\r\n            SET_CONTENT_LANGUAGE,\r\n            {\r\n                languageCode,\r\n            },\r\n        );\r\n    }\r\n\r\n    setUiTheme(theme: string) {\r\n        return this.baseDataService.mutate<SetUiTheme.Mutation, SetUiTheme.Variables>(SET_UI_THEME, {\r\n            theme,\r\n        });\r\n    }\r\n\r\n    setActiveChannel(channelId: string) {\r\n        return this.baseDataService.mutate<SetActiveChannel.Mutation, SetActiveChannel.Variables>(\r\n            SET_ACTIVE_CHANNEL,\r\n            {\r\n                channelId,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateUserChannels(channels: CurrentUserChannelInput[]) {\r\n        return this.baseDataService.mutate<UpdateUserChannels.Mutation, UpdateUserChannels.Variables>(\r\n            UPDATE_USER_CHANNELS,\r\n            {\r\n                channels,\r\n            },\r\n        );\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\n\nimport { ERROR_RESULT_FRAGMENT } from './shared-definitions';\n\nexport const ASSET_FRAGMENT = gql`\n    fragment Asset on Asset {\n        id\n        createdAt\n        updatedAt\n        name\n        fileSize\n        mimeType\n        type\n        preview\n        source\n        width\n        height\n        focalPoint {\n            x\n            y\n        }\n    }\n`;\n\nexport const TAG_FRAGMENT = gql`\n    fragment Tag on Tag {\n        id\n        value\n    }\n`;\n\nexport const PRODUCT_OPTION_GROUP_FRAGMENT = gql`\n    fragment ProductOptionGroup on ProductOptionGroup {\n        id\n        code\n        languageCode\n        name\n        translations {\n            id\n            languageCode\n            name\n        }\n    }\n`;\n\nexport const PRODUCT_OPTION_FRAGMENT = gql`\n    fragment ProductOption on ProductOption {\n        id\n        code\n        languageCode\n        name\n        groupId\n        translations {\n            id\n            languageCode\n            name\n        }\n    }\n`;\n\nexport const PRODUCT_VARIANT_FRAGMENT = gql`\n    fragment ProductVariant on ProductVariant {\n        id\n        createdAt\n        updatedAt\n        enabled\n        languageCode\n        name\n        price\n        currencyCode\n        priceWithTax\n        stockOnHand\n        stockAllocated\n        trackInventory\n        outOfStockThreshold\n        useGlobalOutOfStockThreshold\n        taxRateApplied {\n            id\n            name\n            value\n        }\n        taxCategory {\n            id\n            name\n        }\n        sku\n        options {\n            ...ProductOption\n        }\n        facetValues {\n            id\n            code\n            name\n            facet {\n                id\n                name\n            }\n        }\n        featuredAsset {\n            ...Asset\n        }\n        assets {\n            ...Asset\n        }\n        translations {\n            id\n            languageCode\n            name\n        }\n        channels {\n            id\n            code\n        }\n    }\n    ${PRODUCT_OPTION_FRAGMENT}\n    ${ASSET_FRAGMENT}\n`;\n\nexport const PRODUCT_WITH_VARIANTS_FRAGMENT = gql`\n    fragment ProductWithVariants on Product {\n        id\n        createdAt\n        updatedAt\n        enabled\n        languageCode\n        name\n        slug\n        description\n        featuredAsset {\n            ...Asset\n        }\n        assets {\n            ...Asset\n        }\n        translations {\n            id\n            languageCode\n            name\n            slug\n            description\n        }\n        optionGroups {\n            ...ProductOptionGroup\n        }\n        variants {\n            ...ProductVariant\n        }\n        facetValues {\n            id\n            code\n            name\n            facet {\n                id\n                name\n            }\n        }\n        channels {\n            id\n            code\n        }\n    }\n    ${PRODUCT_OPTION_GROUP_FRAGMENT}\n    ${PRODUCT_VARIANT_FRAGMENT}\n    ${ASSET_FRAGMENT}\n`;\n\nexport const PRODUCT_OPTION_GROUP_WITH_OPTIONS_FRAGMENT = gql`\n    fragment ProductOptionGroupWithOptions on ProductOptionGroup {\n        id\n        createdAt\n        updatedAt\n        languageCode\n        code\n        name\n        translations {\n            id\n            name\n        }\n        options {\n            id\n            languageCode\n            name\n            code\n            translations {\n                name\n            }\n        }\n    }\n`;\n\nexport const UPDATE_PRODUCT = gql`\n    mutation UpdateProduct($input: UpdateProductInput!) {\n        updateProduct(input: $input) {\n            ...ProductWithVariants\n        }\n    }\n    ${PRODUCT_WITH_VARIANTS_FRAGMENT}\n`;\n\nexport const CREATE_PRODUCT = gql`\n    mutation CreateProduct($input: CreateProductInput!) {\n        createProduct(input: $input) {\n            ...ProductWithVariants\n        }\n    }\n    ${PRODUCT_WITH_VARIANTS_FRAGMENT}\n`;\n\nexport const DELETE_PRODUCT = gql`\n    mutation DeleteProduct($id: ID!) {\n        deleteProduct(id: $id) {\n            result\n            message\n        }\n    }\n`;\n\nexport const CREATE_PRODUCT_VARIANTS = gql`\n    mutation CreateProductVariants($input: [CreateProductVariantInput!]!) {\n        createProductVariants(input: $input) {\n            ...ProductVariant\n        }\n    }\n    ${PRODUCT_VARIANT_FRAGMENT}\n`;\n\nexport const UPDATE_PRODUCT_VARIANTS = gql`\n    mutation UpdateProductVariants($input: [UpdateProductVariantInput!]!) {\n        updateProductVariants(input: $input) {\n            ...ProductVariant\n        }\n    }\n    ${PRODUCT_VARIANT_FRAGMENT}\n`;\n\nexport const CREATE_PRODUCT_OPTION_GROUP = gql`\n    mutation CreateProductOptionGroup($input: CreateProductOptionGroupInput!) {\n        createProductOptionGroup(input: $input) {\n            ...ProductOptionGroupWithOptions\n        }\n    }\n    ${PRODUCT_OPTION_GROUP_WITH_OPTIONS_FRAGMENT}\n`;\n\nexport const GET_PRODUCT_OPTION_GROUP = gql`\n    query GetProductOptionGroup($id: ID!) {\n        productOptionGroup(id: $id) {\n            ...ProductOptionGroupWithOptions\n        }\n    }\n    ${PRODUCT_OPTION_GROUP_WITH_OPTIONS_FRAGMENT}\n`;\n\nexport const ADD_OPTION_TO_GROUP = gql`\n    mutation AddOptionToGroup($input: CreateProductOptionInput!) {\n        createProductOption(input: $input) {\n            id\n            createdAt\n            updatedAt\n            name\n            code\n            groupId\n        }\n    }\n`;\n\nexport const ADD_OPTION_GROUP_TO_PRODUCT = gql`\n    mutation AddOptionGroupToProduct($productId: ID!, $optionGroupId: ID!) {\n        addOptionGroupToProduct(productId: $productId, optionGroupId: $optionGroupId) {\n            id\n            createdAt\n            updatedAt\n            optionGroups {\n                id\n                createdAt\n                updatedAt\n                code\n                options {\n                    id\n                    createdAt\n                    updatedAt\n                    code\n                }\n            }\n        }\n    }\n`;\n\nexport const REMOVE_OPTION_GROUP_FROM_PRODUCT = gql`\n    mutation RemoveOptionGroupFromProduct($productId: ID!, $optionGroupId: ID!) {\n        removeOptionGroupFromProduct(productId: $productId, optionGroupId: $optionGroupId) {\n            ... on Product {\n                id\n                createdAt\n                updatedAt\n                optionGroups {\n                    id\n                    createdAt\n                    updatedAt\n                    code\n                    options {\n                        id\n                        createdAt\n                        updatedAt\n                        code\n                    }\n                }\n            }\n            ...ErrorResult\n        }\n    }\n    ${ERROR_RESULT_FRAGMENT}\n`;\n\nexport const GET_PRODUCT_WITH_VARIANTS = gql`\n    query GetProductWithVariants($id: ID!) {\n        product(id: $id) {\n            ...ProductWithVariants\n        }\n    }\n    ${PRODUCT_WITH_VARIANTS_FRAGMENT}\n`;\n\nexport const GET_PRODUCT_SIMPLE = gql`\n    query GetProductSimple($id: ID!) {\n        product(id: $id) {\n            id\n            name\n            featuredAsset {\n                ...Asset\n            }\n        }\n    }\n    ${ASSET_FRAGMENT}\n`;\n\nexport const GET_PRODUCT_LIST = gql`\n    query GetProductList($options: ProductListOptions) {\n        products(options: $options) {\n            items {\n                id\n                createdAt\n                updatedAt\n                enabled\n                languageCode\n                name\n                slug\n                featuredAsset {\n                    id\n                    createdAt\n                    updatedAt\n                    preview\n                }\n            }\n            totalItems\n        }\n    }\n`;\n\nexport const GET_PRODUCT_OPTION_GROUPS = gql`\n    query GetProductOptionGroups($filterTerm: String) {\n        productOptionGroups(filterTerm: $filterTerm) {\n            id\n            createdAt\n            updatedAt\n            languageCode\n            code\n            name\n            options {\n                id\n                createdAt\n                updatedAt\n                languageCode\n                code\n                name\n            }\n        }\n    }\n`;\n\nexport const GET_ASSET_LIST = gql`\n    query GetAssetList($options: AssetListOptions) {\n        assets(options: $options) {\n            items {\n                ...Asset\n                tags {\n                    ...Tag\n                }\n            }\n            totalItems\n        }\n    }\n    ${ASSET_FRAGMENT}\n    ${TAG_FRAGMENT}\n`;\n\nexport const GET_ASSET = gql`\n    query GetAsset($id: ID!) {\n        asset(id: $id) {\n            ...Asset\n            tags {\n                ...Tag\n            }\n        }\n    }\n    ${ASSET_FRAGMENT}\n    ${TAG_FRAGMENT}\n`;\n\nexport const CREATE_ASSETS = gql`\n    mutation CreateAssets($input: [CreateAssetInput!]!) {\n        createAssets(input: $input) {\n            ...Asset\n            ... on Asset {\n                tags {\n                    ...Tag\n                }\n            }\n            ... on ErrorResult {\n                message\n            }\n        }\n    }\n    ${ASSET_FRAGMENT}\n    ${TAG_FRAGMENT}\n`;\n\nexport const UPDATE_ASSET = gql`\n    mutation UpdateAsset($input: UpdateAssetInput!) {\n        updateAsset(input: $input) {\n            ...Asset\n            tags {\n                ...Tag\n            }\n        }\n    }\n    ${ASSET_FRAGMENT}\n    ${TAG_FRAGMENT}\n`;\n\nexport const DELETE_ASSETS = gql`\n    mutation DeleteAssets($input: DeleteAssetsInput!) {\n        deleteAssets(input: $input) {\n            result\n            message\n        }\n    }\n`;\n\nexport const SEARCH_PRODUCTS = gql`\n    query SearchProducts($input: SearchInput!) {\n        search(input: $input) {\n            totalItems\n            items {\n                enabled\n                productId\n                productName\n                productAsset {\n                    id\n                    preview\n                    focalPoint {\n                        x\n                        y\n                    }\n                }\n                productVariantId\n                productVariantName\n                productVariantAsset {\n                    id\n                    preview\n                    focalPoint {\n                        x\n                        y\n                    }\n                }\n                sku\n                channelIds\n            }\n            facetValues {\n                count\n                facetValue {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    facet {\n                        id\n                        createdAt\n                        updatedAt\n                        name\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const PRODUCT_SELECTOR_SEARCH = gql`\n    query ProductSelectorSearch($term: String!, $take: Int!) {\n        search(input: { groupByProduct: false, term: $term, take: $take }) {\n            items {\n                productVariantId\n                productVariantName\n                productAsset {\n                    id\n                    preview\n                    focalPoint {\n                        x\n                        y\n                    }\n                }\n                price {\n                    ... on SinglePrice {\n                        value\n                    }\n                }\n                priceWithTax {\n                    ... on SinglePrice {\n                        value\n                    }\n                }\n                sku\n            }\n        }\n    }\n`;\n\nexport const UPDATE_PRODUCT_OPTION = gql`\n    mutation UpdateProductOption($input: UpdateProductOptionInput!) {\n        updateProductOption(input: $input) {\n            ...ProductOption\n        }\n    }\n    ${PRODUCT_OPTION_FRAGMENT}\n`;\n\nexport const DELETE_PRODUCT_VARIANT = gql`\n    mutation DeleteProductVariant($id: ID!) {\n        deleteProductVariant(id: $id) {\n            result\n            message\n        }\n    }\n`;\n\nexport const GET_PRODUCT_VARIANT_OPTIONS = gql`\n    query GetProductVariantOptions($id: ID!) {\n        product(id: $id) {\n            id\n            createdAt\n            updatedAt\n            name\n            optionGroups {\n                id\n                name\n                code\n                options {\n                    ...ProductOption\n                }\n            }\n            variants {\n                id\n                createdAt\n                updatedAt\n                enabled\n                name\n                sku\n                price\n                stockOnHand\n                enabled\n                options {\n                    id\n                    createdAt\n                    updatedAt\n                    name\n                    code\n                    groupId\n                }\n            }\n        }\n    }\n    ${PRODUCT_OPTION_FRAGMENT}\n`;\n\nexport const ASSIGN_PRODUCTS_TO_CHANNEL = gql`\n    mutation AssignProductsToChannel($input: AssignProductsToChannelInput!) {\n        assignProductsToChannel(input: $input) {\n            id\n            channels {\n                id\n                code\n            }\n        }\n    }\n`;\n\nexport const ASSIGN_VARIANTS_TO_CHANNEL = gql`\n    mutation AssignVariantsToChannel($input: AssignProductVariantsToChannelInput!) {\n        assignProductVariantsToChannel(input: $input) {\n            id\n            channels {\n                id\n                code\n            }\n        }\n    }\n`;\n\nexport const REMOVE_PRODUCTS_FROM_CHANNEL = gql`\n    mutation RemoveProductsFromChannel($input: RemoveProductsFromChannelInput!) {\n        removeProductsFromChannel(input: $input) {\n            id\n            channels {\n                id\n                code\n            }\n        }\n    }\n`;\n\nexport const REMOVE_VARIANTS_FROM_CHANNEL = gql`\n    mutation RemoveVariantsFromChannel($input: RemoveProductVariantsFromChannelInput!) {\n        removeProductVariantsFromChannel(input: $input) {\n            id\n            channels {\n                id\n                code\n            }\n        }\n    }\n`;\n\nexport const GET_PRODUCT_VARIANT = gql`\n    query GetProductVariant($id: ID!) {\n        productVariant(id: $id) {\n            id\n            name\n            sku\n            featuredAsset {\n                id\n                preview\n                focalPoint {\n                    x\n                    y\n                }\n            }\n            product {\n                id\n                featuredAsset {\n                    id\n                    preview\n                    focalPoint {\n                        x\n                        y\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const GET_PRODUCT_VARIANT_LIST = gql`\n    query GetProductVariantList($options: ProductVariantListOptions!) {\n        productVariants(options: $options) {\n            items {\n                id\n                name\n                sku\n                featuredAsset {\n                    id\n                    preview\n                    focalPoint {\n                        x\n                        y\n                    }\n                }\n                product {\n                    id\n                    featuredAsset {\n                        id\n                        preview\n                        focalPoint {\n                            x\n                            y\n                        }\n                    }\n                }\n            }\n            totalItems\n        }\n    }\n`;\n\nexport const GET_TAG_LIST = gql`\n    query GetTagList($options: TagListOptions) {\n        tags(options: $options) {\n            items {\n                ...Tag\n            }\n            totalItems\n        }\n    }\n    ${TAG_FRAGMENT}\n`;\n\nexport const GET_TAG = gql`\n    query GetTag($id: ID!) {\n        tag(id: $id) {\n            ...Tag\n        }\n    }\n    ${TAG_FRAGMENT}\n`;\n\nexport const CREATE_TAG = gql`\n    mutation CreateTag($input: CreateTagInput!) {\n        createTag(input: $input) {\n            ...Tag\n        }\n    }\n    ${TAG_FRAGMENT}\n`;\n\nexport const UPDATE_TAG = gql`\n    mutation UpdateTag($input: UpdateTagInput!) {\n        updateTag(input: $input) {\n            ...Tag\n        }\n    }\n    ${TAG_FRAGMENT}\n`;\n\nexport const DELETE_TAG = gql`\n    mutation DeleteTag($id: ID!) {\n        deleteTag(id: $id) {\n            message\n            result\n        }\n    }\n`;\n","import { gql } from 'apollo-angular';\r\n\r\nimport { ASSET_FRAGMENT } from './product-definitions';\r\nimport { CONFIGURABLE_OPERATION_DEF_FRAGMENT, CONFIGURABLE_OPERATION_FRAGMENT } from './shared-definitions';\r\n\r\nexport const GET_COLLECTION_FILTERS = gql`\r\n    query GetCollectionFilters {\r\n        collectionFilters {\r\n            ...ConfigurableOperationDef\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}\r\n`;\r\n\r\nexport const COLLECTION_FRAGMENT = gql`\r\n    fragment Collection on Collection {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        slug\r\n        description\r\n        isPrivate\r\n        languageCode\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n        assets {\r\n            ...Asset\r\n        }\r\n        filters {\r\n            ...ConfigurableOperation\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n            slug\r\n            description\r\n        }\r\n        parent {\r\n            id\r\n            name\r\n        }\r\n        children {\r\n            id\r\n            name\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${CONFIGURABLE_OPERATION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_COLLECTION_LIST = gql`\r\n    query GetCollectionList($options: CollectionListOptions) {\r\n        collections(options: $options) {\r\n            items {\r\n                id\r\n                name\r\n                slug\r\n                description\r\n                isPrivate\r\n                featuredAsset {\r\n                    ...Asset\r\n                }\r\n                parent {\r\n                    id\r\n                }\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n`;\r\n\r\nexport const GET_COLLECTION = gql`\r\n    query GetCollection($id: ID!) {\r\n        collection(id: $id) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_COLLECTION = gql`\r\n    mutation CreateCollection($input: CreateCollectionInput!) {\r\n        createCollection(input: $input) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_COLLECTION = gql`\r\n    mutation UpdateCollection($input: UpdateCollectionInput!) {\r\n        updateCollection(input: $input) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\n\r\nexport const MOVE_COLLECTION = gql`\r\n    mutation MoveCollection($input: MoveCollectionInput!) {\r\n        moveCollection(input: $input) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_COLLECTION = gql`\r\n    mutation DeleteCollection($id: ID!) {\r\n        deleteCollection(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_COLLECTION_CONTENTS = gql`\r\n    query GetCollectionContents($id: ID!, $options: ProductVariantListOptions) {\r\n        collection(id: $id) {\r\n            id\r\n            name\r\n            productVariants(options: $options) {\r\n                items {\r\n                    id\r\n                    productId\r\n                    name\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import { pick } from '@vendure/common/lib/pick';\r\nimport { from } from 'rxjs';\r\nimport { bufferCount, concatMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    CollectionFilterParameter,\r\n    CreateCollection,\r\n    CreateCollectionInput,\r\n    DeleteCollection,\r\n    GetCollection,\r\n    GetCollectionContents,\r\n    GetCollectionFilters,\r\n    GetCollectionList,\r\n    MoveCollection,\r\n    MoveCollectionInput,\r\n    UpdateCollection,\r\n    UpdateCollectionInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    CREATE_COLLECTION,\r\n    DELETE_COLLECTION,\r\n    GET_COLLECTION,\r\n    GET_COLLECTION_CONTENTS,\r\n    GET_COLLECTION_FILTERS,\r\n    GET_COLLECTION_LIST,\r\n    MOVE_COLLECTION,\r\n    UPDATE_COLLECTION,\r\n} from '../definitions/collection-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class CollectionDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getCollectionFilters() {\r\n        return this.baseDataService.query<GetCollectionFilters.Query>(GET_COLLECTION_FILTERS);\r\n    }\r\n\r\n    getCollections(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetCollectionList.Query, GetCollectionList.Variables>(\r\n            GET_COLLECTION_LIST,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getCollection(id: string) {\r\n        return this.baseDataService.query<GetCollection.Query, GetCollection.Variables>(GET_COLLECTION, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createCollection(input: CreateCollectionInput) {\r\n        return this.baseDataService.mutate<CreateCollection.Mutation, CreateCollection.Variables>(\r\n            CREATE_COLLECTION,\r\n            {\r\n                input: pick(input, [\r\n                    'translations',\r\n                    'parentId',\r\n                    'assetIds',\r\n                    'featuredAssetId',\r\n                    'filters',\r\n                    'customFields',\r\n                ]),\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCollection(input: UpdateCollectionInput) {\r\n        return this.baseDataService.mutate<UpdateCollection.Mutation, UpdateCollection.Variables>(\r\n            UPDATE_COLLECTION,\r\n            {\r\n                input: pick(input, [\r\n                    'id',\r\n                    'isPrivate',\r\n                    'translations',\r\n                    'assetIds',\r\n                    'featuredAssetId',\r\n                    'filters',\r\n                    'customFields',\r\n                ]),\r\n            },\r\n        );\r\n    }\r\n\r\n    moveCollection(inputs: MoveCollectionInput[]) {\r\n        return from(inputs).pipe(\r\n            concatMap(input =>\r\n                this.baseDataService.mutate<MoveCollection.Mutation, MoveCollection.Variables>(\r\n                    MOVE_COLLECTION,\r\n                    { input },\r\n                ),\r\n            ),\r\n            bufferCount(inputs.length),\r\n        );\r\n    }\r\n\r\n    deleteCollection(id: string) {\r\n        return this.baseDataService.mutate<DeleteCollection.Mutation, DeleteCollection.Variables>(\r\n            DELETE_COLLECTION,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getCollectionContents(id: string, take: number = 10, skip: number = 0, filterTerm?: string) {\r\n        const filter = filterTerm\r\n            ? ({ name: { contains: filterTerm } } as CollectionFilterParameter)\r\n            : undefined;\r\n        return this.baseDataService.query<GetCollectionContents.Query, GetCollectionContents.Variables>(\r\n            GET_COLLECTION_CONTENTS,\r\n            {\r\n                id,\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter,\r\n                },\r\n            },\r\n        );\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport { ERROR_RESULT_FRAGMENT } from './shared-definitions';\r\n\r\nexport const ADDRESS_FRAGMENT = gql`\r\n    fragment Address on Address {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        fullName\r\n        company\r\n        streetLine1\r\n        streetLine2\r\n        city\r\n        province\r\n        postalCode\r\n        country {\r\n            id\r\n            code\r\n            name\r\n        }\r\n        phoneNumber\r\n        defaultShippingAddress\r\n        defaultBillingAddress\r\n    }\r\n`;\r\n\r\nexport const CUSTOMER_FRAGMENT = gql`\r\n    fragment Customer on Customer {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        title\r\n        firstName\r\n        lastName\r\n        phoneNumber\r\n        emailAddress\r\n        user {\r\n            id\r\n            identifier\r\n            verified\r\n            lastLogin\r\n        }\r\n        addresses {\r\n            ...Address\r\n        }\r\n    }\r\n    ${ADDRESS_FRAGMENT}\r\n`;\r\n\r\nexport const GET_CUSTOMER_LIST = gql`\r\n    query GetCustomerList($options: CustomerListOptions) {\r\n        customers(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                title\r\n                firstName\r\n                lastName\r\n                emailAddress\r\n                user {\r\n                    id\r\n                    verified\r\n                }\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CUSTOMER = gql`\r\n    query GetCustomer($id: ID!, $orderListOptions: OrderListOptions) {\r\n        customer(id: $id) {\r\n            ...Customer\r\n            groups {\r\n                id\r\n                name\r\n            }\r\n            orders(options: $orderListOptions) {\r\n                items {\r\n                    id\r\n                    code\r\n                    state\r\n                    total\r\n                    currencyCode\r\n                    updatedAt\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n    ${CUSTOMER_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_CUSTOMER = gql`\r\n    mutation CreateCustomer($input: CreateCustomerInput!, $password: String) {\r\n        createCustomer(input: $input, password: $password) {\r\n            ...Customer\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CUSTOMER_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_CUSTOMER = gql`\r\n    mutation UpdateCustomer($input: UpdateCustomerInput!) {\r\n        updateCustomer(input: $input) {\r\n            ...Customer\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CUSTOMER_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_CUSTOMER = gql`\r\n    mutation DeleteCustomer($id: ID!) {\r\n        deleteCustomer(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_CUSTOMER_ADDRESS = gql`\r\n    mutation CreateCustomerAddress($customerId: ID!, $input: CreateAddressInput!) {\r\n        createCustomerAddress(customerId: $customerId, input: $input) {\r\n            ...Address\r\n        }\r\n    }\r\n    ${ADDRESS_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_CUSTOMER_ADDRESS = gql`\r\n    mutation UpdateCustomerAddress($input: UpdateAddressInput!) {\r\n        updateCustomerAddress(input: $input) {\r\n            ...Address\r\n        }\r\n    }\r\n    ${ADDRESS_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_CUSTOMER_GROUP = gql`\r\n    mutation CreateCustomerGroup($input: CreateCustomerGroupInput!) {\r\n        createCustomerGroup(input: $input) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_CUSTOMER_GROUP = gql`\r\n    mutation UpdateCustomerGroup($input: UpdateCustomerGroupInput!) {\r\n        updateCustomerGroup(input: $input) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_CUSTOMER_GROUP = gql`\r\n    mutation DeleteCustomerGroup($id: ID!) {\r\n        deleteCustomerGroup(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CUSTOMER_GROUPS = gql`\r\n    query GetCustomerGroups($options: CustomerGroupListOptions) {\r\n        customerGroups(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CUSTOMER_GROUP_WITH_CUSTOMERS = gql`\r\n    query GetCustomerGroupWithCustomers($id: ID!, $options: CustomerListOptions) {\r\n        customerGroup(id: $id) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            customers(options: $options) {\r\n                items {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    emailAddress\r\n                    firstName\r\n                    lastName\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_CUSTOMERS_TO_GROUP = gql`\r\n    mutation AddCustomersToGroup($groupId: ID!, $customerIds: [ID!]!) {\r\n        addCustomersToGroup(customerGroupId: $groupId, customerIds: $customerIds) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REMOVE_CUSTOMERS_FROM_GROUP = gql`\r\n    mutation RemoveCustomersFromGroup($groupId: ID!, $customerIds: [ID!]!) {\r\n        removeCustomersFromGroup(customerGroupId: $groupId, customerIds: $customerIds) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CUSTOMER_HISTORY = gql`\r\n    query GetCustomerHistory($id: ID!, $options: HistoryEntryListOptions) {\r\n        customer(id: $id) {\r\n            id\r\n            history(options: $options) {\r\n                totalItems\r\n                items {\r\n                    id\r\n                    type\r\n                    createdAt\r\n                    isPublic\r\n                    administrator {\r\n                        id\r\n                        firstName\r\n                        lastName\r\n                    }\r\n                    data\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_NOTE_TO_CUSTOMER = gql`\r\n    mutation AddNoteToCustomer($input: AddNoteToCustomerInput!) {\r\n        addNoteToCustomer(input: $input) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_CUSTOMER_NOTE = gql`\r\n    mutation UpdateCustomerNote($input: UpdateCustomerNoteInput!) {\r\n        updateCustomerNote(input: $input) {\r\n            id\r\n            data\r\n            isPublic\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_CUSTOMER_NOTE = gql`\r\n    mutation DeleteCustomerNote($id: ID!) {\r\n        deleteCustomerNote(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n","import {\r\n    AddCustomersToGroup,\r\n    AddNoteToCustomer,\r\n    CreateAddressInput,\r\n    CreateCustomer,\r\n    CreateCustomerAddress,\r\n    CreateCustomerGroup,\r\n    CreateCustomerGroupInput,\r\n    CreateCustomerInput,\r\n    CustomerGroupListOptions,\r\n    CustomerListOptions,\r\n    DeleteCustomer,\r\n    DeleteCustomerGroup,\r\n    DeleteCustomerNote,\r\n    GetCustomer,\r\n    GetCustomerGroups,\r\n    GetCustomerGroupWithCustomers,\r\n    GetCustomerHistory,\r\n    GetCustomerList,\r\n    HistoryEntryListOptions,\r\n    OrderListOptions,\r\n    RemoveCustomersFromGroup,\r\n    UpdateAddressInput,\r\n    UpdateCustomer,\r\n    UpdateCustomerAddress,\r\n    UpdateCustomerGroup,\r\n    UpdateCustomerGroupInput,\r\n    UpdateCustomerInput,\r\n    UpdateCustomerNote,\r\n    UpdateCustomerNoteInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    ADD_CUSTOMERS_TO_GROUP,\r\n    ADD_NOTE_TO_CUSTOMER,\r\n    CREATE_CUSTOMER,\r\n    CREATE_CUSTOMER_ADDRESS,\r\n    CREATE_CUSTOMER_GROUP,\r\n    DELETE_CUSTOMER,\r\n    DELETE_CUSTOMER_GROUP,\r\n    DELETE_CUSTOMER_NOTE,\r\n    GET_CUSTOMER,\r\n    GET_CUSTOMER_GROUP_WITH_CUSTOMERS,\r\n    GET_CUSTOMER_GROUPS,\r\n    GET_CUSTOMER_HISTORY,\r\n    GET_CUSTOMER_LIST,\r\n    REMOVE_CUSTOMERS_FROM_GROUP,\r\n    UPDATE_CUSTOMER,\r\n    UPDATE_CUSTOMER_ADDRESS,\r\n    UPDATE_CUSTOMER_GROUP,\r\n    UPDATE_CUSTOMER_NOTE,\r\n} from '../definitions/customer-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class CustomerDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getCustomerList(take: number = 10, skip: number = 0, filterTerm?: string) {\r\n        const filter = filterTerm\r\n            ? {\r\n                  filter: {\r\n                      emailAddress: {\r\n                          contains: filterTerm,\r\n                      },\r\n                  },\r\n              }\r\n            : {};\r\n        return this.baseDataService.query<GetCustomerList.Query, GetCustomerList.Variables>(\r\n            GET_CUSTOMER_LIST,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                    ...filter,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getCustomer(id: string, orderListOptions?: OrderListOptions) {\r\n        return this.baseDataService.query<GetCustomer.Query, GetCustomer.Variables>(GET_CUSTOMER, {\r\n            id,\r\n            orderListOptions,\r\n        });\r\n    }\r\n\r\n    createCustomer(input: CreateCustomerInput, password?: string) {\r\n        return this.baseDataService.mutate<CreateCustomer.Mutation, CreateCustomer.Variables>(\r\n            CREATE_CUSTOMER,\r\n            {\r\n                input,\r\n                password,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCustomer(input: UpdateCustomerInput) {\r\n        return this.baseDataService.mutate<UpdateCustomer.Mutation, UpdateCustomer.Variables>(\r\n            UPDATE_CUSTOMER,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteCustomer(id: string) {\r\n        return this.baseDataService.mutate<DeleteCustomer.Mutation, DeleteCustomer.Variables>(\r\n            DELETE_CUSTOMER,\r\n            { id },\r\n        );\r\n    }\r\n\r\n    createCustomerAddress(customerId: string, input: CreateAddressInput) {\r\n        return this.baseDataService.mutate<CreateCustomerAddress.Mutation, CreateCustomerAddress.Variables>(\r\n            CREATE_CUSTOMER_ADDRESS,\r\n            {\r\n                customerId,\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCustomerAddress(input: UpdateAddressInput) {\r\n        return this.baseDataService.mutate<UpdateCustomerAddress.Mutation, UpdateCustomerAddress.Variables>(\r\n            UPDATE_CUSTOMER_ADDRESS,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    createCustomerGroup(input: CreateCustomerGroupInput) {\r\n        return this.baseDataService.mutate<CreateCustomerGroup.Mutation, CreateCustomerGroup.Variables>(\r\n            CREATE_CUSTOMER_GROUP,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCustomerGroup(input: UpdateCustomerGroupInput) {\r\n        return this.baseDataService.mutate<UpdateCustomerGroup.Mutation, UpdateCustomerGroup.Variables>(\r\n            UPDATE_CUSTOMER_GROUP,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteCustomerGroup(id: string) {\r\n        return this.baseDataService.mutate<DeleteCustomerGroup.Mutation, DeleteCustomerGroup.Variables>(\r\n            DELETE_CUSTOMER_GROUP,\r\n            { id },\r\n        );\r\n    }\r\n\r\n    getCustomerGroupList(options?: CustomerGroupListOptions) {\r\n        return this.baseDataService.query<GetCustomerGroups.Query, GetCustomerGroups.Variables>(\r\n            GET_CUSTOMER_GROUPS,\r\n            {\r\n                options,\r\n            },\r\n        );\r\n    }\r\n\r\n    getCustomerGroupWithCustomers(id: string, options: CustomerListOptions) {\r\n        return this.baseDataService.query<\r\n            GetCustomerGroupWithCustomers.Query,\r\n            GetCustomerGroupWithCustomers.Variables\r\n        >(GET_CUSTOMER_GROUP_WITH_CUSTOMERS, {\r\n            id,\r\n            options,\r\n        });\r\n    }\r\n\r\n    addCustomersToGroup(groupId: string, customerIds: string[]) {\r\n        return this.baseDataService.mutate<AddCustomersToGroup.Mutation, AddCustomersToGroup.Variables>(\r\n            ADD_CUSTOMERS_TO_GROUP,\r\n            {\r\n                groupId,\r\n                customerIds,\r\n            },\r\n        );\r\n    }\r\n\r\n    removeCustomersFromGroup(groupId: string, customerIds: string[]) {\r\n        return this.baseDataService.mutate<\r\n            RemoveCustomersFromGroup.Mutation,\r\n            RemoveCustomersFromGroup.Variables\r\n        >(REMOVE_CUSTOMERS_FROM_GROUP, {\r\n            groupId,\r\n            customerIds,\r\n        });\r\n    }\r\n\r\n    getCustomerHistory(id: string, options?: HistoryEntryListOptions) {\r\n        return this.baseDataService.query<GetCustomerHistory.Query, GetCustomerHistory.Variables>(\r\n            GET_CUSTOMER_HISTORY,\r\n            {\r\n                id,\r\n                options,\r\n            },\r\n        );\r\n    }\r\n\r\n    addNoteToCustomer(customerId: string, note: string) {\r\n        return this.baseDataService.mutate<AddNoteToCustomer.Mutation, AddNoteToCustomer.Variables>(\r\n            ADD_NOTE_TO_CUSTOMER,\r\n            {\r\n                input: {\r\n                    note,\r\n                    isPublic: false,\r\n                    id: customerId,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCustomerNote(input: UpdateCustomerNoteInput) {\r\n        return this.baseDataService.mutate<UpdateCustomerNote.Mutation, UpdateCustomerNote.Variables>(\r\n            UPDATE_CUSTOMER_NOTE,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteCustomerNote(id: string) {\r\n        return this.baseDataService.mutate<DeleteCustomerNote.Mutation, DeleteCustomerNote.Variables>(\r\n            DELETE_CUSTOMER_NOTE,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nexport const FACET_VALUE_FRAGMENT = gql`\r\n    fragment FacetValue on FacetValue {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        languageCode\r\n        code\r\n        name\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        facet {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const FACET_WITH_VALUES_FRAGMENT = gql`\r\n    fragment FacetWithValues on Facet {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        languageCode\r\n        isPrivate\r\n        code\r\n        name\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        values {\r\n            ...FacetValue\r\n        }\r\n    }\r\n    ${FACET_VALUE_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_FACET = gql`\r\n    mutation CreateFacet($input: CreateFacetInput!) {\r\n        createFacet(input: $input) {\r\n            ...FacetWithValues\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_FACET = gql`\r\n    mutation UpdateFacet($input: UpdateFacetInput!) {\r\n        updateFacet(input: $input) {\r\n            ...FacetWithValues\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_FACET = gql`\r\n    mutation DeleteFacet($id: ID!, $force: Boolean) {\r\n        deleteFacet(id: $id, force: $force) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_FACET_VALUES = gql`\r\n    mutation CreateFacetValues($input: [CreateFacetValueInput!]!) {\r\n        createFacetValues(input: $input) {\r\n            ...FacetValue\r\n        }\r\n    }\r\n    ${FACET_VALUE_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_FACET_VALUES = gql`\r\n    mutation UpdateFacetValues($input: [UpdateFacetValueInput!]!) {\r\n        updateFacetValues(input: $input) {\r\n            ...FacetValue\r\n        }\r\n    }\r\n    ${FACET_VALUE_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_FACET_VALUES = gql`\r\n    mutation DeleteFacetValues($ids: [ID!]!, $force: Boolean) {\r\n        deleteFacetValues(ids: $ids, force: $force) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_FACET_LIST = gql`\r\n    query GetFacetList($options: FacetListOptions) {\r\n        facets(options: $options) {\r\n            items {\r\n                ...FacetWithValues\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n\r\nexport const GET_FACET_WITH_VALUES = gql`\r\n    query GetFacetWithValues($id: ID!) {\r\n        facet(id: $id) {\r\n            ...FacetWithValues\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n","import { pick } from '@vendure/common/lib/pick';\r\n\r\nimport {\r\n    CreateFacet,\r\n    CreateFacetInput,\r\n    CreateFacetValueInput,\r\n    CreateFacetValues,\r\n    DeleteFacet,\r\n    DeleteFacetValues,\r\n    GetFacetList,\r\n    GetFacetWithValues,\r\n    UpdateFacet,\r\n    UpdateFacetInput,\r\n    UpdateFacetValueInput,\r\n    UpdateFacetValues,\r\n} from '../../common/generated-types';\r\nimport {\r\n    CREATE_FACET,\r\n    CREATE_FACET_VALUES,\r\n    DELETE_FACET,\r\n    DELETE_FACET_VALUES,\r\n    GET_FACET_LIST,\r\n    GET_FACET_WITH_VALUES,\r\n    UPDATE_FACET,\r\n    UPDATE_FACET_VALUES,\r\n} from '../definitions/facet-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class FacetDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getFacets(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetFacetList.Query, GetFacetList.Variables>(GET_FACET_LIST, {\r\n            options: {\r\n                take,\r\n                skip,\r\n            },\r\n        });\r\n    }\r\n\r\n    getAllFacets() {\r\n        return this.baseDataService.query<GetFacetList.Query, GetFacetList.Variables>(GET_FACET_LIST, {});\r\n    }\r\n\r\n    getFacet(id: string) {\r\n        return this.baseDataService.query<GetFacetWithValues.Query, GetFacetWithValues.Variables>(\r\n            GET_FACET_WITH_VALUES,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    createFacet(facet: CreateFacetInput) {\r\n        const input: CreateFacet.Variables = {\r\n            input: pick(facet, ['code', 'isPrivate', 'translations', 'values', 'customFields']),\r\n        };\r\n        return this.baseDataService.mutate<CreateFacet.Mutation, CreateFacet.Variables>(CREATE_FACET, input);\r\n    }\r\n\r\n    updateFacet(facet: UpdateFacetInput) {\r\n        const input: UpdateFacet.Variables = {\r\n            input: pick(facet, ['id', 'code', 'isPrivate', 'translations', 'customFields']),\r\n        };\r\n        return this.baseDataService.mutate<UpdateFacet.Mutation, UpdateFacet.Variables>(UPDATE_FACET, input);\r\n    }\r\n\r\n    deleteFacet(id: string, force: boolean) {\r\n        return this.baseDataService.mutate<DeleteFacet.Mutation, DeleteFacet.Variables>(DELETE_FACET, {\r\n            id,\r\n            force,\r\n        });\r\n    }\r\n\r\n    createFacetValues(facetValues: CreateFacetValueInput[]) {\r\n        const input: CreateFacetValues.Variables = {\r\n            input: facetValues.map(pick(['facetId', 'code', 'translations', 'customFields'])),\r\n        };\r\n        return this.baseDataService.mutate<CreateFacetValues.Mutation, CreateFacetValues.Variables>(\r\n            CREATE_FACET_VALUES,\r\n            input,\r\n        );\r\n    }\r\n\r\n    updateFacetValues(facetValues: UpdateFacetValueInput[]) {\r\n        const input: UpdateFacetValues.Variables = {\r\n            input: facetValues.map(pick(['id', 'code', 'translations', 'customFields'])),\r\n        };\r\n        return this.baseDataService.mutate<UpdateFacetValues.Mutation, UpdateFacetValues.Variables>(\r\n            UPDATE_FACET_VALUES,\r\n            input,\r\n        );\r\n    }\r\n\r\n    deleteFacetValues(ids: string[], force: boolean) {\r\n        return this.baseDataService.mutate<DeleteFacetValues.Mutation, DeleteFacetValues.Variables>(\r\n            DELETE_FACET_VALUES,\r\n            {\r\n                ids,\r\n                force,\r\n            },\r\n        );\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport { ERROR_RESULT_FRAGMENT } from './shared-definitions';\r\n\r\nexport const DISCOUNT_FRAGMENT = gql`\r\n    fragment Discount on Discount {\r\n        adjustmentSource\r\n        amount\r\n        amountWithTax\r\n        description\r\n        type\r\n    }\r\n`;\r\n\r\nexport const REFUND_FRAGMENT = gql`\r\n    fragment Refund on Refund {\r\n        id\r\n        state\r\n        items\r\n        shipping\r\n        adjustment\r\n        transactionId\r\n        paymentId\r\n    }\r\n`;\r\n\r\nexport const ORDER_ADDRESS_FRAGMENT = gql`\r\n    fragment OrderAddress on OrderAddress {\r\n        fullName\r\n        company\r\n        streetLine1\r\n        streetLine2\r\n        city\r\n        province\r\n        postalCode\r\n        country\r\n        countryCode\r\n        phoneNumber\r\n    }\r\n`;\r\n\r\nexport const ORDER_FRAGMENT = gql`\r\n    fragment Order on Order {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        orderPlacedAt\r\n        code\r\n        state\r\n        nextStates\r\n        total\r\n        currencyCode\r\n        customer {\r\n            id\r\n            firstName\r\n            lastName\r\n        }\r\n        shippingLines {\r\n            shippingMethod {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const FULFILLMENT_FRAGMENT = gql`\r\n    fragment Fulfillment on Fulfillment {\r\n        id\r\n        state\r\n        nextStates\r\n        createdAt\r\n        updatedAt\r\n        method\r\n        orderItems {\r\n            id\r\n        }\r\n        trackingCode\r\n    }\r\n`;\r\n\r\nexport const ORDER_LINE_FRAGMENT = gql`\r\n    fragment OrderLine on OrderLine {\r\n        id\r\n        featuredAsset {\r\n            preview\r\n        }\r\n        productVariant {\r\n            id\r\n            name\r\n            sku\r\n            trackInventory\r\n            stockOnHand\r\n        }\r\n        discounts {\r\n            ...Discount\r\n        }\r\n        unitPrice\r\n        unitPriceWithTax\r\n        proratedUnitPrice\r\n        proratedUnitPriceWithTax\r\n        quantity\r\n        items {\r\n            id\r\n            unitPrice\r\n            unitPriceWithTax\r\n            taxRate\r\n            refundId\r\n            cancelled\r\n            fulfillment {\r\n                ...Fulfillment\r\n            }\r\n        }\r\n        linePrice\r\n        lineTax\r\n        linePriceWithTax\r\n        discountedLinePrice\r\n        discountedLinePriceWithTax\r\n    }\r\n`;\r\n\r\nexport const ORDER_DETAIL_FRAGMENT = gql`\r\n    fragment OrderDetail on Order {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        state\r\n        nextStates\r\n        active\r\n        customer {\r\n            id\r\n            firstName\r\n            lastName\r\n        }\r\n        lines {\r\n            ...OrderLine\r\n        }\r\n        surcharges {\r\n            id\r\n            sku\r\n            description\r\n            price\r\n            priceWithTax\r\n            taxRate\r\n        }\r\n        discounts {\r\n            ...Discount\r\n        }\r\n        promotions {\r\n            id\r\n            couponCode\r\n        }\r\n        subTotal\r\n        subTotalWithTax\r\n        total\r\n        totalWithTax\r\n        currencyCode\r\n        shipping\r\n        shippingWithTax\r\n        shippingLines {\r\n            shippingMethod {\r\n                id\r\n                code\r\n                name\r\n                fulfillmentHandlerCode\r\n                description\r\n            }\r\n        }\r\n        taxSummary {\r\n            description\r\n            taxBase\r\n            taxRate\r\n            taxTotal\r\n        }\r\n        shippingAddress {\r\n            ...OrderAddress\r\n        }\r\n        billingAddress {\r\n            ...OrderAddress\r\n        }\r\n        payments {\r\n            id\r\n            createdAt\r\n            transactionId\r\n            amount\r\n            method\r\n            state\r\n            nextStates\r\n            errorMessage\r\n            metadata\r\n            refunds {\r\n                id\r\n                createdAt\r\n                state\r\n                items\r\n                adjustment\r\n                total\r\n                paymentId\r\n                reason\r\n                transactionId\r\n                method\r\n                metadata\r\n                orderItems {\r\n                    id\r\n                }\r\n            }\r\n        }\r\n        fulfillments {\r\n            ...Fulfillment\r\n        }\r\n        modifications {\r\n            id\r\n            createdAt\r\n            isSettled\r\n            priceChange\r\n            note\r\n            payment {\r\n                id\r\n                amount\r\n            }\r\n            orderItems {\r\n                id\r\n            }\r\n            refund {\r\n                id\r\n                paymentId\r\n                total\r\n            }\r\n            surcharges {\r\n                id\r\n            }\r\n        }\r\n    }\r\n    ${DISCOUNT_FRAGMENT}\r\n    ${ORDER_ADDRESS_FRAGMENT}\r\n    ${FULFILLMENT_FRAGMENT}\r\n    ${ORDER_LINE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ORDERS_LIST = gql`\r\n    query GetOrderList($options: OrderListOptions) {\r\n        orders(options: $options) {\r\n            items {\r\n                ...Order\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ORDER_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ORDER = gql`\r\n    query GetOrder($id: ID!) {\r\n        order(id: $id) {\r\n            ...OrderDetail\r\n        }\r\n    }\r\n    ${ORDER_DETAIL_FRAGMENT}\r\n`;\r\n\r\nexport const SETTLE_PAYMENT = gql`\r\n    mutation SettlePayment($id: ID!) {\r\n        settlePayment(id: $id) {\r\n            ... on Payment {\r\n                id\r\n                transactionId\r\n                amount\r\n                method\r\n                state\r\n                metadata\r\n            }\r\n            ...ErrorResult\r\n            ... on SettlePaymentError {\r\n                paymentErrorMessage\r\n            }\r\n            ... on PaymentStateTransitionError {\r\n                transitionError\r\n            }\r\n            ... on OrderStateTransitionError {\r\n                transitionError\r\n            }\r\n        }\r\n    }\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const TRANSITION_PAYMENT_TO_STATE = gql`\r\n    mutation TransitionPaymentToState($id: ID!, $state: String!) {\r\n        transitionPaymentToState(id: $id, state: $state) {\r\n            ... on Payment {\r\n                id\r\n                transactionId\r\n                amount\r\n                method\r\n                state\r\n                metadata\r\n            }\r\n            ...ErrorResult\r\n            ... on PaymentStateTransitionError {\r\n                transitionError\r\n            }\r\n        }\r\n    }\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_FULFILLMENT = gql`\r\n    mutation CreateFulfillment($input: FulfillOrderInput!) {\r\n        addFulfillmentToOrder(input: $input) {\r\n            ...Fulfillment\r\n            ... on CreateFulfillmentError {\r\n                errorCode\r\n                message\r\n                fulfillmentHandlerError\r\n            }\r\n            ... on FulfillmentStateTransitionError {\r\n                errorCode\r\n                message\r\n                transitionError\r\n            }\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${FULFILLMENT_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const CANCEL_ORDER = gql`\r\n    mutation CancelOrder($input: CancelOrderInput!) {\r\n        cancelOrder(input: $input) {\r\n            ...OrderDetail\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${ORDER_DETAIL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const REFUND_ORDER = gql`\r\n    mutation RefundOrder($input: RefundOrderInput!) {\r\n        refundOrder(input: $input) {\r\n            ...Refund\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${REFUND_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const SETTLE_REFUND = gql`\r\n    mutation SettleRefund($input: SettleRefundInput!) {\r\n        settleRefund(input: $input) {\r\n            ...Refund\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${REFUND_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ORDER_HISTORY = gql`\r\n    query GetOrderHistory($id: ID!, $options: HistoryEntryListOptions) {\r\n        order(id: $id) {\r\n            id\r\n            history(options: $options) {\r\n                totalItems\r\n                items {\r\n                    id\r\n                    type\r\n                    createdAt\r\n                    isPublic\r\n                    administrator {\r\n                        id\r\n                        firstName\r\n                        lastName\r\n                    }\r\n                    data\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_NOTE_TO_ORDER = gql`\r\n    mutation AddNoteToOrder($input: AddNoteToOrderInput!) {\r\n        addNoteToOrder(input: $input) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_ORDER_NOTE = gql`\r\n    mutation UpdateOrderNote($input: UpdateOrderNoteInput!) {\r\n        updateOrderNote(input: $input) {\r\n            id\r\n            data\r\n            isPublic\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ORDER_NOTE = gql`\r\n    mutation DeleteOrderNote($id: ID!) {\r\n        deleteOrderNote(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TRANSITION_ORDER_TO_STATE = gql`\r\n    mutation TransitionOrderToState($id: ID!, $state: String!) {\r\n        transitionOrderToState(id: $id, state: $state) {\r\n            ...Order\r\n            ...ErrorResult\r\n            ... on OrderStateTransitionError {\r\n                transitionError\r\n            }\r\n        }\r\n    }\r\n    ${ORDER_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ORDER_CUSTOM_FIELDS = gql`\r\n    mutation UpdateOrderCustomFields($input: UpdateOrderInput!) {\r\n        setOrderCustomFields(input: $input) {\r\n            ...Order\r\n        }\r\n    }\r\n    ${ORDER_FRAGMENT}\r\n`;\r\n\r\nexport const TRANSITION_FULFILLMENT_TO_STATE = gql`\r\n    mutation TransitionFulfillmentToState($id: ID!, $state: String!) {\r\n        transitionFulfillmentToState(id: $id, state: $state) {\r\n            ...Fulfillment\r\n            ...ErrorResult\r\n            ... on FulfillmentStateTransitionError {\r\n                transitionError\r\n            }\r\n        }\r\n    }\r\n    ${FULFILLMENT_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ORDER_SUMMARY = gql`\r\n    query GetOrderSummary($start: DateTime!, $end: DateTime!) {\r\n        orders(options: { filter: { orderPlacedAt: { between: { start: $start, end: $end } } } }) {\r\n            totalItems\r\n            items {\r\n                id\r\n                total\r\n                currencyCode\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MODIFY_ORDER = gql`\r\n    mutation ModifyOrder($input: ModifyOrderInput!) {\r\n        modifyOrder(input: $input) {\r\n            ...OrderDetail\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${ORDER_DETAIL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const ADD_MANUAL_PAYMENT_TO_ORDER = gql`\r\n    mutation AddManualPayment($input: ManualPaymentInput!) {\r\n        addManualPaymentToOrder(input: $input) {\r\n            ...OrderDetail\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${ORDER_DETAIL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n","import {\r\n    AddManualPayment,\r\n    AddNoteToOrder,\r\n    AddNoteToOrderInput,\r\n    CancelOrder,\r\n    CancelOrderInput,\r\n    CreateFulfillment,\r\n    DeleteOrderNote,\r\n    FulfillOrderInput,\r\n    GetOrder,\r\n    GetOrderHistory,\r\n    GetOrderList,\r\n    GetOrderSummary,\r\n    HistoryEntryListOptions,\r\n    ManualPaymentInput,\r\n    ModifyOrder,\r\n    ModifyOrderInput,\r\n    OrderListOptions,\r\n    RefundOrder,\r\n    RefundOrderInput,\r\n    SettlePayment,\r\n    SettleRefund,\r\n    SettleRefundInput,\r\n    TransitionFulfillmentToState,\r\n    TransitionOrderToState,\r\n    TransitionPaymentToState,\r\n    UpdateOrderCustomFields,\r\n    UpdateOrderInput,\r\n    UpdateOrderNote,\r\n    UpdateOrderNoteInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    ADD_MANUAL_PAYMENT_TO_ORDER,\r\n    ADD_NOTE_TO_ORDER,\r\n    CANCEL_ORDER,\r\n    CREATE_FULFILLMENT,\r\n    DELETE_ORDER_NOTE,\r\n    GET_ORDER,\r\n    GET_ORDERS_LIST,\r\n    GET_ORDER_HISTORY,\r\n    GET_ORDER_SUMMARY,\r\n    MODIFY_ORDER,\r\n    REFUND_ORDER,\r\n    SETTLE_PAYMENT,\r\n    SETTLE_REFUND,\r\n    TRANSITION_FULFILLMENT_TO_STATE,\r\n    TRANSITION_ORDER_TO_STATE,\r\n    TRANSITION_PAYMENT_TO_STATE,\r\n    UPDATE_ORDER_CUSTOM_FIELDS,\r\n    UPDATE_ORDER_NOTE,\r\n} from '../definitions/order-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class OrderDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getOrders(options: OrderListOptions = { take: 10 }) {\r\n        return this.baseDataService.query<GetOrderList.Query, GetOrderList.Variables>(GET_ORDERS_LIST, {\r\n            options,\r\n        });\r\n    }\r\n\r\n    getOrder(id: string) {\r\n        return this.baseDataService.query<GetOrder.Query, GetOrder.Variables>(GET_ORDER, { id });\r\n    }\r\n\r\n    getOrderHistory(id: string, options?: HistoryEntryListOptions) {\r\n        return this.baseDataService.query<GetOrderHistory.Query, GetOrderHistory.Variables>(\r\n            GET_ORDER_HISTORY,\r\n            {\r\n                id,\r\n                options,\r\n            },\r\n        );\r\n    }\r\n\r\n    settlePayment(id: string) {\r\n        return this.baseDataService.mutate<SettlePayment.Mutation, SettlePayment.Variables>(SETTLE_PAYMENT, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    transitionPaymentToState(id: string, state: string) {\r\n        return this.baseDataService.mutate<\r\n            TransitionPaymentToState.Mutation,\r\n            TransitionPaymentToState.Variables\r\n        >(TRANSITION_PAYMENT_TO_STATE, {\r\n            id,\r\n            state,\r\n        });\r\n    }\r\n\r\n    createFulfillment(input: FulfillOrderInput) {\r\n        return this.baseDataService.mutate<CreateFulfillment.Mutation, CreateFulfillment.Variables>(\r\n            CREATE_FULFILLMENT,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    transitionFulfillmentToState(id: string, state: string) {\r\n        return this.baseDataService.mutate<\r\n            TransitionFulfillmentToState.Mutation,\r\n            TransitionFulfillmentToState.Variables\r\n        >(TRANSITION_FULFILLMENT_TO_STATE, {\r\n            id,\r\n            state,\r\n        });\r\n    }\r\n\r\n    cancelOrder(input: CancelOrderInput) {\r\n        return this.baseDataService.mutate<CancelOrder.Mutation, CancelOrder.Variables>(CANCEL_ORDER, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    refundOrder(input: RefundOrderInput) {\r\n        return this.baseDataService.mutate<RefundOrder.Mutation, RefundOrder.Variables>(REFUND_ORDER, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    settleRefund(input: SettleRefundInput, orderId: string) {\r\n        return this.baseDataService.mutate<SettleRefund.Mutation, SettleRefund.Variables>(SETTLE_REFUND, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    addNoteToOrder(input: AddNoteToOrderInput) {\r\n        return this.baseDataService.mutate<AddNoteToOrder.Mutation, AddNoteToOrder.Variables>(\r\n            ADD_NOTE_TO_ORDER,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateOrderNote(input: UpdateOrderNoteInput) {\r\n        return this.baseDataService.mutate<UpdateOrderNote.Mutation, UpdateOrderNote.Variables>(\r\n            UPDATE_ORDER_NOTE,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteOrderNote(id: string) {\r\n        return this.baseDataService.mutate<DeleteOrderNote.Mutation, DeleteOrderNote.Variables>(\r\n            DELETE_ORDER_NOTE,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    transitionToState(id: string, state: string) {\r\n        return this.baseDataService.mutate<TransitionOrderToState.Mutation, TransitionOrderToState.Variables>(\r\n            TRANSITION_ORDER_TO_STATE,\r\n            {\r\n                id,\r\n                state,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateOrderCustomFields(input: UpdateOrderInput) {\r\n        return this.baseDataService.mutate<\r\n            UpdateOrderCustomFields.Mutation,\r\n            UpdateOrderCustomFields.Variables\r\n        >(UPDATE_ORDER_CUSTOM_FIELDS, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    getOrderSummary(start: Date, end: Date) {\r\n        return this.baseDataService.query<GetOrderSummary.Query, GetOrderSummary.Variables>(\r\n            GET_ORDER_SUMMARY,\r\n            {\r\n                start: start.toISOString(),\r\n                end: end.toISOString(),\r\n            },\r\n        );\r\n    }\r\n\r\n    modifyOrder(input: ModifyOrderInput) {\r\n        return this.baseDataService.mutate<ModifyOrder.Mutation, ModifyOrder.Variables>(MODIFY_ORDER, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    addManualPaymentToOrder(input: ManualPaymentInput) {\r\n        return this.baseDataService.mutate<AddManualPayment.Mutation, AddManualPayment.Variables>(\r\n            ADD_MANUAL_PAYMENT_TO_ORDER,\r\n            { input },\r\n        );\r\n    }\r\n}\r\n","// tslint:disable\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\nexport type Query = {\n  __typename?: 'Query';\n  activeAdministrator?: Maybe<Administrator>;\n  activeChannel: Channel;\n  administrator?: Maybe<Administrator>;\n  administrators: AdministratorList;\n  /** Get a single Asset by id */\n  asset?: Maybe<Asset>;\n  /** Get a list of Assets */\n  assets: AssetList;\n  channel?: Maybe<Channel>;\n  channels: Array<Channel>;\n  /** Get a Collection either by id or slug. If neither id nor slug is speicified, an error will result. */\n  collection?: Maybe<Collection>;\n  collectionFilters: Array<ConfigurableOperationDefinition>;\n  collections: CollectionList;\n  countries: CountryList;\n  country?: Maybe<Country>;\n  customer?: Maybe<Customer>;\n  customerGroup?: Maybe<CustomerGroup>;\n  customerGroups: CustomerGroupList;\n  customers: CustomerList;\n  facet?: Maybe<Facet>;\n  facets: FacetList;\n  fulfillmentHandlers: Array<ConfigurableOperationDefinition>;\n  globalSettings: GlobalSettings;\n  job?: Maybe<Job>;\n  jobQueues: Array<JobQueue>;\n  jobs: JobList;\n  jobsById: Array<Job>;\n  me?: Maybe<CurrentUser>;\n  networkStatus: NetworkStatus;\n  order?: Maybe<Order>;\n  orders: OrderList;\n  paymentMethod?: Maybe<PaymentMethod>;\n  paymentMethodEligibilityCheckers: Array<ConfigurableOperationDefinition>;\n  paymentMethodHandlers: Array<ConfigurableOperationDefinition>;\n  paymentMethods: PaymentMethodList;\n  /** Get a Product either by id or slug. If neither id nor slug is speicified, an error will result. */\n  product?: Maybe<Product>;\n  productOptionGroup?: Maybe<ProductOptionGroup>;\n  productOptionGroups: Array<ProductOptionGroup>;\n  /** Get a ProductVariant by id */\n  productVariant?: Maybe<ProductVariant>;\n  /** List ProductVariants either all or for the specific product. */\n  productVariants: ProductVariantList;\n  /** List Products */\n  products: ProductList;\n  promotion?: Maybe<Promotion>;\n  promotionActions: Array<ConfigurableOperationDefinition>;\n  promotionConditions: Array<ConfigurableOperationDefinition>;\n  promotions: PromotionList;\n  role?: Maybe<Role>;\n  roles: RoleList;\n  search: SearchResponse;\n  shippingCalculators: Array<ConfigurableOperationDefinition>;\n  shippingEligibilityCheckers: Array<ConfigurableOperationDefinition>;\n  shippingMethod?: Maybe<ShippingMethod>;\n  shippingMethods: ShippingMethodList;\n  tag: Tag;\n  tags: TagList;\n  taxCategories: Array<TaxCategory>;\n  taxCategory?: Maybe<TaxCategory>;\n  taxRate?: Maybe<TaxRate>;\n  taxRates: TaxRateList;\n  testEligibleShippingMethods: Array<ShippingMethodQuote>;\n  testShippingMethod: TestShippingMethodResult;\n  uiState: UiState;\n  userStatus: UserStatus;\n  zone?: Maybe<Zone>;\n  zones: Array<Zone>;\n};\n\n\nexport type QueryAdministratorArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryAdministratorsArgs = {\n  options?: Maybe<AdministratorListOptions>;\n};\n\n\nexport type QueryAssetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryAssetsArgs = {\n  options?: Maybe<AssetListOptions>;\n};\n\n\nexport type QueryChannelArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCollectionArgs = {\n  id?: Maybe<Scalars['ID']>;\n  slug?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCollectionsArgs = {\n  options?: Maybe<CollectionListOptions>;\n};\n\n\nexport type QueryCountriesArgs = {\n  options?: Maybe<CountryListOptions>;\n};\n\n\nexport type QueryCountryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCustomerArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCustomerGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryCustomerGroupsArgs = {\n  options?: Maybe<CustomerGroupListOptions>;\n};\n\n\nexport type QueryCustomersArgs = {\n  options?: Maybe<CustomerListOptions>;\n};\n\n\nexport type QueryFacetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryFacetsArgs = {\n  options?: Maybe<FacetListOptions>;\n};\n\n\nexport type QueryJobArgs = {\n  jobId: Scalars['ID'];\n};\n\n\nexport type QueryJobsArgs = {\n  options?: Maybe<JobListOptions>;\n};\n\n\nexport type QueryJobsByIdArgs = {\n  jobIds: Array<Scalars['ID']>;\n};\n\n\nexport type QueryOrderArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryOrdersArgs = {\n  options?: Maybe<OrderListOptions>;\n};\n\n\nexport type QueryPaymentMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryPaymentMethodsArgs = {\n  options?: Maybe<PaymentMethodListOptions>;\n};\n\n\nexport type QueryProductArgs = {\n  id?: Maybe<Scalars['ID']>;\n  slug?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryProductOptionGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryProductOptionGroupsArgs = {\n  filterTerm?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryProductVariantArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryProductVariantsArgs = {\n  options?: Maybe<ProductVariantListOptions>;\n  productId?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryProductsArgs = {\n  options?: Maybe<ProductListOptions>;\n};\n\n\nexport type QueryPromotionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryPromotionsArgs = {\n  options?: Maybe<PromotionListOptions>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryRolesArgs = {\n  options?: Maybe<RoleListOptions>;\n};\n\n\nexport type QuerySearchArgs = {\n  input: SearchInput;\n};\n\n\nexport type QueryShippingMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryShippingMethodsArgs = {\n  options?: Maybe<ShippingMethodListOptions>;\n};\n\n\nexport type QueryTagArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTagsArgs = {\n  options?: Maybe<TagListOptions>;\n};\n\n\nexport type QueryTaxCategoryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTaxRateArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTaxRatesArgs = {\n  options?: Maybe<TaxRateListOptions>;\n};\n\n\nexport type QueryTestEligibleShippingMethodsArgs = {\n  input: TestEligibleShippingMethodsInput;\n};\n\n\nexport type QueryTestShippingMethodArgs = {\n  input: TestShippingMethodInput;\n};\n\n\nexport type QueryZoneArgs = {\n  id: Scalars['ID'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Add Customers to a CustomerGroup */\n  addCustomersToGroup: CustomerGroup;\n  addFulfillmentToOrder: AddFulfillmentToOrderResult;\n  /**\n   * Used to manually create a new Payment against an Order. This is used when a completed Order\n   * has been modified (using `modifyOrder`) and the price has increased. The extra payment\n   * can then be manually arranged by the administrator, and the details used to create a new\n   * Payment.\n   */\n  addManualPaymentToOrder: AddManualPaymentToOrderResult;\n  /** Add members to a Zone */\n  addMembersToZone: Zone;\n  addNoteToCustomer: Customer;\n  addNoteToOrder: Order;\n  /** Add an OptionGroup to a Product */\n  addOptionGroupToProduct: Product;\n  /** Assign assets to channel */\n  assignAssetsToChannel: Array<Asset>;\n  /** Assigns ProductVariants to the specified Channel */\n  assignProductVariantsToChannel: Array<ProductVariant>;\n  /** Assigns all ProductVariants of Product to the specified Channel */\n  assignProductsToChannel: Array<Product>;\n  /** Assigns Promotions to the specified Channel */\n  assignPromotionsToChannel: Array<Promotion>;\n  /** Assign a Role to an Administrator */\n  assignRoleToAdministrator: Administrator;\n  /** Authenticates the user using a named authentication strategy */\n  authenticate: AuthenticationResult;\n  cancelJob: Job;\n  cancelOrder: CancelOrderResult;\n  /** Create a new Administrator */\n  createAdministrator: Administrator;\n  /** Create a new Asset */\n  createAssets: Array<CreateAssetResult>;\n  /** Create a new Channel */\n  createChannel: CreateChannelResult;\n  /** Create a new Collection */\n  createCollection: Collection;\n  /** Create a new Country */\n  createCountry: Country;\n  /** Create a new Customer. If a password is provided, a new User will also be created an linked to the Customer. */\n  createCustomer: CreateCustomerResult;\n  /** Create a new Address and associate it with the Customer specified by customerId */\n  createCustomerAddress: Address;\n  /** Create a new CustomerGroup */\n  createCustomerGroup: CustomerGroup;\n  /** Create a new Facet */\n  createFacet: Facet;\n  /** Create one or more FacetValues */\n  createFacetValues: Array<FacetValue>;\n  /** Create existing PaymentMethod */\n  createPaymentMethod: PaymentMethod;\n  /** Create a new Product */\n  createProduct: Product;\n  /** Create a new ProductOption within a ProductOptionGroup */\n  createProductOption: ProductOption;\n  /** Create a new ProductOptionGroup */\n  createProductOptionGroup: ProductOptionGroup;\n  /** Create a set of ProductVariants based on the OptionGroups assigned to the given Product */\n  createProductVariants: Array<Maybe<ProductVariant>>;\n  createPromotion: CreatePromotionResult;\n  /** Create a new Role */\n  createRole: Role;\n  /** Create a new ShippingMethod */\n  createShippingMethod: ShippingMethod;\n  /** Create a new Tag */\n  createTag: Tag;\n  /** Create a new TaxCategory */\n  createTaxCategory: TaxCategory;\n  /** Create a new TaxRate */\n  createTaxRate: TaxRate;\n  /** Create a new Zone */\n  createZone: Zone;\n  /** Delete an Administrator */\n  deleteAdministrator: DeletionResponse;\n  /** Delete an Asset */\n  deleteAsset: DeletionResponse;\n  /** Delete multiple Assets */\n  deleteAssets: DeletionResponse;\n  /** Delete a Channel */\n  deleteChannel: DeletionResponse;\n  /** Delete a Collection and all of its descendants */\n  deleteCollection: DeletionResponse;\n  /** Delete a Country */\n  deleteCountry: DeletionResponse;\n  /** Delete a Customer */\n  deleteCustomer: DeletionResponse;\n  /** Update an existing Address */\n  deleteCustomerAddress: Success;\n  /** Delete a CustomerGroup */\n  deleteCustomerGroup: DeletionResponse;\n  deleteCustomerNote: DeletionResponse;\n  /** Delete an existing Facet */\n  deleteFacet: DeletionResponse;\n  /** Delete one or more FacetValues */\n  deleteFacetValues: Array<DeletionResponse>;\n  deleteOrderNote: DeletionResponse;\n  /** Delete a PaymentMethod */\n  deletePaymentMethod: DeletionResponse;\n  /** Delete a Product */\n  deleteProduct: DeletionResponse;\n  /** Delete a ProductVariant */\n  deleteProductVariant: DeletionResponse;\n  deletePromotion: DeletionResponse;\n  /** Delete an existing Role */\n  deleteRole: DeletionResponse;\n  /** Delete a ShippingMethod */\n  deleteShippingMethod: DeletionResponse;\n  /** Delete an existing Tag */\n  deleteTag: DeletionResponse;\n  /** Deletes a TaxCategory */\n  deleteTaxCategory: DeletionResponse;\n  /** Delete a TaxRate */\n  deleteTaxRate: DeletionResponse;\n  /** Delete a Zone */\n  deleteZone: DeletionResponse;\n  importProducts?: Maybe<ImportInfo>;\n  /** Authenticates the user using the native authentication strategy. This mutation is an alias for `authenticate({ native: { ... }})` */\n  login: NativeAuthenticationResult;\n  logout: Success;\n  /**\n   * Allows an Order to be modified after it has been completed by the Customer. The Order must first\n   * be in the `Modifying` state.\n   */\n  modifyOrder: ModifyOrderResult;\n  /** Move a Collection to a different parent or index */\n  moveCollection: Collection;\n  refundOrder: RefundOrderResult;\n  reindex: Job;\n  /** Remove Customers from a CustomerGroup */\n  removeCustomersFromGroup: CustomerGroup;\n  /** Remove members from a Zone */\n  removeMembersFromZone: Zone;\n  /** Remove an OptionGroup from a Product */\n  removeOptionGroupFromProduct: RemoveOptionGroupFromProductResult;\n  /** Removes ProductVariants from the specified Channel */\n  removeProductVariantsFromChannel: Array<ProductVariant>;\n  /** Removes all ProductVariants of Product from the specified Channel */\n  removeProductsFromChannel: Array<Product>;\n  /** Removes Promotions from the specified Channel */\n  removePromotionsFromChannel: Array<Promotion>;\n  /** Remove all settled jobs in the given queues olfer than the given date. Returns the number of jobs deleted. */\n  removeSettledJobs: Scalars['Int'];\n  requestCompleted: Scalars['Int'];\n  requestStarted: Scalars['Int'];\n  setActiveChannel: UserStatus;\n  setAsLoggedIn: UserStatus;\n  setAsLoggedOut: UserStatus;\n  setContentLanguage: LanguageCode;\n  setOrderCustomFields?: Maybe<Order>;\n  setUiLanguage: LanguageCode;\n  setUiTheme: Scalars['String'];\n  settlePayment: SettlePaymentResult;\n  settleRefund: SettleRefundResult;\n  transitionFulfillmentToState: TransitionFulfillmentToStateResult;\n  transitionOrderToState?: Maybe<TransitionOrderToStateResult>;\n  transitionPaymentToState: TransitionPaymentToStateResult;\n  /** Update the active (currently logged-in) Administrator */\n  updateActiveAdministrator: Administrator;\n  /** Update an existing Administrator */\n  updateAdministrator: Administrator;\n  /** Update an existing Asset */\n  updateAsset: Asset;\n  /** Update an existing Channel */\n  updateChannel: UpdateChannelResult;\n  /** Update an existing Collection */\n  updateCollection: Collection;\n  /** Update an existing Country */\n  updateCountry: Country;\n  /** Update an existing Customer */\n  updateCustomer: UpdateCustomerResult;\n  /** Update an existing Address */\n  updateCustomerAddress: Address;\n  /** Update an existing CustomerGroup */\n  updateCustomerGroup: CustomerGroup;\n  updateCustomerNote: HistoryEntry;\n  /** Update an existing Facet */\n  updateFacet: Facet;\n  /** Update one or more FacetValues */\n  updateFacetValues: Array<FacetValue>;\n  updateGlobalSettings: UpdateGlobalSettingsResult;\n  updateOrderNote: HistoryEntry;\n  /** Update an existing PaymentMethod */\n  updatePaymentMethod: PaymentMethod;\n  /** Update an existing Product */\n  updateProduct: Product;\n  /** Create a new ProductOption within a ProductOptionGroup */\n  updateProductOption: ProductOption;\n  /** Update an existing ProductOptionGroup */\n  updateProductOptionGroup: ProductOptionGroup;\n  /** Update existing ProductVariants */\n  updateProductVariants: Array<Maybe<ProductVariant>>;\n  updatePromotion: UpdatePromotionResult;\n  /** Update an existing Role */\n  updateRole: Role;\n  /** Update an existing ShippingMethod */\n  updateShippingMethod: ShippingMethod;\n  /** Update an existing Tag */\n  updateTag: Tag;\n  /** Update an existing TaxCategory */\n  updateTaxCategory: TaxCategory;\n  /** Update an existing TaxRate */\n  updateTaxRate: TaxRate;\n  updateUserChannels: UserStatus;\n  /** Update an existing Zone */\n  updateZone: Zone;\n};\n\n\nexport type MutationAddCustomersToGroupArgs = {\n  customerGroupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationAddFulfillmentToOrderArgs = {\n  input: FulfillOrderInput;\n};\n\n\nexport type MutationAddManualPaymentToOrderArgs = {\n  input: ManualPaymentInput;\n};\n\n\nexport type MutationAddMembersToZoneArgs = {\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationAddNoteToCustomerArgs = {\n  input: AddNoteToCustomerInput;\n};\n\n\nexport type MutationAddNoteToOrderArgs = {\n  input: AddNoteToOrderInput;\n};\n\n\nexport type MutationAddOptionGroupToProductArgs = {\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n};\n\n\nexport type MutationAssignAssetsToChannelArgs = {\n  input: AssignAssetsToChannelInput;\n};\n\n\nexport type MutationAssignProductVariantsToChannelArgs = {\n  input: AssignProductVariantsToChannelInput;\n};\n\n\nexport type MutationAssignProductsToChannelArgs = {\n  input: AssignProductsToChannelInput;\n};\n\n\nexport type MutationAssignPromotionsToChannelArgs = {\n  input: AssignPromotionsToChannelInput;\n};\n\n\nexport type MutationAssignRoleToAdministratorArgs = {\n  administratorId: Scalars['ID'];\n  roleId: Scalars['ID'];\n};\n\n\nexport type MutationAuthenticateArgs = {\n  input: AuthenticationInput;\n  rememberMe?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationCancelJobArgs = {\n  jobId: Scalars['ID'];\n};\n\n\nexport type MutationCancelOrderArgs = {\n  input: CancelOrderInput;\n};\n\n\nexport type MutationCreateAdministratorArgs = {\n  input: CreateAdministratorInput;\n};\n\n\nexport type MutationCreateAssetsArgs = {\n  input: Array<CreateAssetInput>;\n};\n\n\nexport type MutationCreateChannelArgs = {\n  input: CreateChannelInput;\n};\n\n\nexport type MutationCreateCollectionArgs = {\n  input: CreateCollectionInput;\n};\n\n\nexport type MutationCreateCountryArgs = {\n  input: CreateCountryInput;\n};\n\n\nexport type MutationCreateCustomerArgs = {\n  input: CreateCustomerInput;\n  password?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationCreateCustomerAddressArgs = {\n  customerId: Scalars['ID'];\n  input: CreateAddressInput;\n};\n\n\nexport type MutationCreateCustomerGroupArgs = {\n  input: CreateCustomerGroupInput;\n};\n\n\nexport type MutationCreateFacetArgs = {\n  input: CreateFacetInput;\n};\n\n\nexport type MutationCreateFacetValuesArgs = {\n  input: Array<CreateFacetValueInput>;\n};\n\n\nexport type MutationCreatePaymentMethodArgs = {\n  input: CreatePaymentMethodInput;\n};\n\n\nexport type MutationCreateProductArgs = {\n  input: CreateProductInput;\n};\n\n\nexport type MutationCreateProductOptionArgs = {\n  input: CreateProductOptionInput;\n};\n\n\nexport type MutationCreateProductOptionGroupArgs = {\n  input: CreateProductOptionGroupInput;\n};\n\n\nexport type MutationCreateProductVariantsArgs = {\n  input: Array<CreateProductVariantInput>;\n};\n\n\nexport type MutationCreatePromotionArgs = {\n  input: CreatePromotionInput;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input: CreateRoleInput;\n};\n\n\nexport type MutationCreateShippingMethodArgs = {\n  input: CreateShippingMethodInput;\n};\n\n\nexport type MutationCreateTagArgs = {\n  input: CreateTagInput;\n};\n\n\nexport type MutationCreateTaxCategoryArgs = {\n  input: CreateTaxCategoryInput;\n};\n\n\nexport type MutationCreateTaxRateArgs = {\n  input: CreateTaxRateInput;\n};\n\n\nexport type MutationCreateZoneArgs = {\n  input: CreateZoneInput;\n};\n\n\nexport type MutationDeleteAdministratorArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteAssetArgs = {\n  input: DeleteAssetInput;\n};\n\n\nexport type MutationDeleteAssetsArgs = {\n  input: DeleteAssetsInput;\n};\n\n\nexport type MutationDeleteChannelArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteCollectionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteCountryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteCustomerArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteCustomerAddressArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteCustomerGroupArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteCustomerNoteArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteFacetArgs = {\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationDeleteFacetValuesArgs = {\n  ids: Array<Scalars['ID']>;\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationDeleteOrderNoteArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeletePaymentMethodArgs = {\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationDeleteProductArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteProductVariantArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeletePromotionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteShippingMethodArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteTagArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteTaxCategoryArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteTaxRateArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteZoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationImportProductsArgs = {\n  csvFile: Scalars['Upload'];\n};\n\n\nexport type MutationLoginArgs = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n  rememberMe?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationModifyOrderArgs = {\n  input: ModifyOrderInput;\n};\n\n\nexport type MutationMoveCollectionArgs = {\n  input: MoveCollectionInput;\n};\n\n\nexport type MutationRefundOrderArgs = {\n  input: RefundOrderInput;\n};\n\n\nexport type MutationRemoveCustomersFromGroupArgs = {\n  customerGroupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationRemoveMembersFromZoneArgs = {\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']>;\n};\n\n\nexport type MutationRemoveOptionGroupFromProductArgs = {\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n};\n\n\nexport type MutationRemoveProductVariantsFromChannelArgs = {\n  input: RemoveProductVariantsFromChannelInput;\n};\n\n\nexport type MutationRemoveProductsFromChannelArgs = {\n  input: RemoveProductsFromChannelInput;\n};\n\n\nexport type MutationRemovePromotionsFromChannelArgs = {\n  input: RemovePromotionsFromChannelInput;\n};\n\n\nexport type MutationRemoveSettledJobsArgs = {\n  queueNames?: Maybe<Array<Scalars['String']>>;\n  olderThan?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type MutationSetActiveChannelArgs = {\n  channelId: Scalars['ID'];\n};\n\n\nexport type MutationSetAsLoggedInArgs = {\n  input: UserStatusInput;\n};\n\n\nexport type MutationSetContentLanguageArgs = {\n  languageCode: LanguageCode;\n};\n\n\nexport type MutationSetOrderCustomFieldsArgs = {\n  input: UpdateOrderInput;\n};\n\n\nexport type MutationSetUiLanguageArgs = {\n  languageCode: LanguageCode;\n};\n\n\nexport type MutationSetUiThemeArgs = {\n  theme: Scalars['String'];\n};\n\n\nexport type MutationSettlePaymentArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationSettleRefundArgs = {\n  input: SettleRefundInput;\n};\n\n\nexport type MutationTransitionFulfillmentToStateArgs = {\n  id: Scalars['ID'];\n  state: Scalars['String'];\n};\n\n\nexport type MutationTransitionOrderToStateArgs = {\n  id: Scalars['ID'];\n  state: Scalars['String'];\n};\n\n\nexport type MutationTransitionPaymentToStateArgs = {\n  id: Scalars['ID'];\n  state: Scalars['String'];\n};\n\n\nexport type MutationUpdateActiveAdministratorArgs = {\n  input: UpdateActiveAdministratorInput;\n};\n\n\nexport type MutationUpdateAdministratorArgs = {\n  input: UpdateAdministratorInput;\n};\n\n\nexport type MutationUpdateAssetArgs = {\n  input: UpdateAssetInput;\n};\n\n\nexport type MutationUpdateChannelArgs = {\n  input: UpdateChannelInput;\n};\n\n\nexport type MutationUpdateCollectionArgs = {\n  input: UpdateCollectionInput;\n};\n\n\nexport type MutationUpdateCountryArgs = {\n  input: UpdateCountryInput;\n};\n\n\nexport type MutationUpdateCustomerArgs = {\n  input: UpdateCustomerInput;\n};\n\n\nexport type MutationUpdateCustomerAddressArgs = {\n  input: UpdateAddressInput;\n};\n\n\nexport type MutationUpdateCustomerGroupArgs = {\n  input: UpdateCustomerGroupInput;\n};\n\n\nexport type MutationUpdateCustomerNoteArgs = {\n  input: UpdateCustomerNoteInput;\n};\n\n\nexport type MutationUpdateFacetArgs = {\n  input: UpdateFacetInput;\n};\n\n\nexport type MutationUpdateFacetValuesArgs = {\n  input: Array<UpdateFacetValueInput>;\n};\n\n\nexport type MutationUpdateGlobalSettingsArgs = {\n  input: UpdateGlobalSettingsInput;\n};\n\n\nexport type MutationUpdateOrderNoteArgs = {\n  input: UpdateOrderNoteInput;\n};\n\n\nexport type MutationUpdatePaymentMethodArgs = {\n  input: UpdatePaymentMethodInput;\n};\n\n\nexport type MutationUpdateProductArgs = {\n  input: UpdateProductInput;\n};\n\n\nexport type MutationUpdateProductOptionArgs = {\n  input: UpdateProductOptionInput;\n};\n\n\nexport type MutationUpdateProductOptionGroupArgs = {\n  input: UpdateProductOptionGroupInput;\n};\n\n\nexport type MutationUpdateProductVariantsArgs = {\n  input: Array<UpdateProductVariantInput>;\n};\n\n\nexport type MutationUpdatePromotionArgs = {\n  input: UpdatePromotionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateShippingMethodArgs = {\n  input: UpdateShippingMethodInput;\n};\n\n\nexport type MutationUpdateTagArgs = {\n  input: UpdateTagInput;\n};\n\n\nexport type MutationUpdateTaxCategoryArgs = {\n  input: UpdateTaxCategoryInput;\n};\n\n\nexport type MutationUpdateTaxRateArgs = {\n  input: UpdateTaxRateInput;\n};\n\n\nexport type MutationUpdateUserChannelsArgs = {\n  channels: Array<CurrentUserChannelInput>;\n};\n\n\nexport type MutationUpdateZoneArgs = {\n  input: UpdateZoneInput;\n};\n\nexport type AdministratorListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<AdministratorSortParameter>;\n  filter?: Maybe<AdministratorFilterParameter>;\n};\n\nexport type CreateAdministratorInput = {\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  emailAddress: Scalars['String'];\n  password: Scalars['String'];\n  roleIds: Array<Scalars['ID']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateAdministratorInput = {\n  id: Scalars['ID'];\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  roleIds?: Maybe<Array<Scalars['ID']>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateActiveAdministratorInput = {\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Administrator = Node & {\n  __typename?: 'Administrator';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  emailAddress: Scalars['String'];\n  user: User;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type AdministratorList = PaginatedList & {\n  __typename?: 'AdministratorList';\n  items: Array<Administrator>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Asset = Node & {\n  __typename?: 'Asset';\n  tags: Array<Tag>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  type: AssetType;\n  fileSize: Scalars['Int'];\n  mimeType: Scalars['String'];\n  width: Scalars['Int'];\n  height: Scalars['Int'];\n  source: Scalars['String'];\n  preview: Scalars['String'];\n  focalPoint?: Maybe<Coordinate>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type MimeTypeError = ErrorResult & {\n  __typename?: 'MimeTypeError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  fileName: Scalars['String'];\n  mimeType: Scalars['String'];\n};\n\nexport type CreateAssetResult = Asset | MimeTypeError;\n\nexport type AssetListOptions = {\n  tags?: Maybe<Array<Scalars['String']>>;\n  tagsOperator?: Maybe<LogicalOperator>;\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<AssetSortParameter>;\n  filter?: Maybe<AssetFilterParameter>;\n};\n\nexport type CreateAssetInput = {\n  file: Scalars['Upload'];\n  tags?: Maybe<Array<Scalars['String']>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CoordinateInput = {\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\nexport type DeleteAssetInput = {\n  assetId: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n  deleteFromAllChannels?: Maybe<Scalars['Boolean']>;\n};\n\nexport type DeleteAssetsInput = {\n  assetIds: Array<Scalars['ID']>;\n  force?: Maybe<Scalars['Boolean']>;\n  deleteFromAllChannels?: Maybe<Scalars['Boolean']>;\n};\n\nexport type UpdateAssetInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  focalPoint?: Maybe<CoordinateInput>;\n  tags?: Maybe<Array<Scalars['String']>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type AssignAssetsToChannelInput = {\n  assetIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n};\n\nexport type AuthenticationInput = {\n  native?: Maybe<NativeAuthInput>;\n};\n\nexport type NativeAuthenticationResult = CurrentUser | InvalidCredentialsError | NativeAuthStrategyError;\n\nexport type AuthenticationResult = CurrentUser | InvalidCredentialsError;\n\nexport type CreateChannelInput = {\n  code: Scalars['String'];\n  token: Scalars['String'];\n  defaultLanguageCode: LanguageCode;\n  pricesIncludeTax: Scalars['Boolean'];\n  currencyCode: CurrencyCode;\n  defaultTaxZoneId: Scalars['ID'];\n  defaultShippingZoneId: Scalars['ID'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateChannelInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  token?: Maybe<Scalars['String']>;\n  defaultLanguageCode?: Maybe<LanguageCode>;\n  pricesIncludeTax?: Maybe<Scalars['Boolean']>;\n  currencyCode?: Maybe<CurrencyCode>;\n  defaultTaxZoneId?: Maybe<Scalars['ID']>;\n  defaultShippingZoneId?: Maybe<Scalars['ID']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n/** Returned if attempting to set a Channel's defaultLanguageCode to a language which is not enabled in GlobalSettings */\nexport type LanguageNotAvailableError = ErrorResult & {\n  __typename?: 'LanguageNotAvailableError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  languageCode: Scalars['String'];\n};\n\nexport type CreateChannelResult = Channel | LanguageNotAvailableError;\n\nexport type UpdateChannelResult = Channel | LanguageNotAvailableError;\n\nexport type Collection = Node & {\n  __typename?: 'Collection';\n  isPrivate: Scalars['Boolean'];\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode?: Maybe<LanguageCode>;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  breadcrumbs: Array<CollectionBreadcrumb>;\n  position: Scalars['Int'];\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  parent?: Maybe<Collection>;\n  children?: Maybe<Array<Collection>>;\n  filters: Array<ConfigurableOperation>;\n  translations: Array<CollectionTranslation>;\n  productVariants: ProductVariantList;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CollectionProductVariantsArgs = {\n  options?: Maybe<ProductVariantListOptions>;\n};\n\nexport type CollectionListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CollectionSortParameter>;\n  filter?: Maybe<CollectionFilterParameter>;\n};\n\nexport type MoveCollectionInput = {\n  collectionId: Scalars['ID'];\n  parentId: Scalars['ID'];\n  index: Scalars['Int'];\n};\n\nexport type CreateCollectionTranslationInput = {\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCollectionTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateCollectionInput = {\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  parentId?: Maybe<Scalars['ID']>;\n  filters: Array<ConfigurableOperationInput>;\n  translations: Array<CreateCollectionTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateCollectionInput = {\n  id: Scalars['ID'];\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  parentId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  filters?: Maybe<Array<ConfigurableOperationInput>>;\n  translations?: Maybe<Array<UpdateCollectionTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CountryTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type CreateCountryInput = {\n  code: Scalars['String'];\n  translations: Array<CountryTranslationInput>;\n  enabled: Scalars['Boolean'];\n};\n\nexport type UpdateCountryInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<CountryTranslationInput>>;\n  enabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type CountryListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CountrySortParameter>;\n  filter?: Maybe<CountryFilterParameter>;\n};\n\nexport type Customer = Node & {\n  __typename?: 'Customer';\n  groups: Array<CustomerGroup>;\n  history: HistoryEntryList;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  title?: Maybe<Scalars['String']>;\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress: Scalars['String'];\n  addresses?: Maybe<Array<Address>>;\n  orders: OrderList;\n  user?: Maybe<User>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CustomerHistoryArgs = {\n  options?: Maybe<HistoryEntryListOptions>;\n};\n\n\nexport type CustomerOrdersArgs = {\n  options?: Maybe<OrderListOptions>;\n};\n\nexport type CustomerGroupList = PaginatedList & {\n  __typename?: 'CustomerGroupList';\n  items: Array<CustomerGroup>;\n  totalItems: Scalars['Int'];\n};\n\nexport type CustomerGroupListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CustomerGroupSortParameter>;\n  filter?: Maybe<CustomerGroupFilterParameter>;\n};\n\nexport type CreateCustomerGroupInput = {\n  name: Scalars['String'];\n  customerIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateCustomerGroupInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type UpdateCustomerInput = {\n  id: Scalars['ID'];\n  title?: Maybe<Scalars['String']>;\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CustomerListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<CustomerSortParameter>;\n  filter?: Maybe<CustomerFilterParameter>;\n};\n\nexport type AddNoteToCustomerInput = {\n  id: Scalars['ID'];\n  note: Scalars['String'];\n  isPublic: Scalars['Boolean'];\n};\n\nexport type UpdateCustomerNoteInput = {\n  noteId: Scalars['ID'];\n  note: Scalars['String'];\n};\n\nexport type CreateCustomerResult = Customer | EmailAddressConflictError;\n\nexport type UpdateCustomerResult = Customer | EmailAddressConflictError;\n\nexport type Facet = Node & {\n  __typename?: 'Facet';\n  isPrivate: Scalars['Boolean'];\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  code: Scalars['String'];\n  values: Array<FacetValue>;\n  translations: Array<FacetTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<FacetSortParameter>;\n  filter?: Maybe<FacetFilterParameter>;\n};\n\nexport type FacetTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetInput = {\n  code: Scalars['String'];\n  isPrivate: Scalars['Boolean'];\n  translations: Array<FacetTranslationInput>;\n  values?: Maybe<Array<CreateFacetValueWithFacetInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateFacetInput = {\n  id: Scalars['ID'];\n  isPrivate?: Maybe<Scalars['Boolean']>;\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<FacetTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetValueTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateFacetValueWithFacetInput = {\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslationInput>;\n};\n\nexport type CreateFacetValueInput = {\n  facetId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateFacetValueInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<FacetValueTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateGlobalSettingsInput = {\n  availableLanguages?: Maybe<Array<LanguageCode>>;\n  trackInventory?: Maybe<Scalars['Boolean']>;\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n/**\n * Returned when the default LanguageCode of a Channel is no longer found in the `availableLanguages`\n * of the GlobalSettings\n */\nexport type ChannelDefaultLanguageError = ErrorResult & {\n  __typename?: 'ChannelDefaultLanguageError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  language: Scalars['String'];\n  channelCode: Scalars['String'];\n};\n\nexport type UpdateGlobalSettingsResult = GlobalSettings | ChannelDefaultLanguageError;\n\nexport type GlobalSettings = {\n  __typename?: 'GlobalSettings';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  availableLanguages: Array<LanguageCode>;\n  trackInventory: Scalars['Boolean'];\n  outOfStockThreshold: Scalars['Int'];\n  serverConfig: ServerConfig;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type OrderProcessState = {\n  __typename?: 'OrderProcessState';\n  name: Scalars['String'];\n  to: Array<Scalars['String']>;\n};\n\nexport type PermissionDefinition = {\n  __typename?: 'PermissionDefinition';\n  name: Scalars['String'];\n  description: Scalars['String'];\n  assignable: Scalars['Boolean'];\n};\n\nexport type ServerConfig = {\n  __typename?: 'ServerConfig';\n  orderProcess: Array<OrderProcessState>;\n  permittedAssetTypes: Array<Scalars['String']>;\n  permissions: Array<PermissionDefinition>;\n  customFieldConfig: CustomFields;\n};\n\nexport type HistoryEntry = Node & {\n  __typename?: 'HistoryEntry';\n  isPublic: Scalars['Boolean'];\n  administrator?: Maybe<Administrator>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  type: HistoryEntryType;\n  data: Scalars['JSON'];\n};\n\nexport type ImportInfo = {\n  __typename?: 'ImportInfo';\n  errors?: Maybe<Array<Scalars['String']>>;\n  processed: Scalars['Int'];\n  imported: Scalars['Int'];\n};\n\n/**\n * @description\n * The state of a Job in the JobQueue\n *\n * @docsCategory common\n */\nexport enum JobState {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  RETRYING = 'RETRYING',\n  FAILED = 'FAILED',\n  CANCELLED = 'CANCELLED'\n}\n\nexport type JobListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<JobSortParameter>;\n  filter?: Maybe<JobFilterParameter>;\n};\n\nexport type JobList = PaginatedList & {\n  __typename?: 'JobList';\n  items: Array<Job>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Job = Node & {\n  __typename?: 'Job';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  startedAt?: Maybe<Scalars['DateTime']>;\n  settledAt?: Maybe<Scalars['DateTime']>;\n  queueName: Scalars['String'];\n  state: JobState;\n  progress: Scalars['Float'];\n  data?: Maybe<Scalars['JSON']>;\n  result?: Maybe<Scalars['JSON']>;\n  error?: Maybe<Scalars['JSON']>;\n  isSettled: Scalars['Boolean'];\n  duration: Scalars['Int'];\n};\n\nexport type JobQueue = {\n  __typename?: 'JobQueue';\n  name: Scalars['String'];\n  running: Scalars['Boolean'];\n};\n\nexport type Order = Node & {\n  __typename?: 'Order';\n  nextStates: Array<Scalars['String']>;\n  modifications: Array<OrderModification>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  /**\n   * The date & time that the Order was placed, i.e. the Customer\n   * completed the checkout and the Order is no longer \"active\"\n   */\n  orderPlacedAt?: Maybe<Scalars['DateTime']>;\n  /** A unique code for the Order */\n  code: Scalars['String'];\n  state: Scalars['String'];\n  /** An order is active as long as the payment process has not been completed */\n  active: Scalars['Boolean'];\n  customer?: Maybe<Customer>;\n  shippingAddress?: Maybe<OrderAddress>;\n  billingAddress?: Maybe<OrderAddress>;\n  lines: Array<OrderLine>;\n  /**\n   * Surcharges are arbitrary modifications to the Order total which are neither\n   * ProductVariants nor discounts resulting from applied Promotions. For example,\n   * one-off discounts based on customer interaction, or surcharges based on payment\n   * methods.\n   */\n  surcharges: Array<Surcharge>;\n  discounts: Array<Discount>;\n  /** An array of all coupon codes applied to the Order */\n  couponCodes: Array<Scalars['String']>;\n  /** Promotions applied to the order. Only gets populated after the payment process has completed. */\n  promotions: Array<Promotion>;\n  payments?: Maybe<Array<Payment>>;\n  fulfillments?: Maybe<Array<Fulfillment>>;\n  totalQuantity: Scalars['Int'];\n  /**\n   * The subTotal is the total of all OrderLines in the Order. This figure also includes any Order-level\n   * discounts which have been prorated (proportionally distributed) amongst the OrderItems.\n   * To get a total of all OrderLines which does not account for prorated discounts, use the\n   * sum of `OrderLine.discountedLinePrice` values.\n   */\n  subTotal: Scalars['Int'];\n  /** Same as subTotal, but inclusive of tax */\n  subTotalWithTax: Scalars['Int'];\n  currencyCode: CurrencyCode;\n  shippingLines: Array<ShippingLine>;\n  shipping: Scalars['Int'];\n  shippingWithTax: Scalars['Int'];\n  /** Equal to subTotal plus shipping */\n  total: Scalars['Int'];\n  /** The final payable amount. Equal to subTotalWithTax plus shippingWithTax */\n  totalWithTax: Scalars['Int'];\n  /** A summary of the taxes being applied to this Order */\n  taxSummary: Array<OrderTaxSummary>;\n  history: HistoryEntryList;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type OrderHistoryArgs = {\n  options?: Maybe<HistoryEntryListOptions>;\n};\n\nexport type Fulfillment = Node & {\n  __typename?: 'Fulfillment';\n  nextStates: Array<Scalars['String']>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  orderItems: Array<OrderItem>;\n  state: Scalars['String'];\n  method: Scalars['String'];\n  trackingCode?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Payment = Node & {\n  __typename?: 'Payment';\n  nextStates: Array<Scalars['String']>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  method: Scalars['String'];\n  amount: Scalars['Int'];\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  errorMessage?: Maybe<Scalars['String']>;\n  refunds: Array<Refund>;\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type OrderModification = Node & {\n  __typename?: 'OrderModification';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  priceChange: Scalars['Int'];\n  note: Scalars['String'];\n  orderItems?: Maybe<Array<OrderItem>>;\n  surcharges?: Maybe<Array<Surcharge>>;\n  payment?: Maybe<Payment>;\n  refund?: Maybe<Refund>;\n  isSettled: Scalars['Boolean'];\n};\n\nexport type OrderFilterParameter = {\n  customerLastName?: Maybe<StringOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  orderPlacedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  state?: Maybe<StringOperators>;\n  active?: Maybe<BooleanOperators>;\n  totalQuantity?: Maybe<NumberOperators>;\n  subTotal?: Maybe<NumberOperators>;\n  subTotalWithTax?: Maybe<NumberOperators>;\n  currencyCode?: Maybe<StringOperators>;\n  shipping?: Maybe<NumberOperators>;\n  shippingWithTax?: Maybe<NumberOperators>;\n  total?: Maybe<NumberOperators>;\n  totalWithTax?: Maybe<NumberOperators>;\n};\n\nexport type OrderSortParameter = {\n  customerLastName?: Maybe<SortOrder>;\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  orderPlacedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  state?: Maybe<SortOrder>;\n  totalQuantity?: Maybe<SortOrder>;\n  subTotal?: Maybe<SortOrder>;\n  subTotalWithTax?: Maybe<SortOrder>;\n  shipping?: Maybe<SortOrder>;\n  shippingWithTax?: Maybe<SortOrder>;\n  total?: Maybe<SortOrder>;\n  totalWithTax?: Maybe<SortOrder>;\n};\n\nexport type OrderListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<OrderSortParameter>;\n  filter?: Maybe<OrderFilterParameter>;\n};\n\nexport type UpdateOrderInput = {\n  id: Scalars['ID'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FulfillOrderInput = {\n  lines: Array<OrderLineInput>;\n  handler: ConfigurableOperationInput;\n};\n\nexport type CancelOrderInput = {\n  /** The id of the order to be cancelled */\n  orderId: Scalars['ID'];\n  /** Optionally specify which OrderLines to cancel. If not provided, all OrderLines will be cancelled */\n  lines?: Maybe<Array<OrderLineInput>>;\n  reason?: Maybe<Scalars['String']>;\n};\n\nexport type RefundOrderInput = {\n  lines: Array<OrderLineInput>;\n  shipping: Scalars['Int'];\n  adjustment: Scalars['Int'];\n  paymentId: Scalars['ID'];\n  reason?: Maybe<Scalars['String']>;\n};\n\nexport type OrderLineInput = {\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type SettleRefundInput = {\n  id: Scalars['ID'];\n  transactionId: Scalars['String'];\n};\n\nexport type AddNoteToOrderInput = {\n  id: Scalars['ID'];\n  note: Scalars['String'];\n  isPublic: Scalars['Boolean'];\n};\n\nexport type UpdateOrderNoteInput = {\n  noteId: Scalars['ID'];\n  note?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\nexport type AdministratorPaymentInput = {\n  paymentMethod?: Maybe<Scalars['String']>;\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type AdministratorRefundInput = {\n  paymentId: Scalars['ID'];\n  reason?: Maybe<Scalars['String']>;\n};\n\nexport type ModifyOrderOptions = {\n  freezePromotions?: Maybe<Scalars['Boolean']>;\n  recalculateShipping?: Maybe<Scalars['Boolean']>;\n};\n\nexport type UpdateOrderAddressInput = {\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n};\n\nexport type ModifyOrderInput = {\n  dryRun: Scalars['Boolean'];\n  orderId: Scalars['ID'];\n  addItems?: Maybe<Array<AddItemInput>>;\n  adjustOrderLines?: Maybe<Array<AdjustOrderLineInput>>;\n  surcharges?: Maybe<Array<SurchargeInput>>;\n  updateShippingAddress?: Maybe<UpdateOrderAddressInput>;\n  updateBillingAddress?: Maybe<UpdateOrderAddressInput>;\n  note?: Maybe<Scalars['String']>;\n  refund?: Maybe<AdministratorRefundInput>;\n  options?: Maybe<ModifyOrderOptions>;\n};\n\nexport type AddItemInput = {\n  productVariantId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type AdjustOrderLineInput = {\n  orderLineId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type SurchargeInput = {\n  description: Scalars['String'];\n  sku?: Maybe<Scalars['String']>;\n  price: Scalars['Int'];\n  priceIncludesTax: Scalars['Boolean'];\n  taxRate?: Maybe<Scalars['Float']>;\n  taxDescription?: Maybe<Scalars['String']>;\n};\n\nexport type ManualPaymentInput = {\n  orderId: Scalars['ID'];\n  method: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\n/** Returned if the Payment settlement fails */\nexport type SettlePaymentError = ErrorResult & {\n  __typename?: 'SettlePaymentError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  paymentErrorMessage: Scalars['String'];\n};\n\n/** Returned if no OrderLines have been specified for the operation */\nexport type EmptyOrderLineSelectionError = ErrorResult & {\n  __typename?: 'EmptyOrderLineSelectionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if the specified items are already part of a Fulfillment */\nexport type ItemsAlreadyFulfilledError = ErrorResult & {\n  __typename?: 'ItemsAlreadyFulfilledError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if the specified FulfillmentHandler code is not valid */\nexport type InvalidFulfillmentHandlerError = ErrorResult & {\n  __typename?: 'InvalidFulfillmentHandlerError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if an error is thrown in a FulfillmentHandler's createFulfillment method */\nexport type CreateFulfillmentError = ErrorResult & {\n  __typename?: 'CreateFulfillmentError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  fulfillmentHandlerError: Scalars['String'];\n};\n\n/**\n * Returned if attempting to create a Fulfillment when there is insufficient\n * stockOnHand of a ProductVariant to satisfy the requested quantity.\n */\nexport type InsufficientStockOnHandError = ErrorResult & {\n  __typename?: 'InsufficientStockOnHandError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  productVariantId: Scalars['ID'];\n  productVariantName: Scalars['String'];\n  stockOnHand: Scalars['Int'];\n};\n\n/** Returned if an operation has specified OrderLines from multiple Orders */\nexport type MultipleOrderError = ErrorResult & {\n  __typename?: 'MultipleOrderError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if an attempting to cancel lines from an Order which is still active */\nexport type CancelActiveOrderError = ErrorResult & {\n  __typename?: 'CancelActiveOrderError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  orderState: Scalars['String'];\n};\n\n/** Returned if an attempting to refund a Payment against OrderLines from a different Order */\nexport type PaymentOrderMismatchError = ErrorResult & {\n  __typename?: 'PaymentOrderMismatchError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if an attempting to refund an Order which is not in the expected state */\nexport type RefundOrderStateError = ErrorResult & {\n  __typename?: 'RefundOrderStateError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  orderState: Scalars['String'];\n};\n\n/** Returned if an attempting to refund an Order but neither items nor shipping refund was specified */\nexport type NothingToRefundError = ErrorResult & {\n  __typename?: 'NothingToRefundError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if an attempting to refund an OrderItem which has already been refunded */\nexport type AlreadyRefundedError = ErrorResult & {\n  __typename?: 'AlreadyRefundedError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  refundId: Scalars['ID'];\n};\n\n/** Returned if the specified quantity of an OrderLine is greater than the number of items in that line */\nexport type QuantityTooGreatError = ErrorResult & {\n  __typename?: 'QuantityTooGreatError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when there is an error in transitioning the Refund state */\nexport type RefundStateTransitionError = ErrorResult & {\n  __typename?: 'RefundStateTransitionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  transitionError: Scalars['String'];\n  fromState: Scalars['String'];\n  toState: Scalars['String'];\n};\n\n/** Returned when there is an error in transitioning the Payment state */\nexport type PaymentStateTransitionError = ErrorResult & {\n  __typename?: 'PaymentStateTransitionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  transitionError: Scalars['String'];\n  fromState: Scalars['String'];\n  toState: Scalars['String'];\n};\n\n/** Returned when there is an error in transitioning the Fulfillment state */\nexport type FulfillmentStateTransitionError = ErrorResult & {\n  __typename?: 'FulfillmentStateTransitionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  transitionError: Scalars['String'];\n  fromState: Scalars['String'];\n  toState: Scalars['String'];\n};\n\n/** Returned when attempting to modify the contents of an Order that is not in the `Modifying` state. */\nexport type OrderModificationStateError = ErrorResult & {\n  __typename?: 'OrderModificationStateError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when a call to modifyOrder fails to specify any changes */\nexport type NoChangesSpecifiedError = ErrorResult & {\n  __typename?: 'NoChangesSpecifiedError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned when a call to modifyOrder fails to include a paymentMethod even\n * though the price has increased as a result of the changes.\n */\nexport type PaymentMethodMissingError = ErrorResult & {\n  __typename?: 'PaymentMethodMissingError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned when a call to modifyOrder fails to include a refundPaymentId even\n * though the price has decreased as a result of the changes.\n */\nexport type RefundPaymentIdMissingError = ErrorResult & {\n  __typename?: 'RefundPaymentIdMissingError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/**\n * Returned when a call to addManualPaymentToOrder is made but the Order\n * is not in the required state.\n */\nexport type ManualPaymentStateError = ErrorResult & {\n  __typename?: 'ManualPaymentStateError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type TransitionOrderToStateResult = Order | OrderStateTransitionError;\n\nexport type SettlePaymentResult = Payment | SettlePaymentError | PaymentStateTransitionError | OrderStateTransitionError;\n\nexport type AddFulfillmentToOrderResult = Fulfillment | EmptyOrderLineSelectionError | ItemsAlreadyFulfilledError | InsufficientStockOnHandError | InvalidFulfillmentHandlerError | FulfillmentStateTransitionError | CreateFulfillmentError;\n\nexport type CancelOrderResult = Order | EmptyOrderLineSelectionError | QuantityTooGreatError | MultipleOrderError | CancelActiveOrderError | OrderStateTransitionError;\n\nexport type RefundOrderResult = Refund | QuantityTooGreatError | NothingToRefundError | OrderStateTransitionError | MultipleOrderError | PaymentOrderMismatchError | RefundOrderStateError | AlreadyRefundedError | RefundStateTransitionError;\n\nexport type SettleRefundResult = Refund | RefundStateTransitionError;\n\nexport type TransitionFulfillmentToStateResult = Fulfillment | FulfillmentStateTransitionError;\n\nexport type TransitionPaymentToStateResult = Payment | PaymentStateTransitionError;\n\nexport type ModifyOrderResult = Order | NoChangesSpecifiedError | OrderModificationStateError | PaymentMethodMissingError | RefundPaymentIdMissingError | OrderLimitError | NegativeQuantityError | InsufficientStockError;\n\nexport type AddManualPaymentToOrderResult = Order | ManualPaymentStateError;\n\nexport type PaymentMethodList = PaginatedList & {\n  __typename?: 'PaymentMethodList';\n  items: Array<PaymentMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport type PaymentMethodListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PaymentMethodSortParameter>;\n  filter?: Maybe<PaymentMethodFilterParameter>;\n};\n\nexport type CreatePaymentMethodInput = {\n  name: Scalars['String'];\n  code: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  enabled: Scalars['Boolean'];\n  checker?: Maybe<ConfigurableOperationInput>;\n  handler: ConfigurableOperationInput;\n};\n\nexport type UpdatePaymentMethodInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  checker?: Maybe<ConfigurableOperationInput>;\n  handler?: Maybe<ConfigurableOperationInput>;\n};\n\nexport type PaymentMethod = Node & {\n  __typename?: 'PaymentMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  code: Scalars['String'];\n  description: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  checker?: Maybe<ConfigurableOperation>;\n  handler: ConfigurableOperation;\n};\n\nexport type Product = Node & {\n  __typename?: 'Product';\n  enabled: Scalars['Boolean'];\n  channels: Array<Channel>;\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  variants: Array<ProductVariant>;\n  optionGroups: Array<ProductOptionGroup>;\n  facetValues: Array<FacetValue>;\n  translations: Array<ProductTranslation>;\n  collections: Array<Collection>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductVariant = Node & {\n  __typename?: 'ProductVariant';\n  enabled: Scalars['Boolean'];\n  trackInventory: GlobalFlag;\n  stockOnHand: Scalars['Int'];\n  stockAllocated: Scalars['Int'];\n  outOfStockThreshold: Scalars['Int'];\n  useGlobalOutOfStockThreshold: Scalars['Boolean'];\n  stockMovements: StockMovementList;\n  channels: Array<Channel>;\n  id: Scalars['ID'];\n  product: Product;\n  productId: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  sku: Scalars['String'];\n  name: Scalars['String'];\n  featuredAsset?: Maybe<Asset>;\n  assets: Array<Asset>;\n  price: Scalars['Int'];\n  currencyCode: CurrencyCode;\n  priceWithTax: Scalars['Int'];\n  stockLevel: Scalars['String'];\n  taxRateApplied: TaxRate;\n  taxCategory: TaxCategory;\n  options: Array<ProductOption>;\n  facetValues: Array<FacetValue>;\n  translations: Array<ProductVariantTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type ProductVariantStockMovementsArgs = {\n  options?: Maybe<StockMovementListOptions>;\n};\n\nexport type ProductOptionGroupTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductOptionGroupInput = {\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n  options: Array<CreateGroupOptionInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductOptionGroupInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateGroupOptionInput = {\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n};\n\nexport type CreateProductOptionInput = {\n  productOptionGroupId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<ProductOptionGroupTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductOptionInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type SearchResult = {\n  __typename?: 'SearchResult';\n  enabled: Scalars['Boolean'];\n  /** An array of ids of the Channels in which this result appears */\n  channelIds: Array<Scalars['ID']>;\n  sku: Scalars['String'];\n  slug: Scalars['String'];\n  productId: Scalars['ID'];\n  productName: Scalars['String'];\n  productAsset?: Maybe<SearchResultAsset>;\n  productVariantId: Scalars['ID'];\n  productVariantName: Scalars['String'];\n  productVariantAsset?: Maybe<SearchResultAsset>;\n  price: SearchResultPrice;\n  priceWithTax: SearchResultPrice;\n  currencyCode: CurrencyCode;\n  description: Scalars['String'];\n  facetIds: Array<Scalars['ID']>;\n  facetValueIds: Array<Scalars['ID']>;\n  /** An array of ids of the Collections in which this result appears */\n  collectionIds: Array<Scalars['ID']>;\n  /** A relevence score for the result. Differs between database implementations */\n  score: Scalars['Float'];\n};\n\nexport type StockMovementListOptions = {\n  type?: Maybe<StockMovementType>;\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n};\n\nexport type ProductListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductSortParameter>;\n  filter?: Maybe<ProductFilterParameter>;\n};\n\nexport type ProductVariantListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ProductVariantSortParameter>;\n  filter?: Maybe<ProductVariantFilterParameter>;\n};\n\nexport type ProductTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductInput = {\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  translations: Array<ProductTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductInput = {\n  id: Scalars['ID'];\n  enabled?: Maybe<Scalars['Boolean']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  translations?: Maybe<Array<ProductTranslationInput>>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductVariantTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateProductVariantOptionInput = {\n  optionGroupId: Scalars['ID'];\n  code: Scalars['String'];\n  translations: Array<ProductOptionTranslationInput>;\n};\n\nexport type CreateProductVariantInput = {\n  productId: Scalars['ID'];\n  translations: Array<ProductVariantTranslationInput>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  sku: Scalars['String'];\n  price?: Maybe<Scalars['Int']>;\n  taxCategoryId?: Maybe<Scalars['ID']>;\n  optionIds?: Maybe<Array<Scalars['ID']>>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  stockOnHand?: Maybe<Scalars['Int']>;\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\n  useGlobalOutOfStockThreshold?: Maybe<Scalars['Boolean']>;\n  trackInventory?: Maybe<GlobalFlag>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateProductVariantInput = {\n  id: Scalars['ID'];\n  enabled?: Maybe<Scalars['Boolean']>;\n  translations?: Maybe<Array<ProductVariantTranslationInput>>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  sku?: Maybe<Scalars['String']>;\n  taxCategoryId?: Maybe<Scalars['ID']>;\n  price?: Maybe<Scalars['Int']>;\n  featuredAssetId?: Maybe<Scalars['ID']>;\n  assetIds?: Maybe<Array<Scalars['ID']>>;\n  stockOnHand?: Maybe<Scalars['Int']>;\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\n  useGlobalOutOfStockThreshold?: Maybe<Scalars['Boolean']>;\n  trackInventory?: Maybe<GlobalFlag>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type AssignProductsToChannelInput = {\n  productIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n  priceFactor?: Maybe<Scalars['Float']>;\n};\n\nexport type RemoveProductsFromChannelInput = {\n  productIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n};\n\nexport type AssignProductVariantsToChannelInput = {\n  productVariantIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n  priceFactor?: Maybe<Scalars['Float']>;\n};\n\nexport type RemoveProductVariantsFromChannelInput = {\n  productVariantIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n};\n\nexport type ProductOptionInUseError = ErrorResult & {\n  __typename?: 'ProductOptionInUseError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  optionGroupCode: Scalars['String'];\n  productVariantCount: Scalars['Int'];\n};\n\nexport type RemoveOptionGroupFromProductResult = Product | ProductOptionInUseError;\n\nexport type PromotionListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<PromotionSortParameter>;\n  filter?: Maybe<PromotionFilterParameter>;\n};\n\nexport type CreatePromotionInput = {\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  conditions: Array<ConfigurableOperationInput>;\n  actions: Array<ConfigurableOperationInput>;\n};\n\nexport type UpdatePromotionInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  conditions?: Maybe<Array<ConfigurableOperationInput>>;\n  actions?: Maybe<Array<ConfigurableOperationInput>>;\n};\n\nexport type AssignPromotionsToChannelInput = {\n  promotionIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n};\n\nexport type RemovePromotionsFromChannelInput = {\n  promotionIds: Array<Scalars['ID']>;\n  channelId: Scalars['ID'];\n};\n\n/** Returned if a PromotionCondition has neither a couponCode nor any conditions set */\nexport type MissingConditionsError = ErrorResult & {\n  __typename?: 'MissingConditionsError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type CreatePromotionResult = Promotion | MissingConditionsError;\n\nexport type UpdatePromotionResult = Promotion | MissingConditionsError;\n\nexport type RoleListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<RoleSortParameter>;\n  filter?: Maybe<RoleFilterParameter>;\n};\n\nexport type CreateRoleInput = {\n  code: Scalars['String'];\n  description: Scalars['String'];\n  permissions: Array<Permission>;\n  channelIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateRoleInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Permission>>;\n  channelIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type ShippingMethodListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<ShippingMethodSortParameter>;\n  filter?: Maybe<ShippingMethodFilterParameter>;\n};\n\nexport type ShippingMethodTranslationInput = {\n  id?: Maybe<Scalars['ID']>;\n  languageCode: LanguageCode;\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateShippingMethodInput = {\n  code: Scalars['String'];\n  fulfillmentHandler: Scalars['String'];\n  checker: ConfigurableOperationInput;\n  calculator: ConfigurableOperationInput;\n  translations: Array<ShippingMethodTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateShippingMethodInput = {\n  id: Scalars['ID'];\n  code?: Maybe<Scalars['String']>;\n  fulfillmentHandler?: Maybe<Scalars['String']>;\n  checker?: Maybe<ConfigurableOperationInput>;\n  calculator?: Maybe<ConfigurableOperationInput>;\n  translations: Array<ShippingMethodTranslationInput>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type TestShippingMethodInput = {\n  checker: ConfigurableOperationInput;\n  calculator: ConfigurableOperationInput;\n  shippingAddress: CreateAddressInput;\n  lines: Array<TestShippingMethodOrderLineInput>;\n};\n\nexport type TestEligibleShippingMethodsInput = {\n  shippingAddress: CreateAddressInput;\n  lines: Array<TestShippingMethodOrderLineInput>;\n};\n\nexport type TestShippingMethodOrderLineInput = {\n  productVariantId: Scalars['ID'];\n  quantity: Scalars['Int'];\n};\n\nexport type TestShippingMethodResult = {\n  __typename?: 'TestShippingMethodResult';\n  eligible: Scalars['Boolean'];\n  quote?: Maybe<TestShippingMethodQuote>;\n};\n\nexport type TestShippingMethodQuote = {\n  __typename?: 'TestShippingMethodQuote';\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport enum StockMovementType {\n  ADJUSTMENT = 'ADJUSTMENT',\n  ALLOCATION = 'ALLOCATION',\n  RELEASE = 'RELEASE',\n  SALE = 'SALE',\n  CANCELLATION = 'CANCELLATION',\n  RETURN = 'RETURN'\n}\n\nexport type StockMovement = {\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n};\n\nexport type StockAdjustment = Node & StockMovement & {\n  __typename?: 'StockAdjustment';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n};\n\nexport type Allocation = Node & StockMovement & {\n  __typename?: 'Allocation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderLine: OrderLine;\n};\n\nexport type Sale = Node & StockMovement & {\n  __typename?: 'Sale';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderItem: OrderItem;\n};\n\nexport type Cancellation = Node & StockMovement & {\n  __typename?: 'Cancellation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderLine: OrderLine;\n};\n\nexport type Return = Node & StockMovement & {\n  __typename?: 'Return';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderItem: OrderItem;\n};\n\nexport type Release = Node & StockMovement & {\n  __typename?: 'Release';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  type: StockMovementType;\n  quantity: Scalars['Int'];\n  orderItem: OrderItem;\n};\n\nexport type StockMovementItem = StockAdjustment | Allocation | Sale | Cancellation | Return | Release;\n\nexport type StockMovementList = {\n  __typename?: 'StockMovementList';\n  items: Array<StockMovementItem>;\n  totalItems: Scalars['Int'];\n};\n\nexport type TagListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<TagSortParameter>;\n  filter?: Maybe<TagFilterParameter>;\n};\n\nexport type CreateTagInput = {\n  value: Scalars['String'];\n};\n\nexport type UpdateTagInput = {\n  id: Scalars['ID'];\n  value?: Maybe<Scalars['String']>;\n};\n\nexport type CreateTaxCategoryInput = {\n  name: Scalars['String'];\n  isDefault?: Maybe<Scalars['Boolean']>;\n};\n\nexport type UpdateTaxCategoryInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  isDefault?: Maybe<Scalars['Boolean']>;\n};\n\nexport type TaxRateListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<TaxRateSortParameter>;\n  filter?: Maybe<TaxRateFilterParameter>;\n};\n\nexport type CreateTaxRateInput = {\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  value: Scalars['Float'];\n  categoryId: Scalars['ID'];\n  zoneId: Scalars['ID'];\n  customerGroupId?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateTaxRateInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  value?: Maybe<Scalars['Float']>;\n  enabled?: Maybe<Scalars['Boolean']>;\n  categoryId?: Maybe<Scalars['ID']>;\n  zoneId?: Maybe<Scalars['ID']>;\n  customerGroupId?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateZoneInput = {\n  name: Scalars['String'];\n  memberIds?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type UpdateZoneInput = {\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type Address = Node & {\n  __typename?: 'Address';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  country: Country;\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Coordinate = {\n  __typename?: 'Coordinate';\n  x: Scalars['Float'];\n  y: Scalars['Float'];\n};\n\nexport type AssetList = PaginatedList & {\n  __typename?: 'AssetList';\n  items: Array<Asset>;\n  totalItems: Scalars['Int'];\n};\n\nexport enum AssetType {\n  IMAGE = 'IMAGE',\n  VIDEO = 'VIDEO',\n  BINARY = 'BINARY'\n}\n\nexport type CurrentUser = {\n  __typename?: 'CurrentUser';\n  channels: Array<CurrentUserChannel>;\n  id: Scalars['ID'];\n  identifier: Scalars['String'];\n};\n\nexport type CurrentUserChannel = {\n  __typename?: 'CurrentUserChannel';\n  code: Scalars['String'];\n  id: Scalars['ID'];\n  permissions: Array<Permission>;\n  token: Scalars['String'];\n};\n\nexport type Channel = Node & {\n  __typename?: 'Channel';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  token: Scalars['String'];\n  defaultTaxZone?: Maybe<Zone>;\n  defaultShippingZone?: Maybe<Zone>;\n  defaultLanguageCode: LanguageCode;\n  currencyCode: CurrencyCode;\n  pricesIncludeTax: Scalars['Boolean'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CollectionBreadcrumb = {\n  __typename?: 'CollectionBreadcrumb';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  slug: Scalars['String'];\n};\n\nexport type CollectionTranslation = {\n  __typename?: 'CollectionTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type CollectionList = PaginatedList & {\n  __typename?: 'CollectionList';\n  items: Array<Collection>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductVariantList = PaginatedList & {\n  __typename?: 'ProductVariantList';\n  items: Array<ProductVariant>;\n  totalItems: Scalars['Int'];\n};\n\nexport enum GlobalFlag {\n  TRUE = 'TRUE',\n  FALSE = 'FALSE',\n  INHERIT = 'INHERIT'\n}\n\nexport enum AdjustmentType {\n  PROMOTION = 'PROMOTION',\n  DISTRIBUTED_ORDER_PROMOTION = 'DISTRIBUTED_ORDER_PROMOTION'\n}\n\nexport enum DeletionResult {\n  /** The entity was successfully deleted */\n  DELETED = 'DELETED',\n  /** Deletion did not take place, reason given in message */\n  NOT_DELETED = 'NOT_DELETED'\n}\n\n/**\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n *\n * @docsCategory common\n */\nexport enum Permission {\n  /** Authenticated means simply that the user is logged in */\n  Authenticated = 'Authenticated',\n  /** Grants permission to create Administrator */\n  CreateAdministrator = 'CreateAdministrator',\n  /** Grants permission to create Asset */\n  CreateAsset = 'CreateAsset',\n  /** Grants permission to create Products, Facets, Assets, Collections */\n  CreateCatalog = 'CreateCatalog',\n  /** Grants permission to create Channel */\n  CreateChannel = 'CreateChannel',\n  /** Grants permission to create Collection */\n  CreateCollection = 'CreateCollection',\n  /** Grants permission to create Country */\n  CreateCountry = 'CreateCountry',\n  /** Grants permission to create Customer */\n  CreateCustomer = 'CreateCustomer',\n  /** Grants permission to create CustomerGroup */\n  CreateCustomerGroup = 'CreateCustomerGroup',\n  /** Grants permission to create Facet */\n  CreateFacet = 'CreateFacet',\n  /** Grants permission to create Order */\n  CreateOrder = 'CreateOrder',\n  /** Grants permission to create PaymentMethod */\n  CreatePaymentMethod = 'CreatePaymentMethod',\n  /** Grants permission to create Product */\n  CreateProduct = 'CreateProduct',\n  /** Grants permission to create Promotion */\n  CreatePromotion = 'CreatePromotion',\n  /** Grants permission to create PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  CreateSettings = 'CreateSettings',\n  /** Grants permission to create ShippingMethod */\n  CreateShippingMethod = 'CreateShippingMethod',\n  /** Grants permission to create System */\n  CreateSystem = 'CreateSystem',\n  /** Grants permission to create Tag */\n  CreateTag = 'CreateTag',\n  /** Grants permission to create TaxCategory */\n  CreateTaxCategory = 'CreateTaxCategory',\n  /** Grants permission to create TaxRate */\n  CreateTaxRate = 'CreateTaxRate',\n  /** Grants permission to create Zone */\n  CreateZone = 'CreateZone',\n  /** Grants permission to delete Administrator */\n  DeleteAdministrator = 'DeleteAdministrator',\n  /** Grants permission to delete Asset */\n  DeleteAsset = 'DeleteAsset',\n  /** Grants permission to delete Products, Facets, Assets, Collections */\n  DeleteCatalog = 'DeleteCatalog',\n  /** Grants permission to delete Channel */\n  DeleteChannel = 'DeleteChannel',\n  /** Grants permission to delete Collection */\n  DeleteCollection = 'DeleteCollection',\n  /** Grants permission to delete Country */\n  DeleteCountry = 'DeleteCountry',\n  /** Grants permission to delete Customer */\n  DeleteCustomer = 'DeleteCustomer',\n  /** Grants permission to delete CustomerGroup */\n  DeleteCustomerGroup = 'DeleteCustomerGroup',\n  /** Grants permission to delete Facet */\n  DeleteFacet = 'DeleteFacet',\n  /** Grants permission to delete Order */\n  DeleteOrder = 'DeleteOrder',\n  /** Grants permission to delete PaymentMethod */\n  DeletePaymentMethod = 'DeletePaymentMethod',\n  /** Grants permission to delete Product */\n  DeleteProduct = 'DeleteProduct',\n  /** Grants permission to delete Promotion */\n  DeletePromotion = 'DeletePromotion',\n  /** Grants permission to delete PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  DeleteSettings = 'DeleteSettings',\n  /** Grants permission to delete ShippingMethod */\n  DeleteShippingMethod = 'DeleteShippingMethod',\n  /** Grants permission to delete System */\n  DeleteSystem = 'DeleteSystem',\n  /** Grants permission to delete Tag */\n  DeleteTag = 'DeleteTag',\n  /** Grants permission to delete TaxCategory */\n  DeleteTaxCategory = 'DeleteTaxCategory',\n  /** Grants permission to delete TaxRate */\n  DeleteTaxRate = 'DeleteTaxRate',\n  /** Grants permission to delete Zone */\n  DeleteZone = 'DeleteZone',\n  /** Owner means the user owns this entity, e.g. a Customer's own Order */\n  Owner = 'Owner',\n  Placeholder = 'Placeholder',\n  /** Public means any unauthenticated user may perform the operation */\n  Public = 'Public',\n  /** Grants permission to read Administrator */\n  ReadAdministrator = 'ReadAdministrator',\n  /** Grants permission to read Asset */\n  ReadAsset = 'ReadAsset',\n  /** Grants permission to read Products, Facets, Assets, Collections */\n  ReadCatalog = 'ReadCatalog',\n  /** Grants permission to read Channel */\n  ReadChannel = 'ReadChannel',\n  /** Grants permission to read Collection */\n  ReadCollection = 'ReadCollection',\n  /** Grants permission to read Country */\n  ReadCountry = 'ReadCountry',\n  /** Grants permission to read Customer */\n  ReadCustomer = 'ReadCustomer',\n  /** Grants permission to read CustomerGroup */\n  ReadCustomerGroup = 'ReadCustomerGroup',\n  /** Grants permission to read Facet */\n  ReadFacet = 'ReadFacet',\n  /** Grants permission to read Order */\n  ReadOrder = 'ReadOrder',\n  /** Grants permission to read PaymentMethod */\n  ReadPaymentMethod = 'ReadPaymentMethod',\n  /** Grants permission to read Product */\n  ReadProduct = 'ReadProduct',\n  /** Grants permission to read Promotion */\n  ReadPromotion = 'ReadPromotion',\n  /** Grants permission to read PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  ReadSettings = 'ReadSettings',\n  /** Grants permission to read ShippingMethod */\n  ReadShippingMethod = 'ReadShippingMethod',\n  /** Grants permission to read System */\n  ReadSystem = 'ReadSystem',\n  /** Grants permission to read Tag */\n  ReadTag = 'ReadTag',\n  /** Grants permission to read TaxCategory */\n  ReadTaxCategory = 'ReadTaxCategory',\n  /** Grants permission to read TaxRate */\n  ReadTaxRate = 'ReadTaxRate',\n  /** Grants permission to read Zone */\n  ReadZone = 'ReadZone',\n  /** SuperAdmin has unrestricted access to all operations */\n  SuperAdmin = 'SuperAdmin',\n  /** Grants permission to update Administrator */\n  UpdateAdministrator = 'UpdateAdministrator',\n  /** Grants permission to update Asset */\n  UpdateAsset = 'UpdateAsset',\n  /** Grants permission to update Products, Facets, Assets, Collections */\n  UpdateCatalog = 'UpdateCatalog',\n  /** Grants permission to update Channel */\n  UpdateChannel = 'UpdateChannel',\n  /** Grants permission to update Collection */\n  UpdateCollection = 'UpdateCollection',\n  /** Grants permission to update Country */\n  UpdateCountry = 'UpdateCountry',\n  /** Grants permission to update Customer */\n  UpdateCustomer = 'UpdateCustomer',\n  /** Grants permission to update CustomerGroup */\n  UpdateCustomerGroup = 'UpdateCustomerGroup',\n  /** Grants permission to update Facet */\n  UpdateFacet = 'UpdateFacet',\n  /** Grants permission to update GlobalSettings */\n  UpdateGlobalSettings = 'UpdateGlobalSettings',\n  /** Grants permission to update Order */\n  UpdateOrder = 'UpdateOrder',\n  /** Grants permission to update PaymentMethod */\n  UpdatePaymentMethod = 'UpdatePaymentMethod',\n  /** Grants permission to update Product */\n  UpdateProduct = 'UpdateProduct',\n  /** Grants permission to update Promotion */\n  UpdatePromotion = 'UpdatePromotion',\n  /** Grants permission to update PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  UpdateSettings = 'UpdateSettings',\n  /** Grants permission to update ShippingMethod */\n  UpdateShippingMethod = 'UpdateShippingMethod',\n  /** Grants permission to update System */\n  UpdateSystem = 'UpdateSystem',\n  /** Grants permission to update Tag */\n  UpdateTag = 'UpdateTag',\n  /** Grants permission to update TaxCategory */\n  UpdateTaxCategory = 'UpdateTaxCategory',\n  /** Grants permission to update TaxRate */\n  UpdateTaxRate = 'UpdateTaxRate',\n  /** Grants permission to update Zone */\n  UpdateZone = 'UpdateZone'\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC'\n}\n\nexport enum ErrorCode {\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n  MIME_TYPE_ERROR = 'MIME_TYPE_ERROR',\n  LANGUAGE_NOT_AVAILABLE_ERROR = 'LANGUAGE_NOT_AVAILABLE_ERROR',\n  CHANNEL_DEFAULT_LANGUAGE_ERROR = 'CHANNEL_DEFAULT_LANGUAGE_ERROR',\n  SETTLE_PAYMENT_ERROR = 'SETTLE_PAYMENT_ERROR',\n  EMPTY_ORDER_LINE_SELECTION_ERROR = 'EMPTY_ORDER_LINE_SELECTION_ERROR',\n  ITEMS_ALREADY_FULFILLED_ERROR = 'ITEMS_ALREADY_FULFILLED_ERROR',\n  INVALID_FULFILLMENT_HANDLER_ERROR = 'INVALID_FULFILLMENT_HANDLER_ERROR',\n  CREATE_FULFILLMENT_ERROR = 'CREATE_FULFILLMENT_ERROR',\n  INSUFFICIENT_STOCK_ON_HAND_ERROR = 'INSUFFICIENT_STOCK_ON_HAND_ERROR',\n  MULTIPLE_ORDER_ERROR = 'MULTIPLE_ORDER_ERROR',\n  CANCEL_ACTIVE_ORDER_ERROR = 'CANCEL_ACTIVE_ORDER_ERROR',\n  PAYMENT_ORDER_MISMATCH_ERROR = 'PAYMENT_ORDER_MISMATCH_ERROR',\n  REFUND_ORDER_STATE_ERROR = 'REFUND_ORDER_STATE_ERROR',\n  NOTHING_TO_REFUND_ERROR = 'NOTHING_TO_REFUND_ERROR',\n  ALREADY_REFUNDED_ERROR = 'ALREADY_REFUNDED_ERROR',\n  QUANTITY_TOO_GREAT_ERROR = 'QUANTITY_TOO_GREAT_ERROR',\n  REFUND_STATE_TRANSITION_ERROR = 'REFUND_STATE_TRANSITION_ERROR',\n  PAYMENT_STATE_TRANSITION_ERROR = 'PAYMENT_STATE_TRANSITION_ERROR',\n  FULFILLMENT_STATE_TRANSITION_ERROR = 'FULFILLMENT_STATE_TRANSITION_ERROR',\n  ORDER_MODIFICATION_STATE_ERROR = 'ORDER_MODIFICATION_STATE_ERROR',\n  NO_CHANGES_SPECIFIED_ERROR = 'NO_CHANGES_SPECIFIED_ERROR',\n  PAYMENT_METHOD_MISSING_ERROR = 'PAYMENT_METHOD_MISSING_ERROR',\n  REFUND_PAYMENT_ID_MISSING_ERROR = 'REFUND_PAYMENT_ID_MISSING_ERROR',\n  MANUAL_PAYMENT_STATE_ERROR = 'MANUAL_PAYMENT_STATE_ERROR',\n  PRODUCT_OPTION_IN_USE_ERROR = 'PRODUCT_OPTION_IN_USE_ERROR',\n  MISSING_CONDITIONS_ERROR = 'MISSING_CONDITIONS_ERROR',\n  NATIVE_AUTH_STRATEGY_ERROR = 'NATIVE_AUTH_STRATEGY_ERROR',\n  INVALID_CREDENTIALS_ERROR = 'INVALID_CREDENTIALS_ERROR',\n  ORDER_STATE_TRANSITION_ERROR = 'ORDER_STATE_TRANSITION_ERROR',\n  EMAIL_ADDRESS_CONFLICT_ERROR = 'EMAIL_ADDRESS_CONFLICT_ERROR',\n  ORDER_LIMIT_ERROR = 'ORDER_LIMIT_ERROR',\n  NEGATIVE_QUANTITY_ERROR = 'NEGATIVE_QUANTITY_ERROR',\n  INSUFFICIENT_STOCK_ERROR = 'INSUFFICIENT_STOCK_ERROR'\n}\n\nexport enum LogicalOperator {\n  AND = 'AND',\n  OR = 'OR'\n}\n\n/** Retured when attempting an operation that relies on the NativeAuthStrategy, if that strategy is not configured. */\nexport type NativeAuthStrategyError = ErrorResult & {\n  __typename?: 'NativeAuthStrategyError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned if the user authentication credentials are not valid */\nexport type InvalidCredentialsError = ErrorResult & {\n  __typename?: 'InvalidCredentialsError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  authenticationError: Scalars['String'];\n};\n\n/** Returned if there is an error in transitioning the Order state */\nexport type OrderStateTransitionError = ErrorResult & {\n  __typename?: 'OrderStateTransitionError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  transitionError: Scalars['String'];\n  fromState: Scalars['String'];\n  toState: Scalars['String'];\n};\n\n/** Retured when attemting to create a Customer with an email address already registered to an existing User. */\nexport type EmailAddressConflictError = ErrorResult & {\n  __typename?: 'EmailAddressConflictError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Retured when the maximum order size limit has been reached. */\nexport type OrderLimitError = ErrorResult & {\n  __typename?: 'OrderLimitError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  maxItems: Scalars['Int'];\n};\n\n/** Retured when attemting to set a negative OrderLine quantity. */\nexport type NegativeQuantityError = ErrorResult & {\n  __typename?: 'NegativeQuantityError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\n/** Returned when attempting to add more items to the Order than are available */\nexport type InsufficientStockError = ErrorResult & {\n  __typename?: 'InsufficientStockError';\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n  quantityAvailable: Scalars['Int'];\n  order: Order;\n};\n\n\n\n\nexport type PaginatedList = {\n  items: Array<Node>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Node = {\n  id: Scalars['ID'];\n};\n\nexport type ErrorResult = {\n  errorCode: ErrorCode;\n  message: Scalars['String'];\n};\n\nexport type Adjustment = {\n  __typename?: 'Adjustment';\n  adjustmentSource: Scalars['String'];\n  type: AdjustmentType;\n  description: Scalars['String'];\n  amount: Scalars['Int'];\n};\n\nexport type TaxLine = {\n  __typename?: 'TaxLine';\n  description: Scalars['String'];\n  taxRate: Scalars['Float'];\n};\n\nexport type ConfigArg = {\n  __typename?: 'ConfigArg';\n  name: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type ConfigArgDefinition = {\n  __typename?: 'ConfigArgDefinition';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  required: Scalars['Boolean'];\n  defaultValue?: Maybe<Scalars['JSON']>;\n  label?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  ui?: Maybe<Scalars['JSON']>;\n};\n\nexport type ConfigurableOperation = {\n  __typename?: 'ConfigurableOperation';\n  code: Scalars['String'];\n  args: Array<ConfigArg>;\n};\n\nexport type ConfigurableOperationDefinition = {\n  __typename?: 'ConfigurableOperationDefinition';\n  code: Scalars['String'];\n  args: Array<ConfigArgDefinition>;\n  description: Scalars['String'];\n};\n\nexport type DeletionResponse = {\n  __typename?: 'DeletionResponse';\n  result: DeletionResult;\n  message?: Maybe<Scalars['String']>;\n};\n\nexport type ConfigArgInput = {\n  name: Scalars['String'];\n  /** A JSON stringified representation of the actual value */\n  value: Scalars['String'];\n};\n\nexport type ConfigurableOperationInput = {\n  code: Scalars['String'];\n  arguments: Array<ConfigArgInput>;\n};\n\nexport type StringOperators = {\n  eq?: Maybe<Scalars['String']>;\n  notEq?: Maybe<Scalars['String']>;\n  contains?: Maybe<Scalars['String']>;\n  notContains?: Maybe<Scalars['String']>;\n  in?: Maybe<Array<Scalars['String']>>;\n  notIn?: Maybe<Array<Scalars['String']>>;\n  regex?: Maybe<Scalars['String']>;\n};\n\nexport type BooleanOperators = {\n  eq?: Maybe<Scalars['Boolean']>;\n};\n\nexport type NumberRange = {\n  start: Scalars['Float'];\n  end: Scalars['Float'];\n};\n\nexport type NumberOperators = {\n  eq?: Maybe<Scalars['Float']>;\n  lt?: Maybe<Scalars['Float']>;\n  lte?: Maybe<Scalars['Float']>;\n  gt?: Maybe<Scalars['Float']>;\n  gte?: Maybe<Scalars['Float']>;\n  between?: Maybe<NumberRange>;\n};\n\nexport type DateRange = {\n  start: Scalars['DateTime'];\n  end: Scalars['DateTime'];\n};\n\nexport type DateOperators = {\n  eq?: Maybe<Scalars['DateTime']>;\n  before?: Maybe<Scalars['DateTime']>;\n  after?: Maybe<Scalars['DateTime']>;\n  between?: Maybe<DateRange>;\n};\n\n/**\n * Used to construct boolean expressions for filtering search results\n * by FacetValue ID. Examples:\n *\n * * ID=1 OR ID=2: `{ facetValueFilters: [{ or: [1,2] }] }`\n * * ID=1 AND ID=2: `{ facetValueFilters: [{ and: 1 }, { and: 2 }] }`\n * * ID=1 AND (ID=2 OR ID=3): `{ facetValueFilters: [{ and: 1 }, { or: [2,3] }] }`\n */\nexport type FacetValueFilterInput = {\n  and?: Maybe<Scalars['ID']>;\n  or?: Maybe<Array<Scalars['ID']>>;\n};\n\nexport type SearchInput = {\n  term?: Maybe<Scalars['String']>;\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\n  facetValueOperator?: Maybe<LogicalOperator>;\n  facetValueFilters?: Maybe<Array<FacetValueFilterInput>>;\n  collectionId?: Maybe<Scalars['ID']>;\n  collectionSlug?: Maybe<Scalars['String']>;\n  groupByProduct?: Maybe<Scalars['Boolean']>;\n  take?: Maybe<Scalars['Int']>;\n  skip?: Maybe<Scalars['Int']>;\n  sort?: Maybe<SearchResultSortParameter>;\n};\n\nexport type SearchResultSortParameter = {\n  name?: Maybe<SortOrder>;\n  price?: Maybe<SortOrder>;\n};\n\nexport type CreateCustomerInput = {\n  title?: Maybe<Scalars['String']>;\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  emailAddress: Scalars['String'];\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type CreateAddressInput = {\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1: Scalars['String'];\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  countryCode: Scalars['String'];\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type UpdateAddressInput = {\n  id: Scalars['ID'];\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\n/** Indicates that an operation succeeded, where we do not want to return any more specific information. */\nexport type Success = {\n  __typename?: 'Success';\n  success: Scalars['Boolean'];\n};\n\nexport type ShippingMethodQuote = {\n  __typename?: 'ShippingMethodQuote';\n  id: Scalars['ID'];\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  code: Scalars['String'];\n  name: Scalars['String'];\n  description: Scalars['String'];\n  /** Any optional metadata returned by the ShippingCalculator in the ShippingCalculationResult */\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type PaymentMethodQuote = {\n  __typename?: 'PaymentMethodQuote';\n  id: Scalars['ID'];\n  code: Scalars['String'];\n  name: Scalars['String'];\n  description: Scalars['String'];\n  isEligible: Scalars['Boolean'];\n  eligibilityMessage?: Maybe<Scalars['String']>;\n};\n\nexport type Country = Node & {\n  __typename?: 'Country';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  translations: Array<CountryTranslation>;\n};\n\nexport type CountryTranslation = {\n  __typename?: 'CountryTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type CountryList = PaginatedList & {\n  __typename?: 'CountryList';\n  items: Array<Country>;\n  totalItems: Scalars['Int'];\n};\n\n/**\n * @description\n * ISO 4217 currency code\n *\n * @docsCategory common\n */\nexport enum CurrencyCode {\n  /** United Arab Emirates dirham */\n  AED = 'AED',\n  /** Afghan afghani */\n  AFN = 'AFN',\n  /** Albanian lek */\n  ALL = 'ALL',\n  /** Armenian dram */\n  AMD = 'AMD',\n  /** Netherlands Antillean guilder */\n  ANG = 'ANG',\n  /** Angolan kwanza */\n  AOA = 'AOA',\n  /** Argentine peso */\n  ARS = 'ARS',\n  /** Australian dollar */\n  AUD = 'AUD',\n  /** Aruban florin */\n  AWG = 'AWG',\n  /** Azerbaijani manat */\n  AZN = 'AZN',\n  /** Bosnia and Herzegovina convertible mark */\n  BAM = 'BAM',\n  /** Barbados dollar */\n  BBD = 'BBD',\n  /** Bangladeshi taka */\n  BDT = 'BDT',\n  /** Bulgarian lev */\n  BGN = 'BGN',\n  /** Bahraini dinar */\n  BHD = 'BHD',\n  /** Burundian franc */\n  BIF = 'BIF',\n  /** Bermudian dollar */\n  BMD = 'BMD',\n  /** Brunei dollar */\n  BND = 'BND',\n  /** Boliviano */\n  BOB = 'BOB',\n  /** Brazilian real */\n  BRL = 'BRL',\n  /** Bahamian dollar */\n  BSD = 'BSD',\n  /** Bhutanese ngultrum */\n  BTN = 'BTN',\n  /** Botswana pula */\n  BWP = 'BWP',\n  /** Belarusian ruble */\n  BYN = 'BYN',\n  /** Belize dollar */\n  BZD = 'BZD',\n  /** Canadian dollar */\n  CAD = 'CAD',\n  /** Congolese franc */\n  CDF = 'CDF',\n  /** Swiss franc */\n  CHF = 'CHF',\n  /** Chilean peso */\n  CLP = 'CLP',\n  /** Renminbi (Chinese) yuan */\n  CNY = 'CNY',\n  /** Colombian peso */\n  COP = 'COP',\n  /** Costa Rican colon */\n  CRC = 'CRC',\n  /** Cuban convertible peso */\n  CUC = 'CUC',\n  /** Cuban peso */\n  CUP = 'CUP',\n  /** Cape Verde escudo */\n  CVE = 'CVE',\n  /** Czech koruna */\n  CZK = 'CZK',\n  /** Djiboutian franc */\n  DJF = 'DJF',\n  /** Danish krone */\n  DKK = 'DKK',\n  /** Dominican peso */\n  DOP = 'DOP',\n  /** Algerian dinar */\n  DZD = 'DZD',\n  /** Egyptian pound */\n  EGP = 'EGP',\n  /** Eritrean nakfa */\n  ERN = 'ERN',\n  /** Ethiopian birr */\n  ETB = 'ETB',\n  /** Euro */\n  EUR = 'EUR',\n  /** Fiji dollar */\n  FJD = 'FJD',\n  /** Falkland Islands pound */\n  FKP = 'FKP',\n  /** Pound sterling */\n  GBP = 'GBP',\n  /** Georgian lari */\n  GEL = 'GEL',\n  /** Ghanaian cedi */\n  GHS = 'GHS',\n  /** Gibraltar pound */\n  GIP = 'GIP',\n  /** Gambian dalasi */\n  GMD = 'GMD',\n  /** Guinean franc */\n  GNF = 'GNF',\n  /** Guatemalan quetzal */\n  GTQ = 'GTQ',\n  /** Guyanese dollar */\n  GYD = 'GYD',\n  /** Hong Kong dollar */\n  HKD = 'HKD',\n  /** Honduran lempira */\n  HNL = 'HNL',\n  /** Croatian kuna */\n  HRK = 'HRK',\n  /** Haitian gourde */\n  HTG = 'HTG',\n  /** Hungarian forint */\n  HUF = 'HUF',\n  /** Indonesian rupiah */\n  IDR = 'IDR',\n  /** Israeli new shekel */\n  ILS = 'ILS',\n  /** Indian rupee */\n  INR = 'INR',\n  /** Iraqi dinar */\n  IQD = 'IQD',\n  /** Iranian rial */\n  IRR = 'IRR',\n  /** Icelandic króna */\n  ISK = 'ISK',\n  /** Jamaican dollar */\n  JMD = 'JMD',\n  /** Jordanian dinar */\n  JOD = 'JOD',\n  /** Japanese yen */\n  JPY = 'JPY',\n  /** Kenyan shilling */\n  KES = 'KES',\n  /** Kyrgyzstani som */\n  KGS = 'KGS',\n  /** Cambodian riel */\n  KHR = 'KHR',\n  /** Comoro franc */\n  KMF = 'KMF',\n  /** North Korean won */\n  KPW = 'KPW',\n  /** South Korean won */\n  KRW = 'KRW',\n  /** Kuwaiti dinar */\n  KWD = 'KWD',\n  /** Cayman Islands dollar */\n  KYD = 'KYD',\n  /** Kazakhstani tenge */\n  KZT = 'KZT',\n  /** Lao kip */\n  LAK = 'LAK',\n  /** Lebanese pound */\n  LBP = 'LBP',\n  /** Sri Lankan rupee */\n  LKR = 'LKR',\n  /** Liberian dollar */\n  LRD = 'LRD',\n  /** Lesotho loti */\n  LSL = 'LSL',\n  /** Libyan dinar */\n  LYD = 'LYD',\n  /** Moroccan dirham */\n  MAD = 'MAD',\n  /** Moldovan leu */\n  MDL = 'MDL',\n  /** Malagasy ariary */\n  MGA = 'MGA',\n  /** Macedonian denar */\n  MKD = 'MKD',\n  /** Myanmar kyat */\n  MMK = 'MMK',\n  /** Mongolian tögrög */\n  MNT = 'MNT',\n  /** Macanese pataca */\n  MOP = 'MOP',\n  /** Mauritanian ouguiya */\n  MRU = 'MRU',\n  /** Mauritian rupee */\n  MUR = 'MUR',\n  /** Maldivian rufiyaa */\n  MVR = 'MVR',\n  /** Malawian kwacha */\n  MWK = 'MWK',\n  /** Mexican peso */\n  MXN = 'MXN',\n  /** Malaysian ringgit */\n  MYR = 'MYR',\n  /** Mozambican metical */\n  MZN = 'MZN',\n  /** Namibian dollar */\n  NAD = 'NAD',\n  /** Nigerian naira */\n  NGN = 'NGN',\n  /** Nicaraguan córdoba */\n  NIO = 'NIO',\n  /** Norwegian krone */\n  NOK = 'NOK',\n  /** Nepalese rupee */\n  NPR = 'NPR',\n  /** New Zealand dollar */\n  NZD = 'NZD',\n  /** Omani rial */\n  OMR = 'OMR',\n  /** Panamanian balboa */\n  PAB = 'PAB',\n  /** Peruvian sol */\n  PEN = 'PEN',\n  /** Papua New Guinean kina */\n  PGK = 'PGK',\n  /** Philippine peso */\n  PHP = 'PHP',\n  /** Pakistani rupee */\n  PKR = 'PKR',\n  /** Polish złoty */\n  PLN = 'PLN',\n  /** Paraguayan guaraní */\n  PYG = 'PYG',\n  /** Qatari riyal */\n  QAR = 'QAR',\n  /** Romanian leu */\n  RON = 'RON',\n  /** Serbian dinar */\n  RSD = 'RSD',\n  /** Russian ruble */\n  RUB = 'RUB',\n  /** Rwandan franc */\n  RWF = 'RWF',\n  /** Saudi riyal */\n  SAR = 'SAR',\n  /** Solomon Islands dollar */\n  SBD = 'SBD',\n  /** Seychelles rupee */\n  SCR = 'SCR',\n  /** Sudanese pound */\n  SDG = 'SDG',\n  /** Swedish krona/kronor */\n  SEK = 'SEK',\n  /** Singapore dollar */\n  SGD = 'SGD',\n  /** Saint Helena pound */\n  SHP = 'SHP',\n  /** Sierra Leonean leone */\n  SLL = 'SLL',\n  /** Somali shilling */\n  SOS = 'SOS',\n  /** Surinamese dollar */\n  SRD = 'SRD',\n  /** South Sudanese pound */\n  SSP = 'SSP',\n  /** São Tomé and Príncipe dobra */\n  STN = 'STN',\n  /** Salvadoran colón */\n  SVC = 'SVC',\n  /** Syrian pound */\n  SYP = 'SYP',\n  /** Swazi lilangeni */\n  SZL = 'SZL',\n  /** Thai baht */\n  THB = 'THB',\n  /** Tajikistani somoni */\n  TJS = 'TJS',\n  /** Turkmenistan manat */\n  TMT = 'TMT',\n  /** Tunisian dinar */\n  TND = 'TND',\n  /** Tongan paʻanga */\n  TOP = 'TOP',\n  /** Turkish lira */\n  TRY = 'TRY',\n  /** Trinidad and Tobago dollar */\n  TTD = 'TTD',\n  /** New Taiwan dollar */\n  TWD = 'TWD',\n  /** Tanzanian shilling */\n  TZS = 'TZS',\n  /** Ukrainian hryvnia */\n  UAH = 'UAH',\n  /** Ugandan shilling */\n  UGX = 'UGX',\n  /** United States dollar */\n  USD = 'USD',\n  /** Uruguayan peso */\n  UYU = 'UYU',\n  /** Uzbekistan som */\n  UZS = 'UZS',\n  /** Venezuelan bolívar soberano */\n  VES = 'VES',\n  /** Vietnamese đồng */\n  VND = 'VND',\n  /** Vanuatu vatu */\n  VUV = 'VUV',\n  /** Samoan tala */\n  WST = 'WST',\n  /** CFA franc BEAC */\n  XAF = 'XAF',\n  /** East Caribbean dollar */\n  XCD = 'XCD',\n  /** CFA franc BCEAO */\n  XOF = 'XOF',\n  /** CFP franc (franc Pacifique) */\n  XPF = 'XPF',\n  /** Yemeni rial */\n  YER = 'YER',\n  /** South African rand */\n  ZAR = 'ZAR',\n  /** Zambian kwacha */\n  ZMW = 'ZMW',\n  /** Zimbabwean dollar */\n  ZWL = 'ZWL'\n}\n\nexport type CustomField = {\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n};\n\nexport type StringCustomFieldConfig = CustomField & {\n  __typename?: 'StringCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  length?: Maybe<Scalars['Int']>;\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n  options?: Maybe<Array<StringFieldOption>>;\n};\n\nexport type StringFieldOption = {\n  __typename?: 'StringFieldOption';\n  value: Scalars['String'];\n  label?: Maybe<Array<LocalizedString>>;\n};\n\nexport type LocaleStringCustomFieldConfig = CustomField & {\n  __typename?: 'LocaleStringCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  length?: Maybe<Scalars['Int']>;\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  pattern?: Maybe<Scalars['String']>;\n};\n\nexport type IntCustomFieldConfig = CustomField & {\n  __typename?: 'IntCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['Int']>;\n  max?: Maybe<Scalars['Int']>;\n  step?: Maybe<Scalars['Int']>;\n};\n\nexport type FloatCustomFieldConfig = CustomField & {\n  __typename?: 'FloatCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['Float']>;\n  max?: Maybe<Scalars['Float']>;\n  step?: Maybe<Scalars['Float']>;\n};\n\nexport type BooleanCustomFieldConfig = CustomField & {\n  __typename?: 'BooleanCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n};\n\n/**\n * Expects the same validation formats as the `<input type=\"datetime-local\">` HTML element.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#Additional_attributes\n */\nexport type DateTimeCustomFieldConfig = CustomField & {\n  __typename?: 'DateTimeCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  min?: Maybe<Scalars['String']>;\n  max?: Maybe<Scalars['String']>;\n  step?: Maybe<Scalars['Int']>;\n};\n\nexport type RelationCustomFieldConfig = CustomField & {\n  __typename?: 'RelationCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n  entity: Scalars['String'];\n  scalarFields: Array<Scalars['String']>;\n};\n\nexport type TextCustomFieldConfig = CustomField & {\n  __typename?: 'TextCustomFieldConfig';\n  name: Scalars['String'];\n  type: Scalars['String'];\n  list: Scalars['Boolean'];\n  label?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Array<LocalizedString>>;\n  readonly?: Maybe<Scalars['Boolean']>;\n  internal?: Maybe<Scalars['Boolean']>;\n};\n\nexport type LocalizedString = {\n  __typename?: 'LocalizedString';\n  languageCode: LanguageCode;\n  value: Scalars['String'];\n};\n\nexport type CustomFieldConfig = StringCustomFieldConfig | LocaleStringCustomFieldConfig | IntCustomFieldConfig | FloatCustomFieldConfig | BooleanCustomFieldConfig | DateTimeCustomFieldConfig | RelationCustomFieldConfig | TextCustomFieldConfig;\n\nexport type CustomerGroup = Node & {\n  __typename?: 'CustomerGroup';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  customers: CustomerList;\n};\n\n\nexport type CustomerGroupCustomersArgs = {\n  options?: Maybe<CustomerListOptions>;\n};\n\nexport type CustomerList = PaginatedList & {\n  __typename?: 'CustomerList';\n  items: Array<Customer>;\n  totalItems: Scalars['Int'];\n};\n\nexport type FacetValue = Node & {\n  __typename?: 'FacetValue';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  facet: Facet;\n  name: Scalars['String'];\n  code: Scalars['String'];\n  translations: Array<FacetValueTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type FacetValueTranslation = {\n  __typename?: 'FacetValueTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type FacetTranslation = {\n  __typename?: 'FacetTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type FacetList = PaginatedList & {\n  __typename?: 'FacetList';\n  items: Array<Facet>;\n  totalItems: Scalars['Int'];\n};\n\nexport enum HistoryEntryType {\n  CUSTOMER_REGISTERED = 'CUSTOMER_REGISTERED',\n  CUSTOMER_VERIFIED = 'CUSTOMER_VERIFIED',\n  CUSTOMER_DETAIL_UPDATED = 'CUSTOMER_DETAIL_UPDATED',\n  CUSTOMER_ADDED_TO_GROUP = 'CUSTOMER_ADDED_TO_GROUP',\n  CUSTOMER_REMOVED_FROM_GROUP = 'CUSTOMER_REMOVED_FROM_GROUP',\n  CUSTOMER_ADDRESS_CREATED = 'CUSTOMER_ADDRESS_CREATED',\n  CUSTOMER_ADDRESS_UPDATED = 'CUSTOMER_ADDRESS_UPDATED',\n  CUSTOMER_ADDRESS_DELETED = 'CUSTOMER_ADDRESS_DELETED',\n  CUSTOMER_PASSWORD_UPDATED = 'CUSTOMER_PASSWORD_UPDATED',\n  CUSTOMER_PASSWORD_RESET_REQUESTED = 'CUSTOMER_PASSWORD_RESET_REQUESTED',\n  CUSTOMER_PASSWORD_RESET_VERIFIED = 'CUSTOMER_PASSWORD_RESET_VERIFIED',\n  CUSTOMER_EMAIL_UPDATE_REQUESTED = 'CUSTOMER_EMAIL_UPDATE_REQUESTED',\n  CUSTOMER_EMAIL_UPDATE_VERIFIED = 'CUSTOMER_EMAIL_UPDATE_VERIFIED',\n  CUSTOMER_NOTE = 'CUSTOMER_NOTE',\n  ORDER_STATE_TRANSITION = 'ORDER_STATE_TRANSITION',\n  ORDER_PAYMENT_TRANSITION = 'ORDER_PAYMENT_TRANSITION',\n  ORDER_FULFILLMENT = 'ORDER_FULFILLMENT',\n  ORDER_CANCELLATION = 'ORDER_CANCELLATION',\n  ORDER_REFUND_TRANSITION = 'ORDER_REFUND_TRANSITION',\n  ORDER_FULFILLMENT_TRANSITION = 'ORDER_FULFILLMENT_TRANSITION',\n  ORDER_NOTE = 'ORDER_NOTE',\n  ORDER_COUPON_APPLIED = 'ORDER_COUPON_APPLIED',\n  ORDER_COUPON_REMOVED = 'ORDER_COUPON_REMOVED',\n  ORDER_MODIFIED = 'ORDER_MODIFIED'\n}\n\nexport type HistoryEntryList = PaginatedList & {\n  __typename?: 'HistoryEntryList';\n  items: Array<HistoryEntry>;\n  totalItems: Scalars['Int'];\n};\n\nexport type HistoryEntryListOptions = {\n  skip?: Maybe<Scalars['Int']>;\n  take?: Maybe<Scalars['Int']>;\n  sort?: Maybe<HistoryEntrySortParameter>;\n  filter?: Maybe<HistoryEntryFilterParameter>;\n};\n\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n *\n * @docsCategory common\n */\nexport enum LanguageCode {\n  /** Afrikaans */\n  af = 'af',\n  /** Akan */\n  ak = 'ak',\n  /** Amharic */\n  am = 'am',\n  /** Arabic */\n  ar = 'ar',\n  /** Assamese */\n  as = 'as',\n  /** Azerbaijani */\n  az = 'az',\n  /** Belarusian */\n  be = 'be',\n  /** Bulgarian */\n  bg = 'bg',\n  /** Bambara */\n  bm = 'bm',\n  /** Bangla */\n  bn = 'bn',\n  /** Tibetan */\n  bo = 'bo',\n  /** Breton */\n  br = 'br',\n  /** Bosnian */\n  bs = 'bs',\n  /** Catalan */\n  ca = 'ca',\n  /** Chechen */\n  ce = 'ce',\n  /** Corsican */\n  co = 'co',\n  /** Czech */\n  cs = 'cs',\n  /** Church Slavic */\n  cu = 'cu',\n  /** Welsh */\n  cy = 'cy',\n  /** Danish */\n  da = 'da',\n  /** German */\n  de = 'de',\n  /** Austrian German */\n  de_AT = 'de_AT',\n  /** Swiss High German */\n  de_CH = 'de_CH',\n  /** Dzongkha */\n  dz = 'dz',\n  /** Ewe */\n  ee = 'ee',\n  /** Greek */\n  el = 'el',\n  /** English */\n  en = 'en',\n  /** Australian English */\n  en_AU = 'en_AU',\n  /** Canadian English */\n  en_CA = 'en_CA',\n  /** British English */\n  en_GB = 'en_GB',\n  /** American English */\n  en_US = 'en_US',\n  /** Esperanto */\n  eo = 'eo',\n  /** Spanish */\n  es = 'es',\n  /** European Spanish */\n  es_ES = 'es_ES',\n  /** Mexican Spanish */\n  es_MX = 'es_MX',\n  /** Estonian */\n  et = 'et',\n  /** Basque */\n  eu = 'eu',\n  /** Persian */\n  fa = 'fa',\n  /** Dari */\n  fa_AF = 'fa_AF',\n  /** Fulah */\n  ff = 'ff',\n  /** Finnish */\n  fi = 'fi',\n  /** Faroese */\n  fo = 'fo',\n  /** French */\n  fr = 'fr',\n  /** Canadian French */\n  fr_CA = 'fr_CA',\n  /** Swiss French */\n  fr_CH = 'fr_CH',\n  /** Western Frisian */\n  fy = 'fy',\n  /** Irish */\n  ga = 'ga',\n  /** Scottish Gaelic */\n  gd = 'gd',\n  /** Galician */\n  gl = 'gl',\n  /** Gujarati */\n  gu = 'gu',\n  /** Manx */\n  gv = 'gv',\n  /** Hausa */\n  ha = 'ha',\n  /** Hebrew */\n  he = 'he',\n  /** Hindi */\n  hi = 'hi',\n  /** Croatian */\n  hr = 'hr',\n  /** Haitian Creole */\n  ht = 'ht',\n  /** Hungarian */\n  hu = 'hu',\n  /** Armenian */\n  hy = 'hy',\n  /** Interlingua */\n  ia = 'ia',\n  /** Indonesian */\n  id = 'id',\n  /** Igbo */\n  ig = 'ig',\n  /** Sichuan Yi */\n  ii = 'ii',\n  /** Icelandic */\n  is = 'is',\n  /** Italian */\n  it = 'it',\n  /** Japanese */\n  ja = 'ja',\n  /** Javanese */\n  jv = 'jv',\n  /** Georgian */\n  ka = 'ka',\n  /** Kikuyu */\n  ki = 'ki',\n  /** Kazakh */\n  kk = 'kk',\n  /** Kalaallisut */\n  kl = 'kl',\n  /** Khmer */\n  km = 'km',\n  /** Kannada */\n  kn = 'kn',\n  /** Korean */\n  ko = 'ko',\n  /** Kashmiri */\n  ks = 'ks',\n  /** Kurdish */\n  ku = 'ku',\n  /** Cornish */\n  kw = 'kw',\n  /** Kyrgyz */\n  ky = 'ky',\n  /** Latin */\n  la = 'la',\n  /** Luxembourgish */\n  lb = 'lb',\n  /** Ganda */\n  lg = 'lg',\n  /** Lingala */\n  ln = 'ln',\n  /** Lao */\n  lo = 'lo',\n  /** Lithuanian */\n  lt = 'lt',\n  /** Luba-Katanga */\n  lu = 'lu',\n  /** Latvian */\n  lv = 'lv',\n  /** Malagasy */\n  mg = 'mg',\n  /** Maori */\n  mi = 'mi',\n  /** Macedonian */\n  mk = 'mk',\n  /** Malayalam */\n  ml = 'ml',\n  /** Mongolian */\n  mn = 'mn',\n  /** Marathi */\n  mr = 'mr',\n  /** Malay */\n  ms = 'ms',\n  /** Maltese */\n  mt = 'mt',\n  /** Burmese */\n  my = 'my',\n  /** Norwegian Bokmål */\n  nb = 'nb',\n  /** North Ndebele */\n  nd = 'nd',\n  /** Nepali */\n  ne = 'ne',\n  /** Dutch */\n  nl = 'nl',\n  /** Flemish */\n  nl_BE = 'nl_BE',\n  /** Norwegian Nynorsk */\n  nn = 'nn',\n  /** Nyanja */\n  ny = 'ny',\n  /** Oromo */\n  om = 'om',\n  /** Odia */\n  or = 'or',\n  /** Ossetic */\n  os = 'os',\n  /** Punjabi */\n  pa = 'pa',\n  /** Polish */\n  pl = 'pl',\n  /** Pashto */\n  ps = 'ps',\n  /** Portuguese */\n  pt = 'pt',\n  /** Brazilian Portuguese */\n  pt_BR = 'pt_BR',\n  /** European Portuguese */\n  pt_PT = 'pt_PT',\n  /** Quechua */\n  qu = 'qu',\n  /** Romansh */\n  rm = 'rm',\n  /** Rundi */\n  rn = 'rn',\n  /** Romanian */\n  ro = 'ro',\n  /** Moldavian */\n  ro_MD = 'ro_MD',\n  /** Russian */\n  ru = 'ru',\n  /** Kinyarwanda */\n  rw = 'rw',\n  /** Sanskrit */\n  sa = 'sa',\n  /** Sindhi */\n  sd = 'sd',\n  /** Northern Sami */\n  se = 'se',\n  /** Sango */\n  sg = 'sg',\n  /** Sinhala */\n  si = 'si',\n  /** Slovak */\n  sk = 'sk',\n  /** Slovenian */\n  sl = 'sl',\n  /** Samoan */\n  sm = 'sm',\n  /** Shona */\n  sn = 'sn',\n  /** Somali */\n  so = 'so',\n  /** Albanian */\n  sq = 'sq',\n  /** Serbian */\n  sr = 'sr',\n  /** Southern Sotho */\n  st = 'st',\n  /** Sundanese */\n  su = 'su',\n  /** Swedish */\n  sv = 'sv',\n  /** Swahili */\n  sw = 'sw',\n  /** Congo Swahili */\n  sw_CD = 'sw_CD',\n  /** Tamil */\n  ta = 'ta',\n  /** Telugu */\n  te = 'te',\n  /** Tajik */\n  tg = 'tg',\n  /** Thai */\n  th = 'th',\n  /** Tigrinya */\n  ti = 'ti',\n  /** Turkmen */\n  tk = 'tk',\n  /** Tongan */\n  to = 'to',\n  /** Turkish */\n  tr = 'tr',\n  /** Tatar */\n  tt = 'tt',\n  /** Uyghur */\n  ug = 'ug',\n  /** Ukrainian */\n  uk = 'uk',\n  /** Urdu */\n  ur = 'ur',\n  /** Uzbek */\n  uz = 'uz',\n  /** Vietnamese */\n  vi = 'vi',\n  /** Volapük */\n  vo = 'vo',\n  /** Wolof */\n  wo = 'wo',\n  /** Xhosa */\n  xh = 'xh',\n  /** Yiddish */\n  yi = 'yi',\n  /** Yoruba */\n  yo = 'yo',\n  /** Chinese */\n  zh = 'zh',\n  /** Simplified Chinese */\n  zh_Hans = 'zh_Hans',\n  /** Traditional Chinese */\n  zh_Hant = 'zh_Hant',\n  /** Zulu */\n  zu = 'zu'\n}\n\n/**\n * A summary of the taxes being applied to this order, grouped\n * by taxRate.\n */\nexport type OrderTaxSummary = {\n  __typename?: 'OrderTaxSummary';\n  /** A description of this tax */\n  description: Scalars['String'];\n  /** The taxRate as a percentage */\n  taxRate: Scalars['Float'];\n  /** The total net price or OrderItems to which this taxRate applies */\n  taxBase: Scalars['Int'];\n  /** The total tax being applied to the Order at this taxRate */\n  taxTotal: Scalars['Int'];\n};\n\nexport type OrderAddress = {\n  __typename?: 'OrderAddress';\n  fullName?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  streetLine1?: Maybe<Scalars['String']>;\n  streetLine2?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  postalCode?: Maybe<Scalars['String']>;\n  country?: Maybe<Scalars['String']>;\n  countryCode?: Maybe<Scalars['String']>;\n  phoneNumber?: Maybe<Scalars['String']>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type OrderList = PaginatedList & {\n  __typename?: 'OrderList';\n  items: Array<Order>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ShippingLine = {\n  __typename?: 'ShippingLine';\n  shippingMethod: ShippingMethod;\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  discountedPrice: Scalars['Int'];\n  discountedPriceWithTax: Scalars['Int'];\n  discounts: Array<Discount>;\n};\n\nexport type Discount = {\n  __typename?: 'Discount';\n  adjustmentSource: Scalars['String'];\n  type: AdjustmentType;\n  description: Scalars['String'];\n  amount: Scalars['Int'];\n  amountWithTax: Scalars['Int'];\n};\n\nexport type OrderItem = Node & {\n  __typename?: 'OrderItem';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  cancelled: Scalars['Boolean'];\n  /** The price of a single unit, excluding tax and discounts */\n  unitPrice: Scalars['Int'];\n  /** The price of a single unit, including tax but excluding discounts */\n  unitPriceWithTax: Scalars['Int'];\n  /**\n   * The price of a single unit including discounts, excluding tax.\n   *\n   * If Order-level discounts have been applied, this will not be the\n   * actual taxable unit price (see `proratedUnitPrice`), but is generally the\n   * correct price to display to customers to avoid confusion\n   * about the internal handling of distributed Order-level discounts.\n   */\n  discountedUnitPrice: Scalars['Int'];\n  /** The price of a single unit including discounts and tax */\n  discountedUnitPriceWithTax: Scalars['Int'];\n  /**\n   * The actual unit price, taking into account both item discounts _and_ prorated (proportially-distributed)\n   * Order-level discounts. This value is the true economic value of the OrderItem, and is used in tax\n   * and refund calculations.\n   */\n  proratedUnitPrice: Scalars['Int'];\n  /** The proratedUnitPrice including tax */\n  proratedUnitPriceWithTax: Scalars['Int'];\n  unitTax: Scalars['Int'];\n  taxRate: Scalars['Float'];\n  adjustments: Array<Adjustment>;\n  taxLines: Array<TaxLine>;\n  fulfillment?: Maybe<Fulfillment>;\n  refundId?: Maybe<Scalars['ID']>;\n};\n\nexport type OrderLine = Node & {\n  __typename?: 'OrderLine';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  productVariant: ProductVariant;\n  featuredAsset?: Maybe<Asset>;\n  /** The price of a single unit, excluding tax and discounts */\n  unitPrice: Scalars['Int'];\n  /** The price of a single unit, including tax but excluding discounts */\n  unitPriceWithTax: Scalars['Int'];\n  /** Non-zero if the unitPrice has changed since it was initially added to Order */\n  unitPriceChangeSinceAdded: Scalars['Int'];\n  /** Non-zero if the unitPriceWithTax has changed since it was initially added to Order */\n  unitPriceWithTaxChangeSinceAdded: Scalars['Int'];\n  /**\n   * The price of a single unit including discounts, excluding tax.\n   *\n   * If Order-level discounts have been applied, this will not be the\n   * actual taxable unit price (see `proratedUnitPrice`), but is generally the\n   * correct price to display to customers to avoid confusion\n   * about the internal handling of distributed Order-level discounts.\n   */\n  discountedUnitPrice: Scalars['Int'];\n  /** The price of a single unit including discounts and tax */\n  discountedUnitPriceWithTax: Scalars['Int'];\n  /**\n   * The actual unit price, taking into account both item discounts _and_ prorated (proportially-distributed)\n   * Order-level discounts. This value is the true economic value of the OrderItem, and is used in tax\n   * and refund calculations.\n   */\n  proratedUnitPrice: Scalars['Int'];\n  /** The proratedUnitPrice including tax */\n  proratedUnitPriceWithTax: Scalars['Int'];\n  quantity: Scalars['Int'];\n  items: Array<OrderItem>;\n  taxRate: Scalars['Float'];\n  /** The total price of the line excluding tax and discounts. */\n  linePrice: Scalars['Int'];\n  /** The total price of the line including tax bit excluding discounts. */\n  linePriceWithTax: Scalars['Int'];\n  /** The price of the line including discounts, excluding tax */\n  discountedLinePrice: Scalars['Int'];\n  /** The price of the line including discounts and tax */\n  discountedLinePriceWithTax: Scalars['Int'];\n  /**\n   * The actual line price, taking into account both item discounts _and_ prorated (proportially-distributed)\n   * Order-level discounts. This value is the true economic value of the OrderLine, and is used in tax\n   * and refund calculations.\n   */\n  proratedLinePrice: Scalars['Int'];\n  /** The proratedLinePrice including tax */\n  proratedLinePriceWithTax: Scalars['Int'];\n  /** The total tax on this line */\n  lineTax: Scalars['Int'];\n  discounts: Array<Discount>;\n  taxLines: Array<TaxLine>;\n  order: Order;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type Refund = Node & {\n  __typename?: 'Refund';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  items: Scalars['Int'];\n  shipping: Scalars['Int'];\n  adjustment: Scalars['Int'];\n  total: Scalars['Int'];\n  method?: Maybe<Scalars['String']>;\n  state: Scalars['String'];\n  transactionId?: Maybe<Scalars['String']>;\n  reason?: Maybe<Scalars['String']>;\n  orderItems: Array<OrderItem>;\n  paymentId: Scalars['ID'];\n  metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type Surcharge = Node & {\n  __typename?: 'Surcharge';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  description: Scalars['String'];\n  sku?: Maybe<Scalars['String']>;\n  taxLines: Array<TaxLine>;\n  price: Scalars['Int'];\n  priceWithTax: Scalars['Int'];\n  taxRate: Scalars['Float'];\n};\n\nexport type ProductOptionGroup = Node & {\n  __typename?: 'ProductOptionGroup';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  options: Array<ProductOption>;\n  translations: Array<ProductOptionGroupTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionGroupTranslation = {\n  __typename?: 'ProductOptionGroupTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type ProductOption = Node & {\n  __typename?: 'ProductOption';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  code: Scalars['String'];\n  name: Scalars['String'];\n  groupId: Scalars['ID'];\n  group: ProductOptionGroup;\n  translations: Array<ProductOptionTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProductOptionTranslation = {\n  __typename?: 'ProductOptionTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type SearchReindexResponse = {\n  __typename?: 'SearchReindexResponse';\n  success: Scalars['Boolean'];\n};\n\nexport type SearchResponse = {\n  __typename?: 'SearchResponse';\n  items: Array<SearchResult>;\n  totalItems: Scalars['Int'];\n  facetValues: Array<FacetValueResult>;\n  collections: Array<CollectionResult>;\n};\n\n/**\n * Which FacetValues are present in the products returned\n * by the search, and in what quantity.\n */\nexport type FacetValueResult = {\n  __typename?: 'FacetValueResult';\n  facetValue: FacetValue;\n  count: Scalars['Int'];\n};\n\n/**\n * Which Collections are present in the products returned\n * by the search, and in what quantity.\n */\nexport type CollectionResult = {\n  __typename?: 'CollectionResult';\n  collection: Collection;\n  count: Scalars['Int'];\n};\n\nexport type SearchResultAsset = {\n  __typename?: 'SearchResultAsset';\n  id: Scalars['ID'];\n  preview: Scalars['String'];\n  focalPoint?: Maybe<Coordinate>;\n};\n\n/** The price of a search result product, either as a range or as a single price */\nexport type SearchResultPrice = PriceRange | SinglePrice;\n\n/** The price value where the result has a single price */\nexport type SinglePrice = {\n  __typename?: 'SinglePrice';\n  value: Scalars['Int'];\n};\n\n/** The price range where the result has more than one price */\nexport type PriceRange = {\n  __typename?: 'PriceRange';\n  min: Scalars['Int'];\n  max: Scalars['Int'];\n};\n\nexport type ProductTranslation = {\n  __typename?: 'ProductTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  slug: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ProductList = PaginatedList & {\n  __typename?: 'ProductList';\n  items: Array<Product>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ProductVariantTranslation = {\n  __typename?: 'ProductVariantTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n};\n\nexport type Promotion = Node & {\n  __typename?: 'Promotion';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  startsAt?: Maybe<Scalars['DateTime']>;\n  endsAt?: Maybe<Scalars['DateTime']>;\n  couponCode?: Maybe<Scalars['String']>;\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  conditions: Array<ConfigurableOperation>;\n  actions: Array<ConfigurableOperation>;\n};\n\nexport type PromotionList = PaginatedList & {\n  __typename?: 'PromotionList';\n  items: Array<Promotion>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Role = Node & {\n  __typename?: 'Role';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  description: Scalars['String'];\n  permissions: Array<Permission>;\n  channels: Array<Channel>;\n};\n\nexport type RoleList = PaginatedList & {\n  __typename?: 'RoleList';\n  items: Array<Role>;\n  totalItems: Scalars['Int'];\n};\n\nexport type ShippingMethod = Node & {\n  __typename?: 'ShippingMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  code: Scalars['String'];\n  name: Scalars['String'];\n  description: Scalars['String'];\n  fulfillmentHandlerCode: Scalars['String'];\n  checker: ConfigurableOperation;\n  calculator: ConfigurableOperation;\n  translations: Array<ShippingMethodTranslation>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type ShippingMethodTranslation = {\n  __typename?: 'ShippingMethodTranslation';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  languageCode: LanguageCode;\n  name: Scalars['String'];\n  description: Scalars['String'];\n};\n\nexport type ShippingMethodList = PaginatedList & {\n  __typename?: 'ShippingMethodList';\n  items: Array<ShippingMethod>;\n  totalItems: Scalars['Int'];\n};\n\nexport type Tag = Node & {\n  __typename?: 'Tag';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  value: Scalars['String'];\n};\n\nexport type TagList = PaginatedList & {\n  __typename?: 'TagList';\n  items: Array<Tag>;\n  totalItems: Scalars['Int'];\n};\n\nexport type TaxCategory = Node & {\n  __typename?: 'TaxCategory';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  isDefault: Scalars['Boolean'];\n};\n\nexport type TaxRate = Node & {\n  __typename?: 'TaxRate';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  value: Scalars['Float'];\n  category: TaxCategory;\n  zone: Zone;\n  customerGroup?: Maybe<CustomerGroup>;\n};\n\nexport type TaxRateList = PaginatedList & {\n  __typename?: 'TaxRateList';\n  items: Array<TaxRate>;\n  totalItems: Scalars['Int'];\n};\n\nexport type User = Node & {\n  __typename?: 'User';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  identifier: Scalars['String'];\n  verified: Scalars['Boolean'];\n  roles: Array<Role>;\n  lastLogin?: Maybe<Scalars['DateTime']>;\n  authenticationMethods: Array<AuthenticationMethod>;\n  customFields?: Maybe<Scalars['JSON']>;\n};\n\nexport type AuthenticationMethod = Node & {\n  __typename?: 'AuthenticationMethod';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  strategy: Scalars['String'];\n};\n\nexport type Zone = Node & {\n  __typename?: 'Zone';\n  id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  members: Array<Country>;\n};\n\nexport type AdministratorFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  firstName?: Maybe<StringOperators>;\n  lastName?: Maybe<StringOperators>;\n  emailAddress?: Maybe<StringOperators>;\n};\n\nexport type AdministratorSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  firstName?: Maybe<SortOrder>;\n  lastName?: Maybe<SortOrder>;\n  emailAddress?: Maybe<SortOrder>;\n};\n\nexport type AssetFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n  type?: Maybe<StringOperators>;\n  fileSize?: Maybe<NumberOperators>;\n  mimeType?: Maybe<StringOperators>;\n  width?: Maybe<NumberOperators>;\n  height?: Maybe<NumberOperators>;\n  source?: Maybe<StringOperators>;\n  preview?: Maybe<StringOperators>;\n};\n\nexport type AssetSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  fileSize?: Maybe<SortOrder>;\n  mimeType?: Maybe<SortOrder>;\n  width?: Maybe<SortOrder>;\n  height?: Maybe<SortOrder>;\n  source?: Maybe<SortOrder>;\n  preview?: Maybe<SortOrder>;\n};\n\nexport type CollectionFilterParameter = {\n  isPrivate?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  slug?: Maybe<StringOperators>;\n  position?: Maybe<NumberOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type CollectionSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  slug?: Maybe<SortOrder>;\n  position?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type CountryFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  code?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type CountrySortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type CustomerGroupFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n};\n\nexport type CustomerGroupSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type CustomerFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  title?: Maybe<StringOperators>;\n  firstName?: Maybe<StringOperators>;\n  lastName?: Maybe<StringOperators>;\n  phoneNumber?: Maybe<StringOperators>;\n  emailAddress?: Maybe<StringOperators>;\n};\n\nexport type CustomerSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  title?: Maybe<SortOrder>;\n  firstName?: Maybe<SortOrder>;\n  lastName?: Maybe<SortOrder>;\n  phoneNumber?: Maybe<SortOrder>;\n  emailAddress?: Maybe<SortOrder>;\n};\n\nexport type FacetFilterParameter = {\n  isPrivate?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  code?: Maybe<StringOperators>;\n};\n\nexport type FacetSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n};\n\nexport type JobFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  startedAt?: Maybe<DateOperators>;\n  settledAt?: Maybe<DateOperators>;\n  queueName?: Maybe<StringOperators>;\n  state?: Maybe<StringOperators>;\n  progress?: Maybe<NumberOperators>;\n  isSettled?: Maybe<BooleanOperators>;\n  duration?: Maybe<NumberOperators>;\n};\n\nexport type JobSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  startedAt?: Maybe<SortOrder>;\n  settledAt?: Maybe<SortOrder>;\n  queueName?: Maybe<SortOrder>;\n  progress?: Maybe<SortOrder>;\n  duration?: Maybe<SortOrder>;\n};\n\nexport type PaymentMethodFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n  code?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type PaymentMethodSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type ProductFilterParameter = {\n  enabled?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  slug?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type ProductSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  slug?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type ProductVariantFilterParameter = {\n  enabled?: Maybe<BooleanOperators>;\n  trackInventory?: Maybe<StringOperators>;\n  stockOnHand?: Maybe<NumberOperators>;\n  stockAllocated?: Maybe<NumberOperators>;\n  outOfStockThreshold?: Maybe<NumberOperators>;\n  useGlobalOutOfStockThreshold?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  languageCode?: Maybe<StringOperators>;\n  sku?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  price?: Maybe<NumberOperators>;\n  currencyCode?: Maybe<StringOperators>;\n  priceWithTax?: Maybe<NumberOperators>;\n  stockLevel?: Maybe<StringOperators>;\n};\n\nexport type ProductVariantSortParameter = {\n  stockOnHand?: Maybe<SortOrder>;\n  stockAllocated?: Maybe<SortOrder>;\n  outOfStockThreshold?: Maybe<SortOrder>;\n  id?: Maybe<SortOrder>;\n  productId?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  sku?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  price?: Maybe<SortOrder>;\n  priceWithTax?: Maybe<SortOrder>;\n  stockLevel?: Maybe<SortOrder>;\n};\n\nexport type PromotionFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  startsAt?: Maybe<DateOperators>;\n  endsAt?: Maybe<DateOperators>;\n  couponCode?: Maybe<StringOperators>;\n  perCustomerUsageLimit?: Maybe<NumberOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n};\n\nexport type PromotionSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  startsAt?: Maybe<SortOrder>;\n  endsAt?: Maybe<SortOrder>;\n  couponCode?: Maybe<SortOrder>;\n  perCustomerUsageLimit?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n};\n\nexport type RoleFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n};\n\nexport type RoleSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n};\n\nexport type ShippingMethodFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  code?: Maybe<StringOperators>;\n  name?: Maybe<StringOperators>;\n  description?: Maybe<StringOperators>;\n  fulfillmentHandlerCode?: Maybe<StringOperators>;\n};\n\nexport type ShippingMethodSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  code?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  description?: Maybe<SortOrder>;\n  fulfillmentHandlerCode?: Maybe<SortOrder>;\n};\n\nexport type TagFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  value?: Maybe<StringOperators>;\n};\n\nexport type TagSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  value?: Maybe<SortOrder>;\n};\n\nexport type TaxRateFilterParameter = {\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  name?: Maybe<StringOperators>;\n  enabled?: Maybe<BooleanOperators>;\n  value?: Maybe<NumberOperators>;\n};\n\nexport type TaxRateSortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n  name?: Maybe<SortOrder>;\n  value?: Maybe<SortOrder>;\n};\n\nexport type HistoryEntryFilterParameter = {\n  isPublic?: Maybe<BooleanOperators>;\n  createdAt?: Maybe<DateOperators>;\n  updatedAt?: Maybe<DateOperators>;\n  type?: Maybe<StringOperators>;\n};\n\nexport type HistoryEntrySortParameter = {\n  id?: Maybe<SortOrder>;\n  createdAt?: Maybe<SortOrder>;\n  updatedAt?: Maybe<SortOrder>;\n};\n\nexport type NativeAuthInput = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type CustomFields = {\n  __typename?: 'CustomFields';\n  Address: Array<CustomFieldConfig>;\n  Administrator: Array<CustomFieldConfig>;\n  Asset: Array<CustomFieldConfig>;\n  Channel: Array<CustomFieldConfig>;\n  Collection: Array<CustomFieldConfig>;\n  Customer: Array<CustomFieldConfig>;\n  Facet: Array<CustomFieldConfig>;\n  FacetValue: Array<CustomFieldConfig>;\n  Fulfillment: Array<CustomFieldConfig>;\n  GlobalSettings: Array<CustomFieldConfig>;\n  Order: Array<CustomFieldConfig>;\n  OrderLine: Array<CustomFieldConfig>;\n  Product: Array<CustomFieldConfig>;\n  ProductOption: Array<CustomFieldConfig>;\n  ProductOptionGroup: Array<CustomFieldConfig>;\n  ProductVariant: Array<CustomFieldConfig>;\n  User: Array<CustomFieldConfig>;\n  ShippingMethod: Array<CustomFieldConfig>;\n};\n\nexport type NetworkStatus = {\n  __typename?: 'NetworkStatus';\n  inFlightRequests: Scalars['Int'];\n};\n\nexport type UserStatus = {\n  __typename?: 'UserStatus';\n  username: Scalars['String'];\n  isLoggedIn: Scalars['Boolean'];\n  loginTime: Scalars['String'];\n  permissions: Array<Permission>;\n  activeChannelId?: Maybe<Scalars['ID']>;\n  channels: Array<CurrentUserChannel>;\n};\n\nexport type UiState = {\n  __typename?: 'UiState';\n  language: LanguageCode;\n  contentLanguage: LanguageCode;\n  theme: Scalars['String'];\n};\n\nexport type CurrentUserChannelInput = {\n  id: Scalars['ID'];\n  token: Scalars['String'];\n  code: Scalars['String'];\n  permissions: Array<Permission>;\n};\n\nexport type UserStatusInput = {\n  username: Scalars['String'];\n  loginTime: Scalars['String'];\n  activeChannelId: Scalars['ID'];\n  channels: Array<CurrentUserChannelInput>;\n};\n\nexport type RoleFragment = (\n  { __typename?: 'Role' }\n  & Pick<Role, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'description' | 'permissions'>\n  & { channels: Array<(\n    { __typename?: 'Channel' }\n    & Pick<Channel, 'id' | 'code' | 'token'>\n  )> }\n);\n\nexport type AdministratorFragment = (\n  { __typename?: 'Administrator' }\n  & Pick<Administrator, 'id' | 'createdAt' | 'updatedAt' | 'firstName' | 'lastName' | 'emailAddress'>\n  & { user: (\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'identifier' | 'lastLogin'>\n    & { roles: Array<(\n      { __typename?: 'Role' }\n      & RoleFragment\n    )> }\n  ) }\n);\n\nexport type GetAdministratorsQueryVariables = Exact<{\n  options?: Maybe<AdministratorListOptions>;\n}>;\n\n\nexport type GetAdministratorsQuery = { administrators: (\n    { __typename?: 'AdministratorList' }\n    & Pick<AdministratorList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Administrator' }\n      & AdministratorFragment\n    )> }\n  ) };\n\nexport type GetActiveAdministratorQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetActiveAdministratorQuery = { activeAdministrator?: Maybe<(\n    { __typename?: 'Administrator' }\n    & AdministratorFragment\n  )> };\n\nexport type GetAdministratorQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetAdministratorQuery = { administrator?: Maybe<(\n    { __typename?: 'Administrator' }\n    & AdministratorFragment\n  )> };\n\nexport type CreateAdministratorMutationVariables = Exact<{\n  input: CreateAdministratorInput;\n}>;\n\n\nexport type CreateAdministratorMutation = { createAdministrator: (\n    { __typename?: 'Administrator' }\n    & AdministratorFragment\n  ) };\n\nexport type UpdateAdministratorMutationVariables = Exact<{\n  input: UpdateAdministratorInput;\n}>;\n\n\nexport type UpdateAdministratorMutation = { updateAdministrator: (\n    { __typename?: 'Administrator' }\n    & AdministratorFragment\n  ) };\n\nexport type UpdateActiveAdministratorMutationVariables = Exact<{\n  input: UpdateActiveAdministratorInput;\n}>;\n\n\nexport type UpdateActiveAdministratorMutation = { updateActiveAdministrator: (\n    { __typename?: 'Administrator' }\n    & AdministratorFragment\n  ) };\n\nexport type DeleteAdministratorMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteAdministratorMutation = { deleteAdministrator: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type GetRolesQueryVariables = Exact<{\n  options?: Maybe<RoleListOptions>;\n}>;\n\n\nexport type GetRolesQuery = { roles: (\n    { __typename?: 'RoleList' }\n    & Pick<RoleList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Role' }\n      & RoleFragment\n    )> }\n  ) };\n\nexport type GetRoleQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetRoleQuery = { role?: Maybe<(\n    { __typename?: 'Role' }\n    & RoleFragment\n  )> };\n\nexport type CreateRoleMutationVariables = Exact<{\n  input: CreateRoleInput;\n}>;\n\n\nexport type CreateRoleMutation = { createRole: (\n    { __typename?: 'Role' }\n    & RoleFragment\n  ) };\n\nexport type UpdateRoleMutationVariables = Exact<{\n  input: UpdateRoleInput;\n}>;\n\n\nexport type UpdateRoleMutation = { updateRole: (\n    { __typename?: 'Role' }\n    & RoleFragment\n  ) };\n\nexport type DeleteRoleMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteRoleMutation = { deleteRole: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type AssignRoleToAdministratorMutationVariables = Exact<{\n  administratorId: Scalars['ID'];\n  roleId: Scalars['ID'];\n}>;\n\n\nexport type AssignRoleToAdministratorMutation = { assignRoleToAdministrator: (\n    { __typename?: 'Administrator' }\n    & AdministratorFragment\n  ) };\n\nexport type CurrentUserFragment = (\n  { __typename?: 'CurrentUser' }\n  & Pick<CurrentUser, 'id' | 'identifier'>\n  & { channels: Array<(\n    { __typename?: 'CurrentUserChannel' }\n    & Pick<CurrentUserChannel, 'id' | 'code' | 'token' | 'permissions'>\n  )> }\n);\n\nexport type AttemptLoginMutationVariables = Exact<{\n  username: Scalars['String'];\n  password: Scalars['String'];\n  rememberMe: Scalars['Boolean'];\n}>;\n\n\nexport type AttemptLoginMutation = { login: (\n    { __typename?: 'CurrentUser' }\n    & CurrentUserFragment\n  ) | (\n    { __typename?: 'InvalidCredentialsError' }\n    & ErrorResult_InvalidCredentialsError_Fragment\n  ) | (\n    { __typename?: 'NativeAuthStrategyError' }\n    & ErrorResult_NativeAuthStrategyError_Fragment\n  ) };\n\nexport type LogOutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogOutMutation = { logout: (\n    { __typename?: 'Success' }\n    & Pick<Success, 'success'>\n  ) };\n\nexport type GetCurrentUserQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetCurrentUserQuery = { me?: Maybe<(\n    { __typename?: 'CurrentUser' }\n    & CurrentUserFragment\n  )> };\n\nexport type RequestStartedMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type RequestStartedMutation = Pick<Mutation, 'requestStarted'>;\n\nexport type RequestCompletedMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type RequestCompletedMutation = Pick<Mutation, 'requestCompleted'>;\n\nexport type UserStatusFragment = (\n  { __typename?: 'UserStatus' }\n  & Pick<UserStatus, 'username' | 'isLoggedIn' | 'loginTime' | 'activeChannelId' | 'permissions'>\n  & { channels: Array<(\n    { __typename?: 'CurrentUserChannel' }\n    & Pick<CurrentUserChannel, 'id' | 'code' | 'token' | 'permissions'>\n  )> }\n);\n\nexport type SetAsLoggedInMutationVariables = Exact<{\n  input: UserStatusInput;\n}>;\n\n\nexport type SetAsLoggedInMutation = { setAsLoggedIn: (\n    { __typename?: 'UserStatus' }\n    & UserStatusFragment\n  ) };\n\nexport type SetAsLoggedOutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type SetAsLoggedOutMutation = { setAsLoggedOut: (\n    { __typename?: 'UserStatus' }\n    & UserStatusFragment\n  ) };\n\nexport type SetUiLanguageMutationVariables = Exact<{\n  languageCode: LanguageCode;\n}>;\n\n\nexport type SetUiLanguageMutation = Pick<Mutation, 'setUiLanguage'>;\n\nexport type SetContentLanguageMutationVariables = Exact<{\n  languageCode: LanguageCode;\n}>;\n\n\nexport type SetContentLanguageMutation = Pick<Mutation, 'setContentLanguage'>;\n\nexport type SetUiThemeMutationVariables = Exact<{\n  theme: Scalars['String'];\n}>;\n\n\nexport type SetUiThemeMutation = Pick<Mutation, 'setUiTheme'>;\n\nexport type GetNetworkStatusQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetNetworkStatusQuery = { networkStatus: (\n    { __typename?: 'NetworkStatus' }\n    & Pick<NetworkStatus, 'inFlightRequests'>\n  ) };\n\nexport type GetUserStatusQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetUserStatusQuery = { userStatus: (\n    { __typename?: 'UserStatus' }\n    & UserStatusFragment\n  ) };\n\nexport type GetUiStateQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetUiStateQuery = { uiState: (\n    { __typename?: 'UiState' }\n    & Pick<UiState, 'language' | 'contentLanguage' | 'theme'>\n  ) };\n\nexport type GetClientStateQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetClientStateQuery = { networkStatus: (\n    { __typename?: 'NetworkStatus' }\n    & Pick<NetworkStatus, 'inFlightRequests'>\n  ), userStatus: (\n    { __typename?: 'UserStatus' }\n    & UserStatusFragment\n  ), uiState: (\n    { __typename?: 'UiState' }\n    & Pick<UiState, 'language' | 'contentLanguage' | 'theme'>\n  ) };\n\nexport type SetActiveChannelMutationVariables = Exact<{\n  channelId: Scalars['ID'];\n}>;\n\n\nexport type SetActiveChannelMutation = { setActiveChannel: (\n    { __typename?: 'UserStatus' }\n    & UserStatusFragment\n  ) };\n\nexport type UpdateUserChannelsMutationVariables = Exact<{\n  channels: Array<CurrentUserChannelInput> | CurrentUserChannelInput;\n}>;\n\n\nexport type UpdateUserChannelsMutation = { updateUserChannels: (\n    { __typename?: 'UserStatus' }\n    & UserStatusFragment\n  ) };\n\nexport type GetCollectionFiltersQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetCollectionFiltersQuery = { collectionFilters: Array<(\n    { __typename?: 'ConfigurableOperationDefinition' }\n    & ConfigurableOperationDefFragment\n  )> };\n\nexport type CollectionFragment = (\n  { __typename?: 'Collection' }\n  & Pick<Collection, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'slug' | 'description' | 'isPrivate' | 'languageCode'>\n  & { featuredAsset?: Maybe<(\n    { __typename?: 'Asset' }\n    & AssetFragment\n  )>, assets: Array<(\n    { __typename?: 'Asset' }\n    & AssetFragment\n  )>, filters: Array<(\n    { __typename?: 'ConfigurableOperation' }\n    & ConfigurableOperationFragment\n  )>, translations: Array<(\n    { __typename?: 'CollectionTranslation' }\n    & Pick<CollectionTranslation, 'id' | 'languageCode' | 'name' | 'slug' | 'description'>\n  )>, parent?: Maybe<(\n    { __typename?: 'Collection' }\n    & Pick<Collection, 'id' | 'name'>\n  )>, children?: Maybe<Array<(\n    { __typename?: 'Collection' }\n    & Pick<Collection, 'id' | 'name'>\n  )>> }\n);\n\nexport type GetCollectionListQueryVariables = Exact<{\n  options?: Maybe<CollectionListOptions>;\n}>;\n\n\nexport type GetCollectionListQuery = { collections: (\n    { __typename?: 'CollectionList' }\n    & Pick<CollectionList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Collection' }\n      & Pick<Collection, 'id' | 'name' | 'slug' | 'description' | 'isPrivate'>\n      & { featuredAsset?: Maybe<(\n        { __typename?: 'Asset' }\n        & AssetFragment\n      )>, parent?: Maybe<(\n        { __typename?: 'Collection' }\n        & Pick<Collection, 'id'>\n      )> }\n    )> }\n  ) };\n\nexport type GetCollectionQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCollectionQuery = { collection?: Maybe<(\n    { __typename?: 'Collection' }\n    & CollectionFragment\n  )> };\n\nexport type CreateCollectionMutationVariables = Exact<{\n  input: CreateCollectionInput;\n}>;\n\n\nexport type CreateCollectionMutation = { createCollection: (\n    { __typename?: 'Collection' }\n    & CollectionFragment\n  ) };\n\nexport type UpdateCollectionMutationVariables = Exact<{\n  input: UpdateCollectionInput;\n}>;\n\n\nexport type UpdateCollectionMutation = { updateCollection: (\n    { __typename?: 'Collection' }\n    & CollectionFragment\n  ) };\n\nexport type MoveCollectionMutationVariables = Exact<{\n  input: MoveCollectionInput;\n}>;\n\n\nexport type MoveCollectionMutation = { moveCollection: (\n    { __typename?: 'Collection' }\n    & CollectionFragment\n  ) };\n\nexport type DeleteCollectionMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteCollectionMutation = { deleteCollection: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type GetCollectionContentsQueryVariables = Exact<{\n  id: Scalars['ID'];\n  options?: Maybe<ProductVariantListOptions>;\n}>;\n\n\nexport type GetCollectionContentsQuery = { collection?: Maybe<(\n    { __typename?: 'Collection' }\n    & Pick<Collection, 'id' | 'name'>\n    & { productVariants: (\n      { __typename?: 'ProductVariantList' }\n      & Pick<ProductVariantList, 'totalItems'>\n      & { items: Array<(\n        { __typename?: 'ProductVariant' }\n        & Pick<ProductVariant, 'id' | 'productId' | 'name'>\n      )> }\n    ) }\n  )> };\n\nexport type AddressFragment = (\n  { __typename?: 'Address' }\n  & Pick<Address, 'id' | 'createdAt' | 'updatedAt' | 'fullName' | 'company' | 'streetLine1' | 'streetLine2' | 'city' | 'province' | 'postalCode' | 'phoneNumber' | 'defaultShippingAddress' | 'defaultBillingAddress'>\n  & { country: (\n    { __typename?: 'Country' }\n    & Pick<Country, 'id' | 'code' | 'name'>\n  ) }\n);\n\nexport type CustomerFragment = (\n  { __typename?: 'Customer' }\n  & Pick<Customer, 'id' | 'createdAt' | 'updatedAt' | 'title' | 'firstName' | 'lastName' | 'phoneNumber' | 'emailAddress'>\n  & { user?: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'identifier' | 'verified' | 'lastLogin'>\n  )>, addresses?: Maybe<Array<(\n    { __typename?: 'Address' }\n    & AddressFragment\n  )>> }\n);\n\nexport type GetCustomerListQueryVariables = Exact<{\n  options?: Maybe<CustomerListOptions>;\n}>;\n\n\nexport type GetCustomerListQuery = { customers: (\n    { __typename?: 'CustomerList' }\n    & Pick<CustomerList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Customer' }\n      & Pick<Customer, 'id' | 'createdAt' | 'updatedAt' | 'title' | 'firstName' | 'lastName' | 'emailAddress'>\n      & { user?: Maybe<(\n        { __typename?: 'User' }\n        & Pick<User, 'id' | 'verified'>\n      )> }\n    )> }\n  ) };\n\nexport type GetCustomerQueryVariables = Exact<{\n  id: Scalars['ID'];\n  orderListOptions?: Maybe<OrderListOptions>;\n}>;\n\n\nexport type GetCustomerQuery = { customer?: Maybe<(\n    { __typename?: 'Customer' }\n    & { groups: Array<(\n      { __typename?: 'CustomerGroup' }\n      & Pick<CustomerGroup, 'id' | 'name'>\n    )>, orders: (\n      { __typename?: 'OrderList' }\n      & Pick<OrderList, 'totalItems'>\n      & { items: Array<(\n        { __typename?: 'Order' }\n        & Pick<Order, 'id' | 'code' | 'state' | 'total' | 'currencyCode' | 'updatedAt'>\n      )> }\n    ) }\n    & CustomerFragment\n  )> };\n\nexport type CreateCustomerMutationVariables = Exact<{\n  input: CreateCustomerInput;\n  password?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CreateCustomerMutation = { createCustomer: (\n    { __typename?: 'Customer' }\n    & CustomerFragment\n  ) | (\n    { __typename?: 'EmailAddressConflictError' }\n    & ErrorResult_EmailAddressConflictError_Fragment\n  ) };\n\nexport type UpdateCustomerMutationVariables = Exact<{\n  input: UpdateCustomerInput;\n}>;\n\n\nexport type UpdateCustomerMutation = { updateCustomer: (\n    { __typename?: 'Customer' }\n    & CustomerFragment\n  ) | (\n    { __typename?: 'EmailAddressConflictError' }\n    & ErrorResult_EmailAddressConflictError_Fragment\n  ) };\n\nexport type DeleteCustomerMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteCustomerMutation = { deleteCustomer: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type CreateCustomerAddressMutationVariables = Exact<{\n  customerId: Scalars['ID'];\n  input: CreateAddressInput;\n}>;\n\n\nexport type CreateCustomerAddressMutation = { createCustomerAddress: (\n    { __typename?: 'Address' }\n    & AddressFragment\n  ) };\n\nexport type UpdateCustomerAddressMutationVariables = Exact<{\n  input: UpdateAddressInput;\n}>;\n\n\nexport type UpdateCustomerAddressMutation = { updateCustomerAddress: (\n    { __typename?: 'Address' }\n    & AddressFragment\n  ) };\n\nexport type CreateCustomerGroupMutationVariables = Exact<{\n  input: CreateCustomerGroupInput;\n}>;\n\n\nexport type CreateCustomerGroupMutation = { createCustomerGroup: (\n    { __typename?: 'CustomerGroup' }\n    & Pick<CustomerGroup, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n  ) };\n\nexport type UpdateCustomerGroupMutationVariables = Exact<{\n  input: UpdateCustomerGroupInput;\n}>;\n\n\nexport type UpdateCustomerGroupMutation = { updateCustomerGroup: (\n    { __typename?: 'CustomerGroup' }\n    & Pick<CustomerGroup, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n  ) };\n\nexport type DeleteCustomerGroupMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteCustomerGroupMutation = { deleteCustomerGroup: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type GetCustomerGroupsQueryVariables = Exact<{\n  options?: Maybe<CustomerGroupListOptions>;\n}>;\n\n\nexport type GetCustomerGroupsQuery = { customerGroups: (\n    { __typename?: 'CustomerGroupList' }\n    & Pick<CustomerGroupList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'CustomerGroup' }\n      & Pick<CustomerGroup, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n    )> }\n  ) };\n\nexport type GetCustomerGroupWithCustomersQueryVariables = Exact<{\n  id: Scalars['ID'];\n  options?: Maybe<CustomerListOptions>;\n}>;\n\n\nexport type GetCustomerGroupWithCustomersQuery = { customerGroup?: Maybe<(\n    { __typename?: 'CustomerGroup' }\n    & Pick<CustomerGroup, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n    & { customers: (\n      { __typename?: 'CustomerList' }\n      & Pick<CustomerList, 'totalItems'>\n      & { items: Array<(\n        { __typename?: 'Customer' }\n        & Pick<Customer, 'id' | 'createdAt' | 'updatedAt' | 'emailAddress' | 'firstName' | 'lastName'>\n      )> }\n    ) }\n  )> };\n\nexport type AddCustomersToGroupMutationVariables = Exact<{\n  groupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']> | Scalars['ID'];\n}>;\n\n\nexport type AddCustomersToGroupMutation = { addCustomersToGroup: (\n    { __typename?: 'CustomerGroup' }\n    & Pick<CustomerGroup, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n  ) };\n\nexport type RemoveCustomersFromGroupMutationVariables = Exact<{\n  groupId: Scalars['ID'];\n  customerIds: Array<Scalars['ID']> | Scalars['ID'];\n}>;\n\n\nexport type RemoveCustomersFromGroupMutation = { removeCustomersFromGroup: (\n    { __typename?: 'CustomerGroup' }\n    & Pick<CustomerGroup, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n  ) };\n\nexport type GetCustomerHistoryQueryVariables = Exact<{\n  id: Scalars['ID'];\n  options?: Maybe<HistoryEntryListOptions>;\n}>;\n\n\nexport type GetCustomerHistoryQuery = { customer?: Maybe<(\n    { __typename?: 'Customer' }\n    & Pick<Customer, 'id'>\n    & { history: (\n      { __typename?: 'HistoryEntryList' }\n      & Pick<HistoryEntryList, 'totalItems'>\n      & { items: Array<(\n        { __typename?: 'HistoryEntry' }\n        & Pick<HistoryEntry, 'id' | 'type' | 'createdAt' | 'isPublic' | 'data'>\n        & { administrator?: Maybe<(\n          { __typename?: 'Administrator' }\n          & Pick<Administrator, 'id' | 'firstName' | 'lastName'>\n        )> }\n      )> }\n    ) }\n  )> };\n\nexport type AddNoteToCustomerMutationVariables = Exact<{\n  input: AddNoteToCustomerInput;\n}>;\n\n\nexport type AddNoteToCustomerMutation = { addNoteToCustomer: (\n    { __typename?: 'Customer' }\n    & Pick<Customer, 'id'>\n  ) };\n\nexport type UpdateCustomerNoteMutationVariables = Exact<{\n  input: UpdateCustomerNoteInput;\n}>;\n\n\nexport type UpdateCustomerNoteMutation = { updateCustomerNote: (\n    { __typename?: 'HistoryEntry' }\n    & Pick<HistoryEntry, 'id' | 'data' | 'isPublic'>\n  ) };\n\nexport type DeleteCustomerNoteMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteCustomerNoteMutation = { deleteCustomerNote: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type FacetValueFragment = (\n  { __typename?: 'FacetValue' }\n  & Pick<FacetValue, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'code' | 'name'>\n  & { translations: Array<(\n    { __typename?: 'FacetValueTranslation' }\n    & Pick<FacetValueTranslation, 'id' | 'languageCode' | 'name'>\n  )>, facet: (\n    { __typename?: 'Facet' }\n    & Pick<Facet, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n  ) }\n);\n\nexport type FacetWithValuesFragment = (\n  { __typename?: 'Facet' }\n  & Pick<Facet, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'isPrivate' | 'code' | 'name'>\n  & { translations: Array<(\n    { __typename?: 'FacetTranslation' }\n    & Pick<FacetTranslation, 'id' | 'languageCode' | 'name'>\n  )>, values: Array<(\n    { __typename?: 'FacetValue' }\n    & FacetValueFragment\n  )> }\n);\n\nexport type CreateFacetMutationVariables = Exact<{\n  input: CreateFacetInput;\n}>;\n\n\nexport type CreateFacetMutation = { createFacet: (\n    { __typename?: 'Facet' }\n    & FacetWithValuesFragment\n  ) };\n\nexport type UpdateFacetMutationVariables = Exact<{\n  input: UpdateFacetInput;\n}>;\n\n\nexport type UpdateFacetMutation = { updateFacet: (\n    { __typename?: 'Facet' }\n    & FacetWithValuesFragment\n  ) };\n\nexport type DeleteFacetMutationVariables = Exact<{\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n}>;\n\n\nexport type DeleteFacetMutation = { deleteFacet: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type CreateFacetValuesMutationVariables = Exact<{\n  input: Array<CreateFacetValueInput> | CreateFacetValueInput;\n}>;\n\n\nexport type CreateFacetValuesMutation = { createFacetValues: Array<(\n    { __typename?: 'FacetValue' }\n    & FacetValueFragment\n  )> };\n\nexport type UpdateFacetValuesMutationVariables = Exact<{\n  input: Array<UpdateFacetValueInput> | UpdateFacetValueInput;\n}>;\n\n\nexport type UpdateFacetValuesMutation = { updateFacetValues: Array<(\n    { __typename?: 'FacetValue' }\n    & FacetValueFragment\n  )> };\n\nexport type DeleteFacetValuesMutationVariables = Exact<{\n  ids: Array<Scalars['ID']> | Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n}>;\n\n\nexport type DeleteFacetValuesMutation = { deleteFacetValues: Array<(\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  )> };\n\nexport type GetFacetListQueryVariables = Exact<{\n  options?: Maybe<FacetListOptions>;\n}>;\n\n\nexport type GetFacetListQuery = { facets: (\n    { __typename?: 'FacetList' }\n    & Pick<FacetList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Facet' }\n      & FacetWithValuesFragment\n    )> }\n  ) };\n\nexport type GetFacetWithValuesQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetFacetWithValuesQuery = { facet?: Maybe<(\n    { __typename?: 'Facet' }\n    & FacetWithValuesFragment\n  )> };\n\nexport type DiscountFragment = (\n  { __typename?: 'Discount' }\n  & Pick<Discount, 'adjustmentSource' | 'amount' | 'amountWithTax' | 'description' | 'type'>\n);\n\nexport type RefundFragment = (\n  { __typename?: 'Refund' }\n  & Pick<Refund, 'id' | 'state' | 'items' | 'shipping' | 'adjustment' | 'transactionId' | 'paymentId'>\n);\n\nexport type OrderAddressFragment = (\n  { __typename?: 'OrderAddress' }\n  & Pick<OrderAddress, 'fullName' | 'company' | 'streetLine1' | 'streetLine2' | 'city' | 'province' | 'postalCode' | 'country' | 'countryCode' | 'phoneNumber'>\n);\n\nexport type OrderFragment = (\n  { __typename?: 'Order' }\n  & Pick<Order, 'id' | 'createdAt' | 'updatedAt' | 'orderPlacedAt' | 'code' | 'state' | 'nextStates' | 'total' | 'currencyCode'>\n  & { customer?: Maybe<(\n    { __typename?: 'Customer' }\n    & Pick<Customer, 'id' | 'firstName' | 'lastName'>\n  )>, shippingLines: Array<(\n    { __typename?: 'ShippingLine' }\n    & { shippingMethod: (\n      { __typename?: 'ShippingMethod' }\n      & Pick<ShippingMethod, 'name'>\n    ) }\n  )> }\n);\n\nexport type FulfillmentFragment = (\n  { __typename?: 'Fulfillment' }\n  & Pick<Fulfillment, 'id' | 'state' | 'nextStates' | 'createdAt' | 'updatedAt' | 'method' | 'trackingCode'>\n  & { orderItems: Array<(\n    { __typename?: 'OrderItem' }\n    & Pick<OrderItem, 'id'>\n  )> }\n);\n\nexport type OrderLineFragment = (\n  { __typename?: 'OrderLine' }\n  & Pick<OrderLine, 'id' | 'unitPrice' | 'unitPriceWithTax' | 'proratedUnitPrice' | 'proratedUnitPriceWithTax' | 'quantity' | 'linePrice' | 'lineTax' | 'linePriceWithTax' | 'discountedLinePrice' | 'discountedLinePriceWithTax'>\n  & { featuredAsset?: Maybe<(\n    { __typename?: 'Asset' }\n    & Pick<Asset, 'preview'>\n  )>, productVariant: (\n    { __typename?: 'ProductVariant' }\n    & Pick<ProductVariant, 'id' | 'name' | 'sku' | 'trackInventory' | 'stockOnHand'>\n  ), discounts: Array<(\n    { __typename?: 'Discount' }\n    & DiscountFragment\n  )>, items: Array<(\n    { __typename?: 'OrderItem' }\n    & Pick<OrderItem, 'id' | 'unitPrice' | 'unitPriceWithTax' | 'taxRate' | 'refundId' | 'cancelled'>\n    & { fulfillment?: Maybe<(\n      { __typename?: 'Fulfillment' }\n      & FulfillmentFragment\n    )> }\n  )> }\n);\n\nexport type OrderDetailFragment = (\n  { __typename?: 'Order' }\n  & Pick<Order, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'state' | 'nextStates' | 'active' | 'subTotal' | 'subTotalWithTax' | 'total' | 'totalWithTax' | 'currencyCode' | 'shipping' | 'shippingWithTax'>\n  & { customer?: Maybe<(\n    { __typename?: 'Customer' }\n    & Pick<Customer, 'id' | 'firstName' | 'lastName'>\n  )>, lines: Array<(\n    { __typename?: 'OrderLine' }\n    & OrderLineFragment\n  )>, surcharges: Array<(\n    { __typename?: 'Surcharge' }\n    & Pick<Surcharge, 'id' | 'sku' | 'description' | 'price' | 'priceWithTax' | 'taxRate'>\n  )>, discounts: Array<(\n    { __typename?: 'Discount' }\n    & DiscountFragment\n  )>, promotions: Array<(\n    { __typename?: 'Promotion' }\n    & Pick<Promotion, 'id' | 'couponCode'>\n  )>, shippingLines: Array<(\n    { __typename?: 'ShippingLine' }\n    & { shippingMethod: (\n      { __typename?: 'ShippingMethod' }\n      & Pick<ShippingMethod, 'id' | 'code' | 'name' | 'fulfillmentHandlerCode' | 'description'>\n    ) }\n  )>, taxSummary: Array<(\n    { __typename?: 'OrderTaxSummary' }\n    & Pick<OrderTaxSummary, 'description' | 'taxBase' | 'taxRate' | 'taxTotal'>\n  )>, shippingAddress?: Maybe<(\n    { __typename?: 'OrderAddress' }\n    & OrderAddressFragment\n  )>, billingAddress?: Maybe<(\n    { __typename?: 'OrderAddress' }\n    & OrderAddressFragment\n  )>, payments?: Maybe<Array<(\n    { __typename?: 'Payment' }\n    & Pick<Payment, 'id' | 'createdAt' | 'transactionId' | 'amount' | 'method' | 'state' | 'nextStates' | 'errorMessage' | 'metadata'>\n    & { refunds: Array<(\n      { __typename?: 'Refund' }\n      & Pick<Refund, 'id' | 'createdAt' | 'state' | 'items' | 'adjustment' | 'total' | 'paymentId' | 'reason' | 'transactionId' | 'method' | 'metadata'>\n      & { orderItems: Array<(\n        { __typename?: 'OrderItem' }\n        & Pick<OrderItem, 'id'>\n      )> }\n    )> }\n  )>>, fulfillments?: Maybe<Array<(\n    { __typename?: 'Fulfillment' }\n    & FulfillmentFragment\n  )>>, modifications: Array<(\n    { __typename?: 'OrderModification' }\n    & Pick<OrderModification, 'id' | 'createdAt' | 'isSettled' | 'priceChange' | 'note'>\n    & { payment?: Maybe<(\n      { __typename?: 'Payment' }\n      & Pick<Payment, 'id' | 'amount'>\n    )>, orderItems?: Maybe<Array<(\n      { __typename?: 'OrderItem' }\n      & Pick<OrderItem, 'id'>\n    )>>, refund?: Maybe<(\n      { __typename?: 'Refund' }\n      & Pick<Refund, 'id' | 'paymentId' | 'total'>\n    )>, surcharges?: Maybe<Array<(\n      { __typename?: 'Surcharge' }\n      & Pick<Surcharge, 'id'>\n    )>> }\n  )> }\n);\n\nexport type GetOrderListQueryVariables = Exact<{\n  options?: Maybe<OrderListOptions>;\n}>;\n\n\nexport type GetOrderListQuery = { orders: (\n    { __typename?: 'OrderList' }\n    & Pick<OrderList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Order' }\n      & OrderFragment\n    )> }\n  ) };\n\nexport type GetOrderQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetOrderQuery = { order?: Maybe<(\n    { __typename?: 'Order' }\n    & OrderDetailFragment\n  )> };\n\nexport type SettlePaymentMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type SettlePaymentMutation = { settlePayment: (\n    { __typename?: 'Payment' }\n    & Pick<Payment, 'id' | 'transactionId' | 'amount' | 'method' | 'state' | 'metadata'>\n  ) | (\n    { __typename?: 'SettlePaymentError' }\n    & Pick<SettlePaymentError, 'paymentErrorMessage'>\n    & ErrorResult_SettlePaymentError_Fragment\n  ) | (\n    { __typename?: 'PaymentStateTransitionError' }\n    & Pick<PaymentStateTransitionError, 'transitionError'>\n    & ErrorResult_PaymentStateTransitionError_Fragment\n  ) | (\n    { __typename?: 'OrderStateTransitionError' }\n    & Pick<OrderStateTransitionError, 'transitionError'>\n    & ErrorResult_OrderStateTransitionError_Fragment\n  ) };\n\nexport type TransitionPaymentToStateMutationVariables = Exact<{\n  id: Scalars['ID'];\n  state: Scalars['String'];\n}>;\n\n\nexport type TransitionPaymentToStateMutation = { transitionPaymentToState: (\n    { __typename?: 'Payment' }\n    & Pick<Payment, 'id' | 'transactionId' | 'amount' | 'method' | 'state' | 'metadata'>\n  ) | (\n    { __typename?: 'PaymentStateTransitionError' }\n    & Pick<PaymentStateTransitionError, 'transitionError'>\n    & ErrorResult_PaymentStateTransitionError_Fragment\n  ) };\n\nexport type CreateFulfillmentMutationVariables = Exact<{\n  input: FulfillOrderInput;\n}>;\n\n\nexport type CreateFulfillmentMutation = { addFulfillmentToOrder: (\n    { __typename?: 'Fulfillment' }\n    & FulfillmentFragment\n  ) | (\n    { __typename?: 'EmptyOrderLineSelectionError' }\n    & ErrorResult_EmptyOrderLineSelectionError_Fragment\n  ) | (\n    { __typename?: 'ItemsAlreadyFulfilledError' }\n    & ErrorResult_ItemsAlreadyFulfilledError_Fragment\n  ) | (\n    { __typename?: 'InsufficientStockOnHandError' }\n    & ErrorResult_InsufficientStockOnHandError_Fragment\n  ) | (\n    { __typename?: 'InvalidFulfillmentHandlerError' }\n    & ErrorResult_InvalidFulfillmentHandlerError_Fragment\n  ) | (\n    { __typename?: 'FulfillmentStateTransitionError' }\n    & Pick<FulfillmentStateTransitionError, 'errorCode' | 'message' | 'transitionError'>\n    & ErrorResult_FulfillmentStateTransitionError_Fragment\n  ) | (\n    { __typename?: 'CreateFulfillmentError' }\n    & Pick<CreateFulfillmentError, 'errorCode' | 'message' | 'fulfillmentHandlerError'>\n    & ErrorResult_CreateFulfillmentError_Fragment\n  ) };\n\nexport type CancelOrderMutationVariables = Exact<{\n  input: CancelOrderInput;\n}>;\n\n\nexport type CancelOrderMutation = { cancelOrder: (\n    { __typename?: 'Order' }\n    & OrderDetailFragment\n  ) | (\n    { __typename?: 'EmptyOrderLineSelectionError' }\n    & ErrorResult_EmptyOrderLineSelectionError_Fragment\n  ) | (\n    { __typename?: 'QuantityTooGreatError' }\n    & ErrorResult_QuantityTooGreatError_Fragment\n  ) | (\n    { __typename?: 'MultipleOrderError' }\n    & ErrorResult_MultipleOrderError_Fragment\n  ) | (\n    { __typename?: 'CancelActiveOrderError' }\n    & ErrorResult_CancelActiveOrderError_Fragment\n  ) | (\n    { __typename?: 'OrderStateTransitionError' }\n    & ErrorResult_OrderStateTransitionError_Fragment\n  ) };\n\nexport type RefundOrderMutationVariables = Exact<{\n  input: RefundOrderInput;\n}>;\n\n\nexport type RefundOrderMutation = { refundOrder: (\n    { __typename?: 'Refund' }\n    & RefundFragment\n  ) | (\n    { __typename?: 'QuantityTooGreatError' }\n    & ErrorResult_QuantityTooGreatError_Fragment\n  ) | (\n    { __typename?: 'NothingToRefundError' }\n    & ErrorResult_NothingToRefundError_Fragment\n  ) | (\n    { __typename?: 'OrderStateTransitionError' }\n    & ErrorResult_OrderStateTransitionError_Fragment\n  ) | (\n    { __typename?: 'MultipleOrderError' }\n    & ErrorResult_MultipleOrderError_Fragment\n  ) | (\n    { __typename?: 'PaymentOrderMismatchError' }\n    & ErrorResult_PaymentOrderMismatchError_Fragment\n  ) | (\n    { __typename?: 'RefundOrderStateError' }\n    & ErrorResult_RefundOrderStateError_Fragment\n  ) | (\n    { __typename?: 'AlreadyRefundedError' }\n    & ErrorResult_AlreadyRefundedError_Fragment\n  ) | (\n    { __typename?: 'RefundStateTransitionError' }\n    & ErrorResult_RefundStateTransitionError_Fragment\n  ) };\n\nexport type SettleRefundMutationVariables = Exact<{\n  input: SettleRefundInput;\n}>;\n\n\nexport type SettleRefundMutation = { settleRefund: (\n    { __typename?: 'Refund' }\n    & RefundFragment\n  ) | (\n    { __typename?: 'RefundStateTransitionError' }\n    & ErrorResult_RefundStateTransitionError_Fragment\n  ) };\n\nexport type GetOrderHistoryQueryVariables = Exact<{\n  id: Scalars['ID'];\n  options?: Maybe<HistoryEntryListOptions>;\n}>;\n\n\nexport type GetOrderHistoryQuery = { order?: Maybe<(\n    { __typename?: 'Order' }\n    & Pick<Order, 'id'>\n    & { history: (\n      { __typename?: 'HistoryEntryList' }\n      & Pick<HistoryEntryList, 'totalItems'>\n      & { items: Array<(\n        { __typename?: 'HistoryEntry' }\n        & Pick<HistoryEntry, 'id' | 'type' | 'createdAt' | 'isPublic' | 'data'>\n        & { administrator?: Maybe<(\n          { __typename?: 'Administrator' }\n          & Pick<Administrator, 'id' | 'firstName' | 'lastName'>\n        )> }\n      )> }\n    ) }\n  )> };\n\nexport type AddNoteToOrderMutationVariables = Exact<{\n  input: AddNoteToOrderInput;\n}>;\n\n\nexport type AddNoteToOrderMutation = { addNoteToOrder: (\n    { __typename?: 'Order' }\n    & Pick<Order, 'id'>\n  ) };\n\nexport type UpdateOrderNoteMutationVariables = Exact<{\n  input: UpdateOrderNoteInput;\n}>;\n\n\nexport type UpdateOrderNoteMutation = { updateOrderNote: (\n    { __typename?: 'HistoryEntry' }\n    & Pick<HistoryEntry, 'id' | 'data' | 'isPublic'>\n  ) };\n\nexport type DeleteOrderNoteMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteOrderNoteMutation = { deleteOrderNote: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type TransitionOrderToStateMutationVariables = Exact<{\n  id: Scalars['ID'];\n  state: Scalars['String'];\n}>;\n\n\nexport type TransitionOrderToStateMutation = { transitionOrderToState?: Maybe<(\n    { __typename?: 'Order' }\n    & OrderFragment\n  ) | (\n    { __typename?: 'OrderStateTransitionError' }\n    & Pick<OrderStateTransitionError, 'transitionError'>\n    & ErrorResult_OrderStateTransitionError_Fragment\n  )> };\n\nexport type UpdateOrderCustomFieldsMutationVariables = Exact<{\n  input: UpdateOrderInput;\n}>;\n\n\nexport type UpdateOrderCustomFieldsMutation = { setOrderCustomFields?: Maybe<(\n    { __typename?: 'Order' }\n    & OrderFragment\n  )> };\n\nexport type TransitionFulfillmentToStateMutationVariables = Exact<{\n  id: Scalars['ID'];\n  state: Scalars['String'];\n}>;\n\n\nexport type TransitionFulfillmentToStateMutation = { transitionFulfillmentToState: (\n    { __typename?: 'Fulfillment' }\n    & FulfillmentFragment\n  ) | (\n    { __typename?: 'FulfillmentStateTransitionError' }\n    & Pick<FulfillmentStateTransitionError, 'transitionError'>\n    & ErrorResult_FulfillmentStateTransitionError_Fragment\n  ) };\n\nexport type GetOrderSummaryQueryVariables = Exact<{\n  start: Scalars['DateTime'];\n  end: Scalars['DateTime'];\n}>;\n\n\nexport type GetOrderSummaryQuery = { orders: (\n    { __typename?: 'OrderList' }\n    & Pick<OrderList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Order' }\n      & Pick<Order, 'id' | 'total' | 'currencyCode'>\n    )> }\n  ) };\n\nexport type ModifyOrderMutationVariables = Exact<{\n  input: ModifyOrderInput;\n}>;\n\n\nexport type ModifyOrderMutation = { modifyOrder: (\n    { __typename?: 'Order' }\n    & OrderDetailFragment\n  ) | (\n    { __typename?: 'NoChangesSpecifiedError' }\n    & ErrorResult_NoChangesSpecifiedError_Fragment\n  ) | (\n    { __typename?: 'OrderModificationStateError' }\n    & ErrorResult_OrderModificationStateError_Fragment\n  ) | (\n    { __typename?: 'PaymentMethodMissingError' }\n    & ErrorResult_PaymentMethodMissingError_Fragment\n  ) | (\n    { __typename?: 'RefundPaymentIdMissingError' }\n    & ErrorResult_RefundPaymentIdMissingError_Fragment\n  ) | (\n    { __typename?: 'OrderLimitError' }\n    & ErrorResult_OrderLimitError_Fragment\n  ) | (\n    { __typename?: 'NegativeQuantityError' }\n    & ErrorResult_NegativeQuantityError_Fragment\n  ) | (\n    { __typename?: 'InsufficientStockError' }\n    & ErrorResult_InsufficientStockError_Fragment\n  ) };\n\nexport type AddManualPaymentMutationVariables = Exact<{\n  input: ManualPaymentInput;\n}>;\n\n\nexport type AddManualPaymentMutation = { addManualPaymentToOrder: (\n    { __typename?: 'Order' }\n    & OrderDetailFragment\n  ) | (\n    { __typename?: 'ManualPaymentStateError' }\n    & ErrorResult_ManualPaymentStateError_Fragment\n  ) };\n\nexport type AssetFragment = (\n  { __typename?: 'Asset' }\n  & Pick<Asset, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'fileSize' | 'mimeType' | 'type' | 'preview' | 'source' | 'width' | 'height'>\n  & { focalPoint?: Maybe<(\n    { __typename?: 'Coordinate' }\n    & Pick<Coordinate, 'x' | 'y'>\n  )> }\n);\n\nexport type TagFragment = (\n  { __typename?: 'Tag' }\n  & Pick<Tag, 'id' | 'value'>\n);\n\nexport type ProductOptionGroupFragment = (\n  { __typename?: 'ProductOptionGroup' }\n  & Pick<ProductOptionGroup, 'id' | 'code' | 'languageCode' | 'name'>\n  & { translations: Array<(\n    { __typename?: 'ProductOptionGroupTranslation' }\n    & Pick<ProductOptionGroupTranslation, 'id' | 'languageCode' | 'name'>\n  )> }\n);\n\nexport type ProductOptionFragment = (\n  { __typename?: 'ProductOption' }\n  & Pick<ProductOption, 'id' | 'code' | 'languageCode' | 'name' | 'groupId'>\n  & { translations: Array<(\n    { __typename?: 'ProductOptionTranslation' }\n    & Pick<ProductOptionTranslation, 'id' | 'languageCode' | 'name'>\n  )> }\n);\n\nexport type ProductVariantFragment = (\n  { __typename?: 'ProductVariant' }\n  & Pick<ProductVariant, 'id' | 'createdAt' | 'updatedAt' | 'enabled' | 'languageCode' | 'name' | 'price' | 'currencyCode' | 'priceWithTax' | 'stockOnHand' | 'stockAllocated' | 'trackInventory' | 'outOfStockThreshold' | 'useGlobalOutOfStockThreshold' | 'sku'>\n  & { taxRateApplied: (\n    { __typename?: 'TaxRate' }\n    & Pick<TaxRate, 'id' | 'name' | 'value'>\n  ), taxCategory: (\n    { __typename?: 'TaxCategory' }\n    & Pick<TaxCategory, 'id' | 'name'>\n  ), options: Array<(\n    { __typename?: 'ProductOption' }\n    & ProductOptionFragment\n  )>, facetValues: Array<(\n    { __typename?: 'FacetValue' }\n    & Pick<FacetValue, 'id' | 'code' | 'name'>\n    & { facet: (\n      { __typename?: 'Facet' }\n      & Pick<Facet, 'id' | 'name'>\n    ) }\n  )>, featuredAsset?: Maybe<(\n    { __typename?: 'Asset' }\n    & AssetFragment\n  )>, assets: Array<(\n    { __typename?: 'Asset' }\n    & AssetFragment\n  )>, translations: Array<(\n    { __typename?: 'ProductVariantTranslation' }\n    & Pick<ProductVariantTranslation, 'id' | 'languageCode' | 'name'>\n  )>, channels: Array<(\n    { __typename?: 'Channel' }\n    & Pick<Channel, 'id' | 'code'>\n  )> }\n);\n\nexport type ProductWithVariantsFragment = (\n  { __typename?: 'Product' }\n  & Pick<Product, 'id' | 'createdAt' | 'updatedAt' | 'enabled' | 'languageCode' | 'name' | 'slug' | 'description'>\n  & { featuredAsset?: Maybe<(\n    { __typename?: 'Asset' }\n    & AssetFragment\n  )>, assets: Array<(\n    { __typename?: 'Asset' }\n    & AssetFragment\n  )>, translations: Array<(\n    { __typename?: 'ProductTranslation' }\n    & Pick<ProductTranslation, 'id' | 'languageCode' | 'name' | 'slug' | 'description'>\n  )>, optionGroups: Array<(\n    { __typename?: 'ProductOptionGroup' }\n    & ProductOptionGroupFragment\n  )>, variants: Array<(\n    { __typename?: 'ProductVariant' }\n    & ProductVariantFragment\n  )>, facetValues: Array<(\n    { __typename?: 'FacetValue' }\n    & Pick<FacetValue, 'id' | 'code' | 'name'>\n    & { facet: (\n      { __typename?: 'Facet' }\n      & Pick<Facet, 'id' | 'name'>\n    ) }\n  )>, channels: Array<(\n    { __typename?: 'Channel' }\n    & Pick<Channel, 'id' | 'code'>\n  )> }\n);\n\nexport type ProductOptionGroupWithOptionsFragment = (\n  { __typename?: 'ProductOptionGroup' }\n  & Pick<ProductOptionGroup, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'code' | 'name'>\n  & { translations: Array<(\n    { __typename?: 'ProductOptionGroupTranslation' }\n    & Pick<ProductOptionGroupTranslation, 'id' | 'name'>\n  )>, options: Array<(\n    { __typename?: 'ProductOption' }\n    & Pick<ProductOption, 'id' | 'languageCode' | 'name' | 'code'>\n    & { translations: Array<(\n      { __typename?: 'ProductOptionTranslation' }\n      & Pick<ProductOptionTranslation, 'name'>\n    )> }\n  )> }\n);\n\nexport type UpdateProductMutationVariables = Exact<{\n  input: UpdateProductInput;\n}>;\n\n\nexport type UpdateProductMutation = { updateProduct: (\n    { __typename?: 'Product' }\n    & ProductWithVariantsFragment\n  ) };\n\nexport type CreateProductMutationVariables = Exact<{\n  input: CreateProductInput;\n}>;\n\n\nexport type CreateProductMutation = { createProduct: (\n    { __typename?: 'Product' }\n    & ProductWithVariantsFragment\n  ) };\n\nexport type DeleteProductMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteProductMutation = { deleteProduct: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type CreateProductVariantsMutationVariables = Exact<{\n  input: Array<CreateProductVariantInput> | CreateProductVariantInput;\n}>;\n\n\nexport type CreateProductVariantsMutation = { createProductVariants: Array<Maybe<(\n    { __typename?: 'ProductVariant' }\n    & ProductVariantFragment\n  )>> };\n\nexport type UpdateProductVariantsMutationVariables = Exact<{\n  input: Array<UpdateProductVariantInput> | UpdateProductVariantInput;\n}>;\n\n\nexport type UpdateProductVariantsMutation = { updateProductVariants: Array<Maybe<(\n    { __typename?: 'ProductVariant' }\n    & ProductVariantFragment\n  )>> };\n\nexport type CreateProductOptionGroupMutationVariables = Exact<{\n  input: CreateProductOptionGroupInput;\n}>;\n\n\nexport type CreateProductOptionGroupMutation = { createProductOptionGroup: (\n    { __typename?: 'ProductOptionGroup' }\n    & ProductOptionGroupWithOptionsFragment\n  ) };\n\nexport type GetProductOptionGroupQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetProductOptionGroupQuery = { productOptionGroup?: Maybe<(\n    { __typename?: 'ProductOptionGroup' }\n    & ProductOptionGroupWithOptionsFragment\n  )> };\n\nexport type AddOptionToGroupMutationVariables = Exact<{\n  input: CreateProductOptionInput;\n}>;\n\n\nexport type AddOptionToGroupMutation = { createProductOption: (\n    { __typename?: 'ProductOption' }\n    & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'code' | 'groupId'>\n  ) };\n\nexport type AddOptionGroupToProductMutationVariables = Exact<{\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n}>;\n\n\nexport type AddOptionGroupToProductMutation = { addOptionGroupToProduct: (\n    { __typename?: 'Product' }\n    & Pick<Product, 'id' | 'createdAt' | 'updatedAt'>\n    & { optionGroups: Array<(\n      { __typename?: 'ProductOptionGroup' }\n      & Pick<ProductOptionGroup, 'id' | 'createdAt' | 'updatedAt' | 'code'>\n      & { options: Array<(\n        { __typename?: 'ProductOption' }\n        & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'code'>\n      )> }\n    )> }\n  ) };\n\nexport type RemoveOptionGroupFromProductMutationVariables = Exact<{\n  productId: Scalars['ID'];\n  optionGroupId: Scalars['ID'];\n}>;\n\n\nexport type RemoveOptionGroupFromProductMutation = { removeOptionGroupFromProduct: (\n    { __typename?: 'Product' }\n    & Pick<Product, 'id' | 'createdAt' | 'updatedAt'>\n    & { optionGroups: Array<(\n      { __typename?: 'ProductOptionGroup' }\n      & Pick<ProductOptionGroup, 'id' | 'createdAt' | 'updatedAt' | 'code'>\n      & { options: Array<(\n        { __typename?: 'ProductOption' }\n        & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'code'>\n      )> }\n    )> }\n  ) | (\n    { __typename?: 'ProductOptionInUseError' }\n    & ErrorResult_ProductOptionInUseError_Fragment\n  ) };\n\nexport type GetProductWithVariantsQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetProductWithVariantsQuery = { product?: Maybe<(\n    { __typename?: 'Product' }\n    & ProductWithVariantsFragment\n  )> };\n\nexport type GetProductSimpleQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetProductSimpleQuery = { product?: Maybe<(\n    { __typename?: 'Product' }\n    & Pick<Product, 'id' | 'name'>\n    & { featuredAsset?: Maybe<(\n      { __typename?: 'Asset' }\n      & AssetFragment\n    )> }\n  )> };\n\nexport type GetProductListQueryVariables = Exact<{\n  options?: Maybe<ProductListOptions>;\n}>;\n\n\nexport type GetProductListQuery = { products: (\n    { __typename?: 'ProductList' }\n    & Pick<ProductList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Product' }\n      & Pick<Product, 'id' | 'createdAt' | 'updatedAt' | 'enabled' | 'languageCode' | 'name' | 'slug'>\n      & { featuredAsset?: Maybe<(\n        { __typename?: 'Asset' }\n        & Pick<Asset, 'id' | 'createdAt' | 'updatedAt' | 'preview'>\n      )> }\n    )> }\n  ) };\n\nexport type GetProductOptionGroupsQueryVariables = Exact<{\n  filterTerm?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type GetProductOptionGroupsQuery = { productOptionGroups: Array<(\n    { __typename?: 'ProductOptionGroup' }\n    & Pick<ProductOptionGroup, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'code' | 'name'>\n    & { options: Array<(\n      { __typename?: 'ProductOption' }\n      & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'code' | 'name'>\n    )> }\n  )> };\n\nexport type GetAssetListQueryVariables = Exact<{\n  options?: Maybe<AssetListOptions>;\n}>;\n\n\nexport type GetAssetListQuery = { assets: (\n    { __typename?: 'AssetList' }\n    & Pick<AssetList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Asset' }\n      & { tags: Array<(\n        { __typename?: 'Tag' }\n        & TagFragment\n      )> }\n      & AssetFragment\n    )> }\n  ) };\n\nexport type GetAssetQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetAssetQuery = { asset?: Maybe<(\n    { __typename?: 'Asset' }\n    & { tags: Array<(\n      { __typename?: 'Tag' }\n      & TagFragment\n    )> }\n    & AssetFragment\n  )> };\n\nexport type CreateAssetsMutationVariables = Exact<{\n  input: Array<CreateAssetInput> | CreateAssetInput;\n}>;\n\n\nexport type CreateAssetsMutation = { createAssets: Array<(\n    { __typename?: 'Asset' }\n    & { tags: Array<(\n      { __typename?: 'Tag' }\n      & TagFragment\n    )> }\n    & AssetFragment\n  ) | (\n    { __typename?: 'MimeTypeError' }\n    & Pick<MimeTypeError, 'message'>\n  )> };\n\nexport type UpdateAssetMutationVariables = Exact<{\n  input: UpdateAssetInput;\n}>;\n\n\nexport type UpdateAssetMutation = { updateAsset: (\n    { __typename?: 'Asset' }\n    & { tags: Array<(\n      { __typename?: 'Tag' }\n      & TagFragment\n    )> }\n    & AssetFragment\n  ) };\n\nexport type DeleteAssetsMutationVariables = Exact<{\n  input: DeleteAssetsInput;\n}>;\n\n\nexport type DeleteAssetsMutation = { deleteAssets: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type SearchProductsQueryVariables = Exact<{\n  input: SearchInput;\n}>;\n\n\nexport type SearchProductsQuery = { search: (\n    { __typename?: 'SearchResponse' }\n    & Pick<SearchResponse, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'SearchResult' }\n      & Pick<SearchResult, 'enabled' | 'productId' | 'productName' | 'productVariantId' | 'productVariantName' | 'sku' | 'channelIds'>\n      & { productAsset?: Maybe<(\n        { __typename?: 'SearchResultAsset' }\n        & Pick<SearchResultAsset, 'id' | 'preview'>\n        & { focalPoint?: Maybe<(\n          { __typename?: 'Coordinate' }\n          & Pick<Coordinate, 'x' | 'y'>\n        )> }\n      )>, productVariantAsset?: Maybe<(\n        { __typename?: 'SearchResultAsset' }\n        & Pick<SearchResultAsset, 'id' | 'preview'>\n        & { focalPoint?: Maybe<(\n          { __typename?: 'Coordinate' }\n          & Pick<Coordinate, 'x' | 'y'>\n        )> }\n      )> }\n    )>, facetValues: Array<(\n      { __typename?: 'FacetValueResult' }\n      & Pick<FacetValueResult, 'count'>\n      & { facetValue: (\n        { __typename?: 'FacetValue' }\n        & Pick<FacetValue, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n        & { facet: (\n          { __typename?: 'Facet' }\n          & Pick<Facet, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n        ) }\n      ) }\n    )> }\n  ) };\n\nexport type ProductSelectorSearchQueryVariables = Exact<{\n  term: Scalars['String'];\n  take: Scalars['Int'];\n}>;\n\n\nexport type ProductSelectorSearchQuery = { search: (\n    { __typename?: 'SearchResponse' }\n    & { items: Array<(\n      { __typename?: 'SearchResult' }\n      & Pick<SearchResult, 'productVariantId' | 'productVariantName' | 'sku'>\n      & { productAsset?: Maybe<(\n        { __typename?: 'SearchResultAsset' }\n        & Pick<SearchResultAsset, 'id' | 'preview'>\n        & { focalPoint?: Maybe<(\n          { __typename?: 'Coordinate' }\n          & Pick<Coordinate, 'x' | 'y'>\n        )> }\n      )>, price: { __typename?: 'PriceRange' } | (\n        { __typename?: 'SinglePrice' }\n        & Pick<SinglePrice, 'value'>\n      ), priceWithTax: { __typename?: 'PriceRange' } | (\n        { __typename?: 'SinglePrice' }\n        & Pick<SinglePrice, 'value'>\n      ) }\n    )> }\n  ) };\n\nexport type UpdateProductOptionMutationVariables = Exact<{\n  input: UpdateProductOptionInput;\n}>;\n\n\nexport type UpdateProductOptionMutation = { updateProductOption: (\n    { __typename?: 'ProductOption' }\n    & ProductOptionFragment\n  ) };\n\nexport type DeleteProductVariantMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteProductVariantMutation = { deleteProductVariant: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type GetProductVariantOptionsQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetProductVariantOptionsQuery = { product?: Maybe<(\n    { __typename?: 'Product' }\n    & Pick<Product, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n    & { optionGroups: Array<(\n      { __typename?: 'ProductOptionGroup' }\n      & Pick<ProductOptionGroup, 'id' | 'name' | 'code'>\n      & { options: Array<(\n        { __typename?: 'ProductOption' }\n        & ProductOptionFragment\n      )> }\n    )>, variants: Array<(\n      { __typename?: 'ProductVariant' }\n      & Pick<ProductVariant, 'id' | 'createdAt' | 'updatedAt' | 'enabled' | 'name' | 'sku' | 'price' | 'stockOnHand'>\n      & { options: Array<(\n        { __typename?: 'ProductOption' }\n        & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'code' | 'groupId'>\n      )> }\n    )> }\n  )> };\n\nexport type AssignProductsToChannelMutationVariables = Exact<{\n  input: AssignProductsToChannelInput;\n}>;\n\n\nexport type AssignProductsToChannelMutation = { assignProductsToChannel: Array<(\n    { __typename?: 'Product' }\n    & Pick<Product, 'id'>\n    & { channels: Array<(\n      { __typename?: 'Channel' }\n      & Pick<Channel, 'id' | 'code'>\n    )> }\n  )> };\n\nexport type AssignVariantsToChannelMutationVariables = Exact<{\n  input: AssignProductVariantsToChannelInput;\n}>;\n\n\nexport type AssignVariantsToChannelMutation = { assignProductVariantsToChannel: Array<(\n    { __typename?: 'ProductVariant' }\n    & Pick<ProductVariant, 'id'>\n    & { channels: Array<(\n      { __typename?: 'Channel' }\n      & Pick<Channel, 'id' | 'code'>\n    )> }\n  )> };\n\nexport type RemoveProductsFromChannelMutationVariables = Exact<{\n  input: RemoveProductsFromChannelInput;\n}>;\n\n\nexport type RemoveProductsFromChannelMutation = { removeProductsFromChannel: Array<(\n    { __typename?: 'Product' }\n    & Pick<Product, 'id'>\n    & { channels: Array<(\n      { __typename?: 'Channel' }\n      & Pick<Channel, 'id' | 'code'>\n    )> }\n  )> };\n\nexport type RemoveVariantsFromChannelMutationVariables = Exact<{\n  input: RemoveProductVariantsFromChannelInput;\n}>;\n\n\nexport type RemoveVariantsFromChannelMutation = { removeProductVariantsFromChannel: Array<(\n    { __typename?: 'ProductVariant' }\n    & Pick<ProductVariant, 'id'>\n    & { channels: Array<(\n      { __typename?: 'Channel' }\n      & Pick<Channel, 'id' | 'code'>\n    )> }\n  )> };\n\nexport type GetProductVariantQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetProductVariantQuery = { productVariant?: Maybe<(\n    { __typename?: 'ProductVariant' }\n    & Pick<ProductVariant, 'id' | 'name' | 'sku'>\n    & { featuredAsset?: Maybe<(\n      { __typename?: 'Asset' }\n      & Pick<Asset, 'id' | 'preview'>\n      & { focalPoint?: Maybe<(\n        { __typename?: 'Coordinate' }\n        & Pick<Coordinate, 'x' | 'y'>\n      )> }\n    )>, product: (\n      { __typename?: 'Product' }\n      & Pick<Product, 'id'>\n      & { featuredAsset?: Maybe<(\n        { __typename?: 'Asset' }\n        & Pick<Asset, 'id' | 'preview'>\n        & { focalPoint?: Maybe<(\n          { __typename?: 'Coordinate' }\n          & Pick<Coordinate, 'x' | 'y'>\n        )> }\n      )> }\n    ) }\n  )> };\n\nexport type GetProductVariantListQueryVariables = Exact<{\n  options: ProductVariantListOptions;\n}>;\n\n\nexport type GetProductVariantListQuery = { productVariants: (\n    { __typename?: 'ProductVariantList' }\n    & Pick<ProductVariantList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'ProductVariant' }\n      & Pick<ProductVariant, 'id' | 'name' | 'sku'>\n      & { featuredAsset?: Maybe<(\n        { __typename?: 'Asset' }\n        & Pick<Asset, 'id' | 'preview'>\n        & { focalPoint?: Maybe<(\n          { __typename?: 'Coordinate' }\n          & Pick<Coordinate, 'x' | 'y'>\n        )> }\n      )>, product: (\n        { __typename?: 'Product' }\n        & Pick<Product, 'id'>\n        & { featuredAsset?: Maybe<(\n          { __typename?: 'Asset' }\n          & Pick<Asset, 'id' | 'preview'>\n          & { focalPoint?: Maybe<(\n            { __typename?: 'Coordinate' }\n            & Pick<Coordinate, 'x' | 'y'>\n          )> }\n        )> }\n      ) }\n    )> }\n  ) };\n\nexport type GetTagListQueryVariables = Exact<{\n  options?: Maybe<TagListOptions>;\n}>;\n\n\nexport type GetTagListQuery = { tags: (\n    { __typename?: 'TagList' }\n    & Pick<TagList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Tag' }\n      & TagFragment\n    )> }\n  ) };\n\nexport type GetTagQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTagQuery = { tag: (\n    { __typename?: 'Tag' }\n    & TagFragment\n  ) };\n\nexport type CreateTagMutationVariables = Exact<{\n  input: CreateTagInput;\n}>;\n\n\nexport type CreateTagMutation = { createTag: (\n    { __typename?: 'Tag' }\n    & TagFragment\n  ) };\n\nexport type UpdateTagMutationVariables = Exact<{\n  input: UpdateTagInput;\n}>;\n\n\nexport type UpdateTagMutation = { updateTag: (\n    { __typename?: 'Tag' }\n    & TagFragment\n  ) };\n\nexport type DeleteTagMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteTagMutation = { deleteTag: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'message' | 'result'>\n  ) };\n\nexport type PromotionFragment = (\n  { __typename?: 'Promotion' }\n  & Pick<Promotion, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'enabled' | 'couponCode' | 'perCustomerUsageLimit' | 'startsAt' | 'endsAt'>\n  & { conditions: Array<(\n    { __typename?: 'ConfigurableOperation' }\n    & ConfigurableOperationFragment\n  )>, actions: Array<(\n    { __typename?: 'ConfigurableOperation' }\n    & ConfigurableOperationFragment\n  )> }\n);\n\nexport type GetPromotionListQueryVariables = Exact<{\n  options?: Maybe<PromotionListOptions>;\n}>;\n\n\nexport type GetPromotionListQuery = { promotions: (\n    { __typename?: 'PromotionList' }\n    & Pick<PromotionList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Promotion' }\n      & PromotionFragment\n    )> }\n  ) };\n\nexport type GetPromotionQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetPromotionQuery = { promotion?: Maybe<(\n    { __typename?: 'Promotion' }\n    & PromotionFragment\n  )> };\n\nexport type GetAdjustmentOperationsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAdjustmentOperationsQuery = { promotionConditions: Array<(\n    { __typename?: 'ConfigurableOperationDefinition' }\n    & ConfigurableOperationDefFragment\n  )>, promotionActions: Array<(\n    { __typename?: 'ConfigurableOperationDefinition' }\n    & ConfigurableOperationDefFragment\n  )> };\n\nexport type CreatePromotionMutationVariables = Exact<{\n  input: CreatePromotionInput;\n}>;\n\n\nexport type CreatePromotionMutation = { createPromotion: (\n    { __typename?: 'Promotion' }\n    & PromotionFragment\n  ) | (\n    { __typename?: 'MissingConditionsError' }\n    & ErrorResult_MissingConditionsError_Fragment\n  ) };\n\nexport type UpdatePromotionMutationVariables = Exact<{\n  input: UpdatePromotionInput;\n}>;\n\n\nexport type UpdatePromotionMutation = { updatePromotion: (\n    { __typename?: 'Promotion' }\n    & PromotionFragment\n  ) | { __typename?: 'MissingConditionsError' } };\n\nexport type DeletePromotionMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeletePromotionMutation = { deletePromotion: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type CountryFragment = (\n  { __typename?: 'Country' }\n  & Pick<Country, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'name' | 'enabled'>\n  & { translations: Array<(\n    { __typename?: 'CountryTranslation' }\n    & Pick<CountryTranslation, 'id' | 'languageCode' | 'name'>\n  )> }\n);\n\nexport type GetCountryListQueryVariables = Exact<{\n  options?: Maybe<CountryListOptions>;\n}>;\n\n\nexport type GetCountryListQuery = { countries: (\n    { __typename?: 'CountryList' }\n    & Pick<CountryList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Country' }\n      & Pick<Country, 'id' | 'code' | 'name' | 'enabled'>\n    )> }\n  ) };\n\nexport type GetAvailableCountriesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAvailableCountriesQuery = { countries: (\n    { __typename?: 'CountryList' }\n    & { items: Array<(\n      { __typename?: 'Country' }\n      & Pick<Country, 'id' | 'code' | 'name' | 'enabled'>\n    )> }\n  ) };\n\nexport type GetCountryQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCountryQuery = { country?: Maybe<(\n    { __typename?: 'Country' }\n    & CountryFragment\n  )> };\n\nexport type CreateCountryMutationVariables = Exact<{\n  input: CreateCountryInput;\n}>;\n\n\nexport type CreateCountryMutation = { createCountry: (\n    { __typename?: 'Country' }\n    & CountryFragment\n  ) };\n\nexport type UpdateCountryMutationVariables = Exact<{\n  input: UpdateCountryInput;\n}>;\n\n\nexport type UpdateCountryMutation = { updateCountry: (\n    { __typename?: 'Country' }\n    & CountryFragment\n  ) };\n\nexport type DeleteCountryMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteCountryMutation = { deleteCountry: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type ZoneFragment = (\n  { __typename?: 'Zone' }\n  & Pick<Zone, 'id' | 'name'>\n  & { members: Array<(\n    { __typename?: 'Country' }\n    & CountryFragment\n  )> }\n);\n\nexport type GetZonesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetZonesQuery = { zones: Array<(\n    { __typename?: 'Zone' }\n    & Pick<Zone, 'id' | 'createdAt' | 'updatedAt' | 'name'>\n    & { members: Array<(\n      { __typename?: 'Country' }\n      & Pick<Country, 'createdAt' | 'updatedAt' | 'id' | 'name' | 'code' | 'enabled'>\n    )> }\n  )> };\n\nexport type GetZoneQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetZoneQuery = { zone?: Maybe<(\n    { __typename?: 'Zone' }\n    & ZoneFragment\n  )> };\n\nexport type CreateZoneMutationVariables = Exact<{\n  input: CreateZoneInput;\n}>;\n\n\nexport type CreateZoneMutation = { createZone: (\n    { __typename?: 'Zone' }\n    & ZoneFragment\n  ) };\n\nexport type UpdateZoneMutationVariables = Exact<{\n  input: UpdateZoneInput;\n}>;\n\n\nexport type UpdateZoneMutation = { updateZone: (\n    { __typename?: 'Zone' }\n    & ZoneFragment\n  ) };\n\nexport type DeleteZoneMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteZoneMutation = { deleteZone: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'message' | 'result'>\n  ) };\n\nexport type AddMembersToZoneMutationVariables = Exact<{\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']> | Scalars['ID'];\n}>;\n\n\nexport type AddMembersToZoneMutation = { addMembersToZone: (\n    { __typename?: 'Zone' }\n    & ZoneFragment\n  ) };\n\nexport type RemoveMembersFromZoneMutationVariables = Exact<{\n  zoneId: Scalars['ID'];\n  memberIds: Array<Scalars['ID']> | Scalars['ID'];\n}>;\n\n\nexport type RemoveMembersFromZoneMutation = { removeMembersFromZone: (\n    { __typename?: 'Zone' }\n    & ZoneFragment\n  ) };\n\nexport type TaxCategoryFragment = (\n  { __typename?: 'TaxCategory' }\n  & Pick<TaxCategory, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'isDefault'>\n);\n\nexport type GetTaxCategoriesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetTaxCategoriesQuery = { taxCategories: Array<(\n    { __typename?: 'TaxCategory' }\n    & TaxCategoryFragment\n  )> };\n\nexport type GetTaxCategoryQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTaxCategoryQuery = { taxCategory?: Maybe<(\n    { __typename?: 'TaxCategory' }\n    & TaxCategoryFragment\n  )> };\n\nexport type CreateTaxCategoryMutationVariables = Exact<{\n  input: CreateTaxCategoryInput;\n}>;\n\n\nexport type CreateTaxCategoryMutation = { createTaxCategory: (\n    { __typename?: 'TaxCategory' }\n    & TaxCategoryFragment\n  ) };\n\nexport type UpdateTaxCategoryMutationVariables = Exact<{\n  input: UpdateTaxCategoryInput;\n}>;\n\n\nexport type UpdateTaxCategoryMutation = { updateTaxCategory: (\n    { __typename?: 'TaxCategory' }\n    & TaxCategoryFragment\n  ) };\n\nexport type DeleteTaxCategoryMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteTaxCategoryMutation = { deleteTaxCategory: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type TaxRateFragment = (\n  { __typename?: 'TaxRate' }\n  & Pick<TaxRate, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'enabled' | 'value'>\n  & { category: (\n    { __typename?: 'TaxCategory' }\n    & Pick<TaxCategory, 'id' | 'name'>\n  ), zone: (\n    { __typename?: 'Zone' }\n    & Pick<Zone, 'id' | 'name'>\n  ), customerGroup?: Maybe<(\n    { __typename?: 'CustomerGroup' }\n    & Pick<CustomerGroup, 'id' | 'name'>\n  )> }\n);\n\nexport type GetTaxRateListQueryVariables = Exact<{\n  options?: Maybe<TaxRateListOptions>;\n}>;\n\n\nexport type GetTaxRateListQuery = { taxRates: (\n    { __typename?: 'TaxRateList' }\n    & Pick<TaxRateList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'TaxRate' }\n      & TaxRateFragment\n    )> }\n  ) };\n\nexport type GetTaxRateQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTaxRateQuery = { taxRate?: Maybe<(\n    { __typename?: 'TaxRate' }\n    & TaxRateFragment\n  )> };\n\nexport type CreateTaxRateMutationVariables = Exact<{\n  input: CreateTaxRateInput;\n}>;\n\n\nexport type CreateTaxRateMutation = { createTaxRate: (\n    { __typename?: 'TaxRate' }\n    & TaxRateFragment\n  ) };\n\nexport type UpdateTaxRateMutationVariables = Exact<{\n  input: UpdateTaxRateInput;\n}>;\n\n\nexport type UpdateTaxRateMutation = { updateTaxRate: (\n    { __typename?: 'TaxRate' }\n    & TaxRateFragment\n  ) };\n\nexport type DeleteTaxRateMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteTaxRateMutation = { deleteTaxRate: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type ChannelFragment = (\n  { __typename?: 'Channel' }\n  & Pick<Channel, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'token' | 'pricesIncludeTax' | 'currencyCode' | 'defaultLanguageCode'>\n  & { defaultShippingZone?: Maybe<(\n    { __typename?: 'Zone' }\n    & Pick<Zone, 'id' | 'name'>\n  )>, defaultTaxZone?: Maybe<(\n    { __typename?: 'Zone' }\n    & Pick<Zone, 'id' | 'name'>\n  )> }\n);\n\nexport type GetChannelsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetChannelsQuery = { channels: Array<(\n    { __typename?: 'Channel' }\n    & ChannelFragment\n  )> };\n\nexport type GetChannelQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetChannelQuery = { channel?: Maybe<(\n    { __typename?: 'Channel' }\n    & ChannelFragment\n  )> };\n\nexport type GetActiveChannelQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetActiveChannelQuery = { activeChannel: (\n    { __typename?: 'Channel' }\n    & ChannelFragment\n  ) };\n\nexport type CreateChannelMutationVariables = Exact<{\n  input: CreateChannelInput;\n}>;\n\n\nexport type CreateChannelMutation = { createChannel: (\n    { __typename?: 'Channel' }\n    & ChannelFragment\n  ) | (\n    { __typename?: 'LanguageNotAvailableError' }\n    & ErrorResult_LanguageNotAvailableError_Fragment\n  ) };\n\nexport type UpdateChannelMutationVariables = Exact<{\n  input: UpdateChannelInput;\n}>;\n\n\nexport type UpdateChannelMutation = { updateChannel: (\n    { __typename?: 'Channel' }\n    & ChannelFragment\n  ) | (\n    { __typename?: 'LanguageNotAvailableError' }\n    & ErrorResult_LanguageNotAvailableError_Fragment\n  ) };\n\nexport type DeleteChannelMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteChannelMutation = { deleteChannel: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type PaymentMethodFragment = (\n  { __typename?: 'PaymentMethod' }\n  & Pick<PaymentMethod, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'code' | 'description' | 'enabled'>\n  & { checker?: Maybe<(\n    { __typename?: 'ConfigurableOperation' }\n    & ConfigurableOperationFragment\n  )>, handler: (\n    { __typename?: 'ConfigurableOperation' }\n    & ConfigurableOperationFragment\n  ) }\n);\n\nexport type GetPaymentMethodListQueryVariables = Exact<{\n  options: PaymentMethodListOptions;\n}>;\n\n\nexport type GetPaymentMethodListQuery = { paymentMethods: (\n    { __typename?: 'PaymentMethodList' }\n    & Pick<PaymentMethodList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'PaymentMethod' }\n      & PaymentMethodFragment\n    )> }\n  ) };\n\nexport type GetPaymentMethodOperationsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetPaymentMethodOperationsQuery = { paymentMethodEligibilityCheckers: Array<(\n    { __typename?: 'ConfigurableOperationDefinition' }\n    & ConfigurableOperationDefFragment\n  )>, paymentMethodHandlers: Array<(\n    { __typename?: 'ConfigurableOperationDefinition' }\n    & ConfigurableOperationDefFragment\n  )> };\n\nexport type GetPaymentMethodQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetPaymentMethodQuery = { paymentMethod?: Maybe<(\n    { __typename?: 'PaymentMethod' }\n    & PaymentMethodFragment\n  )> };\n\nexport type CreatePaymentMethodMutationVariables = Exact<{\n  input: CreatePaymentMethodInput;\n}>;\n\n\nexport type CreatePaymentMethodMutation = { createPaymentMethod: (\n    { __typename?: 'PaymentMethod' }\n    & PaymentMethodFragment\n  ) };\n\nexport type UpdatePaymentMethodMutationVariables = Exact<{\n  input: UpdatePaymentMethodInput;\n}>;\n\n\nexport type UpdatePaymentMethodMutation = { updatePaymentMethod: (\n    { __typename?: 'PaymentMethod' }\n    & PaymentMethodFragment\n  ) };\n\nexport type DeletePaymentMethodMutationVariables = Exact<{\n  id: Scalars['ID'];\n  force?: Maybe<Scalars['Boolean']>;\n}>;\n\n\nexport type DeletePaymentMethodMutation = { deletePaymentMethod: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type GlobalSettingsFragment = (\n  { __typename?: 'GlobalSettings' }\n  & Pick<GlobalSettings, 'id' | 'availableLanguages' | 'trackInventory' | 'outOfStockThreshold'>\n  & { serverConfig: (\n    { __typename?: 'ServerConfig' }\n    & { permissions: Array<(\n      { __typename?: 'PermissionDefinition' }\n      & Pick<PermissionDefinition, 'name' | 'description' | 'assignable'>\n    )>, orderProcess: Array<(\n      { __typename?: 'OrderProcessState' }\n      & Pick<OrderProcessState, 'name'>\n    )> }\n  ) }\n);\n\nexport type GetGlobalSettingsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetGlobalSettingsQuery = { globalSettings: (\n    { __typename?: 'GlobalSettings' }\n    & GlobalSettingsFragment\n  ) };\n\nexport type UpdateGlobalSettingsMutationVariables = Exact<{\n  input: UpdateGlobalSettingsInput;\n}>;\n\n\nexport type UpdateGlobalSettingsMutation = { updateGlobalSettings: (\n    { __typename?: 'GlobalSettings' }\n    & GlobalSettingsFragment\n  ) | (\n    { __typename?: 'ChannelDefaultLanguageError' }\n    & ErrorResult_ChannelDefaultLanguageError_Fragment\n  ) };\n\ntype CustomFieldConfig_StringCustomFieldConfig_Fragment = (\n  { __typename?: 'StringCustomFieldConfig' }\n  & Pick<StringCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly'>\n  & { description?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>>, label?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>> }\n);\n\ntype CustomFieldConfig_LocaleStringCustomFieldConfig_Fragment = (\n  { __typename?: 'LocaleStringCustomFieldConfig' }\n  & Pick<LocaleStringCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly'>\n  & { description?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>>, label?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>> }\n);\n\ntype CustomFieldConfig_IntCustomFieldConfig_Fragment = (\n  { __typename?: 'IntCustomFieldConfig' }\n  & Pick<IntCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly'>\n  & { description?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>>, label?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>> }\n);\n\ntype CustomFieldConfig_FloatCustomFieldConfig_Fragment = (\n  { __typename?: 'FloatCustomFieldConfig' }\n  & Pick<FloatCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly'>\n  & { description?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>>, label?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>> }\n);\n\ntype CustomFieldConfig_BooleanCustomFieldConfig_Fragment = (\n  { __typename?: 'BooleanCustomFieldConfig' }\n  & Pick<BooleanCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly'>\n  & { description?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>>, label?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>> }\n);\n\ntype CustomFieldConfig_DateTimeCustomFieldConfig_Fragment = (\n  { __typename?: 'DateTimeCustomFieldConfig' }\n  & Pick<DateTimeCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly'>\n  & { description?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>>, label?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>> }\n);\n\ntype CustomFieldConfig_RelationCustomFieldConfig_Fragment = (\n  { __typename?: 'RelationCustomFieldConfig' }\n  & Pick<RelationCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly'>\n  & { description?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>>, label?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>> }\n);\n\ntype CustomFieldConfig_TextCustomFieldConfig_Fragment = (\n  { __typename?: 'TextCustomFieldConfig' }\n  & Pick<TextCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly'>\n  & { description?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>>, label?: Maybe<Array<(\n    { __typename?: 'LocalizedString' }\n    & Pick<LocalizedString, 'languageCode' | 'value'>\n  )>> }\n);\n\nexport type CustomFieldConfigFragment = CustomFieldConfig_StringCustomFieldConfig_Fragment | CustomFieldConfig_LocaleStringCustomFieldConfig_Fragment | CustomFieldConfig_IntCustomFieldConfig_Fragment | CustomFieldConfig_FloatCustomFieldConfig_Fragment | CustomFieldConfig_BooleanCustomFieldConfig_Fragment | CustomFieldConfig_DateTimeCustomFieldConfig_Fragment | CustomFieldConfig_RelationCustomFieldConfig_Fragment | CustomFieldConfig_TextCustomFieldConfig_Fragment;\n\nexport type StringCustomFieldFragment = (\n  { __typename?: 'StringCustomFieldConfig' }\n  & Pick<StringCustomFieldConfig, 'pattern'>\n  & { options?: Maybe<Array<(\n    { __typename?: 'StringFieldOption' }\n    & Pick<StringFieldOption, 'value'>\n    & { label?: Maybe<Array<(\n      { __typename?: 'LocalizedString' }\n      & Pick<LocalizedString, 'languageCode' | 'value'>\n    )>> }\n  )>> }\n  & CustomFieldConfig_StringCustomFieldConfig_Fragment\n);\n\nexport type LocaleStringCustomFieldFragment = (\n  { __typename?: 'LocaleStringCustomFieldConfig' }\n  & Pick<LocaleStringCustomFieldConfig, 'pattern'>\n  & CustomFieldConfig_LocaleStringCustomFieldConfig_Fragment\n);\n\nexport type TextCustomFieldFragment = (\n  { __typename?: 'TextCustomFieldConfig' }\n  & CustomFieldConfig_TextCustomFieldConfig_Fragment\n);\n\nexport type BooleanCustomFieldFragment = (\n  { __typename?: 'BooleanCustomFieldConfig' }\n  & CustomFieldConfig_BooleanCustomFieldConfig_Fragment\n);\n\nexport type IntCustomFieldFragment = (\n  { __typename?: 'IntCustomFieldConfig' }\n  & { intMin: IntCustomFieldConfig['min'], intMax: IntCustomFieldConfig['max'], intStep: IntCustomFieldConfig['step'] }\n  & CustomFieldConfig_IntCustomFieldConfig_Fragment\n);\n\nexport type FloatCustomFieldFragment = (\n  { __typename?: 'FloatCustomFieldConfig' }\n  & { floatMin: FloatCustomFieldConfig['min'], floatMax: FloatCustomFieldConfig['max'], floatStep: FloatCustomFieldConfig['step'] }\n  & CustomFieldConfig_FloatCustomFieldConfig_Fragment\n);\n\nexport type DateTimeCustomFieldFragment = (\n  { __typename?: 'DateTimeCustomFieldConfig' }\n  & { datetimeMin: DateTimeCustomFieldConfig['min'], datetimeMax: DateTimeCustomFieldConfig['max'], datetimeStep: DateTimeCustomFieldConfig['step'] }\n  & CustomFieldConfig_DateTimeCustomFieldConfig_Fragment\n);\n\nexport type RelationCustomFieldFragment = (\n  { __typename?: 'RelationCustomFieldConfig' }\n  & Pick<RelationCustomFieldConfig, 'entity' | 'scalarFields'>\n  & CustomFieldConfig_RelationCustomFieldConfig_Fragment\n);\n\ntype CustomFields_StringCustomFieldConfig_Fragment = (\n  { __typename?: 'StringCustomFieldConfig' }\n  & StringCustomFieldFragment\n);\n\ntype CustomFields_LocaleStringCustomFieldConfig_Fragment = (\n  { __typename?: 'LocaleStringCustomFieldConfig' }\n  & LocaleStringCustomFieldFragment\n);\n\ntype CustomFields_IntCustomFieldConfig_Fragment = (\n  { __typename?: 'IntCustomFieldConfig' }\n  & IntCustomFieldFragment\n);\n\ntype CustomFields_FloatCustomFieldConfig_Fragment = (\n  { __typename?: 'FloatCustomFieldConfig' }\n  & FloatCustomFieldFragment\n);\n\ntype CustomFields_BooleanCustomFieldConfig_Fragment = (\n  { __typename?: 'BooleanCustomFieldConfig' }\n  & BooleanCustomFieldFragment\n);\n\ntype CustomFields_DateTimeCustomFieldConfig_Fragment = (\n  { __typename?: 'DateTimeCustomFieldConfig' }\n  & DateTimeCustomFieldFragment\n);\n\ntype CustomFields_RelationCustomFieldConfig_Fragment = (\n  { __typename?: 'RelationCustomFieldConfig' }\n  & RelationCustomFieldFragment\n);\n\ntype CustomFields_TextCustomFieldConfig_Fragment = (\n  { __typename?: 'TextCustomFieldConfig' }\n  & TextCustomFieldFragment\n);\n\nexport type CustomFieldsFragment = CustomFields_StringCustomFieldConfig_Fragment | CustomFields_LocaleStringCustomFieldConfig_Fragment | CustomFields_IntCustomFieldConfig_Fragment | CustomFields_FloatCustomFieldConfig_Fragment | CustomFields_BooleanCustomFieldConfig_Fragment | CustomFields_DateTimeCustomFieldConfig_Fragment | CustomFields_RelationCustomFieldConfig_Fragment | CustomFields_TextCustomFieldConfig_Fragment;\n\nexport type GetServerConfigQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetServerConfigQuery = { globalSettings: (\n    { __typename?: 'GlobalSettings' }\n    & Pick<GlobalSettings, 'id'>\n    & { serverConfig: (\n      { __typename?: 'ServerConfig' }\n      & Pick<ServerConfig, 'permittedAssetTypes'>\n      & { orderProcess: Array<(\n        { __typename?: 'OrderProcessState' }\n        & Pick<OrderProcessState, 'name' | 'to'>\n      )>, permissions: Array<(\n        { __typename?: 'PermissionDefinition' }\n        & Pick<PermissionDefinition, 'name' | 'description' | 'assignable'>\n      )>, customFieldConfig: (\n        { __typename?: 'CustomFields' }\n        & { Address: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, Administrator: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, Asset: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, Channel: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, Collection: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, Customer: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, Facet: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, FacetValue: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, Fulfillment: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, GlobalSettings: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, Order: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, OrderLine: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, Product: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, ProductOption: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, ProductOptionGroup: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, ProductVariant: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, ShippingMethod: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )>, User: Array<(\n          { __typename?: 'StringCustomFieldConfig' }\n          & CustomFields_StringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'LocaleStringCustomFieldConfig' }\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'IntCustomFieldConfig' }\n          & CustomFields_IntCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'FloatCustomFieldConfig' }\n          & CustomFields_FloatCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'BooleanCustomFieldConfig' }\n          & CustomFields_BooleanCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'DateTimeCustomFieldConfig' }\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'RelationCustomFieldConfig' }\n          & CustomFields_RelationCustomFieldConfig_Fragment\n        ) | (\n          { __typename?: 'TextCustomFieldConfig' }\n          & CustomFields_TextCustomFieldConfig_Fragment\n        )> }\n      ) }\n    ) }\n  ) };\n\nexport type JobInfoFragment = (\n  { __typename?: 'Job' }\n  & Pick<Job, 'id' | 'createdAt' | 'startedAt' | 'settledAt' | 'queueName' | 'state' | 'isSettled' | 'progress' | 'duration' | 'data' | 'result' | 'error'>\n);\n\nexport type GetJobInfoQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetJobInfoQuery = { job?: Maybe<(\n    { __typename?: 'Job' }\n    & JobInfoFragment\n  )> };\n\nexport type GetAllJobsQueryVariables = Exact<{\n  options?: Maybe<JobListOptions>;\n}>;\n\n\nexport type GetAllJobsQuery = { jobs: (\n    { __typename?: 'JobList' }\n    & Pick<JobList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'Job' }\n      & JobInfoFragment\n    )> }\n  ) };\n\nexport type GetJobsByIdQueryVariables = Exact<{\n  ids: Array<Scalars['ID']> | Scalars['ID'];\n}>;\n\n\nexport type GetJobsByIdQuery = { jobsById: Array<(\n    { __typename?: 'Job' }\n    & JobInfoFragment\n  )> };\n\nexport type GetJobQueueListQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetJobQueueListQuery = { jobQueues: Array<(\n    { __typename?: 'JobQueue' }\n    & Pick<JobQueue, 'name' | 'running'>\n  )> };\n\nexport type CancelJobMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type CancelJobMutation = { cancelJob: (\n    { __typename?: 'Job' }\n    & JobInfoFragment\n  ) };\n\nexport type ReindexMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ReindexMutation = { reindex: (\n    { __typename?: 'Job' }\n    & JobInfoFragment\n  ) };\n\nexport type ConfigurableOperationFragment = (\n  { __typename?: 'ConfigurableOperation' }\n  & Pick<ConfigurableOperation, 'code'>\n  & { args: Array<(\n    { __typename?: 'ConfigArg' }\n    & Pick<ConfigArg, 'name' | 'value'>\n  )> }\n);\n\nexport type ConfigurableOperationDefFragment = (\n  { __typename?: 'ConfigurableOperationDefinition' }\n  & Pick<ConfigurableOperationDefinition, 'code' | 'description'>\n  & { args: Array<(\n    { __typename?: 'ConfigArgDefinition' }\n    & Pick<ConfigArgDefinition, 'name' | 'type' | 'required' | 'defaultValue' | 'list' | 'ui' | 'label'>\n  )> }\n);\n\ntype ErrorResult_MimeTypeError_Fragment = (\n  { __typename?: 'MimeTypeError' }\n  & Pick<MimeTypeError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_LanguageNotAvailableError_Fragment = (\n  { __typename?: 'LanguageNotAvailableError' }\n  & Pick<LanguageNotAvailableError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_ChannelDefaultLanguageError_Fragment = (\n  { __typename?: 'ChannelDefaultLanguageError' }\n  & Pick<ChannelDefaultLanguageError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_SettlePaymentError_Fragment = (\n  { __typename?: 'SettlePaymentError' }\n  & Pick<SettlePaymentError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_EmptyOrderLineSelectionError_Fragment = (\n  { __typename?: 'EmptyOrderLineSelectionError' }\n  & Pick<EmptyOrderLineSelectionError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_ItemsAlreadyFulfilledError_Fragment = (\n  { __typename?: 'ItemsAlreadyFulfilledError' }\n  & Pick<ItemsAlreadyFulfilledError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_InvalidFulfillmentHandlerError_Fragment = (\n  { __typename?: 'InvalidFulfillmentHandlerError' }\n  & Pick<InvalidFulfillmentHandlerError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_CreateFulfillmentError_Fragment = (\n  { __typename?: 'CreateFulfillmentError' }\n  & Pick<CreateFulfillmentError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_InsufficientStockOnHandError_Fragment = (\n  { __typename?: 'InsufficientStockOnHandError' }\n  & Pick<InsufficientStockOnHandError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_MultipleOrderError_Fragment = (\n  { __typename?: 'MultipleOrderError' }\n  & Pick<MultipleOrderError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_CancelActiveOrderError_Fragment = (\n  { __typename?: 'CancelActiveOrderError' }\n  & Pick<CancelActiveOrderError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_PaymentOrderMismatchError_Fragment = (\n  { __typename?: 'PaymentOrderMismatchError' }\n  & Pick<PaymentOrderMismatchError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_RefundOrderStateError_Fragment = (\n  { __typename?: 'RefundOrderStateError' }\n  & Pick<RefundOrderStateError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_NothingToRefundError_Fragment = (\n  { __typename?: 'NothingToRefundError' }\n  & Pick<NothingToRefundError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_AlreadyRefundedError_Fragment = (\n  { __typename?: 'AlreadyRefundedError' }\n  & Pick<AlreadyRefundedError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_QuantityTooGreatError_Fragment = (\n  { __typename?: 'QuantityTooGreatError' }\n  & Pick<QuantityTooGreatError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_RefundStateTransitionError_Fragment = (\n  { __typename?: 'RefundStateTransitionError' }\n  & Pick<RefundStateTransitionError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_PaymentStateTransitionError_Fragment = (\n  { __typename?: 'PaymentStateTransitionError' }\n  & Pick<PaymentStateTransitionError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_FulfillmentStateTransitionError_Fragment = (\n  { __typename?: 'FulfillmentStateTransitionError' }\n  & Pick<FulfillmentStateTransitionError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_OrderModificationStateError_Fragment = (\n  { __typename?: 'OrderModificationStateError' }\n  & Pick<OrderModificationStateError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_NoChangesSpecifiedError_Fragment = (\n  { __typename?: 'NoChangesSpecifiedError' }\n  & Pick<NoChangesSpecifiedError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_PaymentMethodMissingError_Fragment = (\n  { __typename?: 'PaymentMethodMissingError' }\n  & Pick<PaymentMethodMissingError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_RefundPaymentIdMissingError_Fragment = (\n  { __typename?: 'RefundPaymentIdMissingError' }\n  & Pick<RefundPaymentIdMissingError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_ManualPaymentStateError_Fragment = (\n  { __typename?: 'ManualPaymentStateError' }\n  & Pick<ManualPaymentStateError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_ProductOptionInUseError_Fragment = (\n  { __typename?: 'ProductOptionInUseError' }\n  & Pick<ProductOptionInUseError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_MissingConditionsError_Fragment = (\n  { __typename?: 'MissingConditionsError' }\n  & Pick<MissingConditionsError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_NativeAuthStrategyError_Fragment = (\n  { __typename?: 'NativeAuthStrategyError' }\n  & Pick<NativeAuthStrategyError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_InvalidCredentialsError_Fragment = (\n  { __typename?: 'InvalidCredentialsError' }\n  & Pick<InvalidCredentialsError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_OrderStateTransitionError_Fragment = (\n  { __typename?: 'OrderStateTransitionError' }\n  & Pick<OrderStateTransitionError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_EmailAddressConflictError_Fragment = (\n  { __typename?: 'EmailAddressConflictError' }\n  & Pick<EmailAddressConflictError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_OrderLimitError_Fragment = (\n  { __typename?: 'OrderLimitError' }\n  & Pick<OrderLimitError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_NegativeQuantityError_Fragment = (\n  { __typename?: 'NegativeQuantityError' }\n  & Pick<NegativeQuantityError, 'errorCode' | 'message'>\n);\n\ntype ErrorResult_InsufficientStockError_Fragment = (\n  { __typename?: 'InsufficientStockError' }\n  & Pick<InsufficientStockError, 'errorCode' | 'message'>\n);\n\nexport type ErrorResultFragment = ErrorResult_MimeTypeError_Fragment | ErrorResult_LanguageNotAvailableError_Fragment | ErrorResult_ChannelDefaultLanguageError_Fragment | ErrorResult_SettlePaymentError_Fragment | ErrorResult_EmptyOrderLineSelectionError_Fragment | ErrorResult_ItemsAlreadyFulfilledError_Fragment | ErrorResult_InvalidFulfillmentHandlerError_Fragment | ErrorResult_CreateFulfillmentError_Fragment | ErrorResult_InsufficientStockOnHandError_Fragment | ErrorResult_MultipleOrderError_Fragment | ErrorResult_CancelActiveOrderError_Fragment | ErrorResult_PaymentOrderMismatchError_Fragment | ErrorResult_RefundOrderStateError_Fragment | ErrorResult_NothingToRefundError_Fragment | ErrorResult_AlreadyRefundedError_Fragment | ErrorResult_QuantityTooGreatError_Fragment | ErrorResult_RefundStateTransitionError_Fragment | ErrorResult_PaymentStateTransitionError_Fragment | ErrorResult_FulfillmentStateTransitionError_Fragment | ErrorResult_OrderModificationStateError_Fragment | ErrorResult_NoChangesSpecifiedError_Fragment | ErrorResult_PaymentMethodMissingError_Fragment | ErrorResult_RefundPaymentIdMissingError_Fragment | ErrorResult_ManualPaymentStateError_Fragment | ErrorResult_ProductOptionInUseError_Fragment | ErrorResult_MissingConditionsError_Fragment | ErrorResult_NativeAuthStrategyError_Fragment | ErrorResult_InvalidCredentialsError_Fragment | ErrorResult_OrderStateTransitionError_Fragment | ErrorResult_EmailAddressConflictError_Fragment | ErrorResult_OrderLimitError_Fragment | ErrorResult_NegativeQuantityError_Fragment | ErrorResult_InsufficientStockError_Fragment;\n\nexport type ShippingMethodFragment = (\n  { __typename?: 'ShippingMethod' }\n  & Pick<ShippingMethod, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'name' | 'description' | 'fulfillmentHandlerCode'>\n  & { checker: (\n    { __typename?: 'ConfigurableOperation' }\n    & ConfigurableOperationFragment\n  ), calculator: (\n    { __typename?: 'ConfigurableOperation' }\n    & ConfigurableOperationFragment\n  ), translations: Array<(\n    { __typename?: 'ShippingMethodTranslation' }\n    & Pick<ShippingMethodTranslation, 'id' | 'languageCode' | 'name' | 'description'>\n  )> }\n);\n\nexport type GetShippingMethodListQueryVariables = Exact<{\n  options?: Maybe<ShippingMethodListOptions>;\n}>;\n\n\nexport type GetShippingMethodListQuery = { shippingMethods: (\n    { __typename?: 'ShippingMethodList' }\n    & Pick<ShippingMethodList, 'totalItems'>\n    & { items: Array<(\n      { __typename?: 'ShippingMethod' }\n      & ShippingMethodFragment\n    )> }\n  ) };\n\nexport type GetShippingMethodQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetShippingMethodQuery = { shippingMethod?: Maybe<(\n    { __typename?: 'ShippingMethod' }\n    & ShippingMethodFragment\n  )> };\n\nexport type GetShippingMethodOperationsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetShippingMethodOperationsQuery = { shippingEligibilityCheckers: Array<(\n    { __typename?: 'ConfigurableOperationDefinition' }\n    & ConfigurableOperationDefFragment\n  )>, shippingCalculators: Array<(\n    { __typename?: 'ConfigurableOperationDefinition' }\n    & ConfigurableOperationDefFragment\n  )>, fulfillmentHandlers: Array<(\n    { __typename?: 'ConfigurableOperationDefinition' }\n    & ConfigurableOperationDefFragment\n  )> };\n\nexport type CreateShippingMethodMutationVariables = Exact<{\n  input: CreateShippingMethodInput;\n}>;\n\n\nexport type CreateShippingMethodMutation = { createShippingMethod: (\n    { __typename?: 'ShippingMethod' }\n    & ShippingMethodFragment\n  ) };\n\nexport type UpdateShippingMethodMutationVariables = Exact<{\n  input: UpdateShippingMethodInput;\n}>;\n\n\nexport type UpdateShippingMethodMutation = { updateShippingMethod: (\n    { __typename?: 'ShippingMethod' }\n    & ShippingMethodFragment\n  ) };\n\nexport type DeleteShippingMethodMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type DeleteShippingMethodMutation = { deleteShippingMethod: (\n    { __typename?: 'DeletionResponse' }\n    & Pick<DeletionResponse, 'result' | 'message'>\n  ) };\n\nexport type TestShippingMethodQueryVariables = Exact<{\n  input: TestShippingMethodInput;\n}>;\n\n\nexport type TestShippingMethodQuery = { testShippingMethod: (\n    { __typename?: 'TestShippingMethodResult' }\n    & Pick<TestShippingMethodResult, 'eligible'>\n    & { quote?: Maybe<(\n      { __typename?: 'TestShippingMethodQuote' }\n      & Pick<TestShippingMethodQuote, 'price' | 'priceWithTax' | 'metadata'>\n    )> }\n  ) };\n\nexport type TestEligibleShippingMethodsQueryVariables = Exact<{\n  input: TestEligibleShippingMethodsInput;\n}>;\n\n\nexport type TestEligibleShippingMethodsQuery = { testEligibleShippingMethods: Array<(\n    { __typename?: 'ShippingMethodQuote' }\n    & Pick<ShippingMethodQuote, 'id' | 'name' | 'code' | 'description' | 'price' | 'priceWithTax' | 'metadata'>\n  )> };\n\ntype DiscriminateUnion<T, U> = T extends U ? T : never;\n\nexport namespace Role {\n  export type Fragment = RoleFragment;\n  export type Channels = NonNullable<(NonNullable<RoleFragment['channels']>)[number]>;\n}\n\nexport namespace Administrator {\n  export type Fragment = AdministratorFragment;\n  export type User = (NonNullable<AdministratorFragment['user']>);\n  export type Roles = NonNullable<(NonNullable<(NonNullable<AdministratorFragment['user']>)['roles']>)[number]>;\n}\n\nexport namespace GetAdministrators {\n  export type Variables = GetAdministratorsQueryVariables;\n  export type Query = GetAdministratorsQuery;\n  export type Administrators = (NonNullable<GetAdministratorsQuery['administrators']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetAdministratorsQuery['administrators']>)['items']>)[number]>;\n}\n\nexport namespace GetActiveAdministrator {\n  export type Variables = GetActiveAdministratorQueryVariables;\n  export type Query = GetActiveAdministratorQuery;\n  export type ActiveAdministrator = (NonNullable<GetActiveAdministratorQuery['activeAdministrator']>);\n}\n\nexport namespace GetAdministrator {\n  export type Variables = GetAdministratorQueryVariables;\n  export type Query = GetAdministratorQuery;\n  export type Administrator = (NonNullable<GetAdministratorQuery['administrator']>);\n}\n\nexport namespace CreateAdministrator {\n  export type Variables = CreateAdministratorMutationVariables;\n  export type Mutation = CreateAdministratorMutation;\n  export type CreateAdministrator = (NonNullable<CreateAdministratorMutation['createAdministrator']>);\n}\n\nexport namespace UpdateAdministrator {\n  export type Variables = UpdateAdministratorMutationVariables;\n  export type Mutation = UpdateAdministratorMutation;\n  export type UpdateAdministrator = (NonNullable<UpdateAdministratorMutation['updateAdministrator']>);\n}\n\nexport namespace UpdateActiveAdministrator {\n  export type Variables = UpdateActiveAdministratorMutationVariables;\n  export type Mutation = UpdateActiveAdministratorMutation;\n  export type UpdateActiveAdministrator = (NonNullable<UpdateActiveAdministratorMutation['updateActiveAdministrator']>);\n}\n\nexport namespace DeleteAdministrator {\n  export type Variables = DeleteAdministratorMutationVariables;\n  export type Mutation = DeleteAdministratorMutation;\n  export type DeleteAdministrator = (NonNullable<DeleteAdministratorMutation['deleteAdministrator']>);\n}\n\nexport namespace GetRoles {\n  export type Variables = GetRolesQueryVariables;\n  export type Query = GetRolesQuery;\n  export type Roles = (NonNullable<GetRolesQuery['roles']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetRolesQuery['roles']>)['items']>)[number]>;\n}\n\nexport namespace GetRole {\n  export type Variables = GetRoleQueryVariables;\n  export type Query = GetRoleQuery;\n  export type Role = (NonNullable<GetRoleQuery['role']>);\n}\n\nexport namespace CreateRole {\n  export type Variables = CreateRoleMutationVariables;\n  export type Mutation = CreateRoleMutation;\n  export type CreateRole = (NonNullable<CreateRoleMutation['createRole']>);\n}\n\nexport namespace UpdateRole {\n  export type Variables = UpdateRoleMutationVariables;\n  export type Mutation = UpdateRoleMutation;\n  export type UpdateRole = (NonNullable<UpdateRoleMutation['updateRole']>);\n}\n\nexport namespace DeleteRole {\n  export type Variables = DeleteRoleMutationVariables;\n  export type Mutation = DeleteRoleMutation;\n  export type DeleteRole = (NonNullable<DeleteRoleMutation['deleteRole']>);\n}\n\nexport namespace AssignRoleToAdministrator {\n  export type Variables = AssignRoleToAdministratorMutationVariables;\n  export type Mutation = AssignRoleToAdministratorMutation;\n  export type AssignRoleToAdministrator = (NonNullable<AssignRoleToAdministratorMutation['assignRoleToAdministrator']>);\n}\n\nexport namespace CurrentUser {\n  export type Fragment = CurrentUserFragment;\n  export type Channels = NonNullable<(NonNullable<CurrentUserFragment['channels']>)[number]>;\n}\n\nexport namespace AttemptLogin {\n  export type Variables = AttemptLoginMutationVariables;\n  export type Mutation = AttemptLoginMutation;\n  export type Login = (NonNullable<AttemptLoginMutation['login']>);\n}\n\nexport namespace LogOut {\n  export type Variables = LogOutMutationVariables;\n  export type Mutation = LogOutMutation;\n  export type Logout = (NonNullable<LogOutMutation['logout']>);\n}\n\nexport namespace GetCurrentUser {\n  export type Variables = GetCurrentUserQueryVariables;\n  export type Query = GetCurrentUserQuery;\n  export type Me = (NonNullable<GetCurrentUserQuery['me']>);\n}\n\nexport namespace RequestStarted {\n  export type Variables = RequestStartedMutationVariables;\n  export type Mutation = RequestStartedMutation;\n}\n\nexport namespace RequestCompleted {\n  export type Variables = RequestCompletedMutationVariables;\n  export type Mutation = RequestCompletedMutation;\n}\n\nexport namespace UserStatus {\n  export type Fragment = UserStatusFragment;\n  export type Channels = NonNullable<(NonNullable<UserStatusFragment['channels']>)[number]>;\n}\n\nexport namespace SetAsLoggedIn {\n  export type Variables = SetAsLoggedInMutationVariables;\n  export type Mutation = SetAsLoggedInMutation;\n  export type SetAsLoggedIn = (NonNullable<SetAsLoggedInMutation['setAsLoggedIn']>);\n}\n\nexport namespace SetAsLoggedOut {\n  export type Variables = SetAsLoggedOutMutationVariables;\n  export type Mutation = SetAsLoggedOutMutation;\n  export type SetAsLoggedOut = (NonNullable<SetAsLoggedOutMutation['setAsLoggedOut']>);\n}\n\nexport namespace SetUiLanguage {\n  export type Variables = SetUiLanguageMutationVariables;\n  export type Mutation = SetUiLanguageMutation;\n}\n\nexport namespace SetContentLanguage {\n  export type Variables = SetContentLanguageMutationVariables;\n  export type Mutation = SetContentLanguageMutation;\n}\n\nexport namespace SetUiTheme {\n  export type Variables = SetUiThemeMutationVariables;\n  export type Mutation = SetUiThemeMutation;\n}\n\nexport namespace GetNetworkStatus {\n  export type Variables = GetNetworkStatusQueryVariables;\n  export type Query = GetNetworkStatusQuery;\n  export type NetworkStatus = (NonNullable<GetNetworkStatusQuery['networkStatus']>);\n}\n\nexport namespace GetUserStatus {\n  export type Variables = GetUserStatusQueryVariables;\n  export type Query = GetUserStatusQuery;\n  export type UserStatus = (NonNullable<GetUserStatusQuery['userStatus']>);\n}\n\nexport namespace GetUiState {\n  export type Variables = GetUiStateQueryVariables;\n  export type Query = GetUiStateQuery;\n  export type UiState = (NonNullable<GetUiStateQuery['uiState']>);\n}\n\nexport namespace GetClientState {\n  export type Variables = GetClientStateQueryVariables;\n  export type Query = GetClientStateQuery;\n  export type NetworkStatus = (NonNullable<GetClientStateQuery['networkStatus']>);\n  export type UserStatus = (NonNullable<GetClientStateQuery['userStatus']>);\n  export type UiState = (NonNullable<GetClientStateQuery['uiState']>);\n}\n\nexport namespace SetActiveChannel {\n  export type Variables = SetActiveChannelMutationVariables;\n  export type Mutation = SetActiveChannelMutation;\n  export type SetActiveChannel = (NonNullable<SetActiveChannelMutation['setActiveChannel']>);\n}\n\nexport namespace UpdateUserChannels {\n  export type Variables = UpdateUserChannelsMutationVariables;\n  export type Mutation = UpdateUserChannelsMutation;\n  export type UpdateUserChannels = (NonNullable<UpdateUserChannelsMutation['updateUserChannels']>);\n}\n\nexport namespace GetCollectionFilters {\n  export type Variables = GetCollectionFiltersQueryVariables;\n  export type Query = GetCollectionFiltersQuery;\n  export type CollectionFilters = NonNullable<(NonNullable<GetCollectionFiltersQuery['collectionFilters']>)[number]>;\n}\n\nexport namespace Collection {\n  export type Fragment = CollectionFragment;\n  export type FeaturedAsset = (NonNullable<CollectionFragment['featuredAsset']>);\n  export type Assets = NonNullable<(NonNullable<CollectionFragment['assets']>)[number]>;\n  export type Filters = NonNullable<(NonNullable<CollectionFragment['filters']>)[number]>;\n  export type Translations = NonNullable<(NonNullable<CollectionFragment['translations']>)[number]>;\n  export type Parent = (NonNullable<CollectionFragment['parent']>);\n  export type Children = NonNullable<(NonNullable<CollectionFragment['children']>)[number]>;\n}\n\nexport namespace GetCollectionList {\n  export type Variables = GetCollectionListQueryVariables;\n  export type Query = GetCollectionListQuery;\n  export type Collections = (NonNullable<GetCollectionListQuery['collections']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetCollectionListQuery['collections']>)['items']>)[number]>;\n  export type FeaturedAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetCollectionListQuery['collections']>)['items']>)[number]>['featuredAsset']>);\n  export type Parent = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetCollectionListQuery['collections']>)['items']>)[number]>['parent']>);\n}\n\nexport namespace GetCollection {\n  export type Variables = GetCollectionQueryVariables;\n  export type Query = GetCollectionQuery;\n  export type Collection = (NonNullable<GetCollectionQuery['collection']>);\n}\n\nexport namespace CreateCollection {\n  export type Variables = CreateCollectionMutationVariables;\n  export type Mutation = CreateCollectionMutation;\n  export type CreateCollection = (NonNullable<CreateCollectionMutation['createCollection']>);\n}\n\nexport namespace UpdateCollection {\n  export type Variables = UpdateCollectionMutationVariables;\n  export type Mutation = UpdateCollectionMutation;\n  export type UpdateCollection = (NonNullable<UpdateCollectionMutation['updateCollection']>);\n}\n\nexport namespace MoveCollection {\n  export type Variables = MoveCollectionMutationVariables;\n  export type Mutation = MoveCollectionMutation;\n  export type MoveCollection = (NonNullable<MoveCollectionMutation['moveCollection']>);\n}\n\nexport namespace DeleteCollection {\n  export type Variables = DeleteCollectionMutationVariables;\n  export type Mutation = DeleteCollectionMutation;\n  export type DeleteCollection = (NonNullable<DeleteCollectionMutation['deleteCollection']>);\n}\n\nexport namespace GetCollectionContents {\n  export type Variables = GetCollectionContentsQueryVariables;\n  export type Query = GetCollectionContentsQuery;\n  export type Collection = (NonNullable<GetCollectionContentsQuery['collection']>);\n  export type ProductVariants = (NonNullable<(NonNullable<GetCollectionContentsQuery['collection']>)['productVariants']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCollectionContentsQuery['collection']>)['productVariants']>)['items']>)[number]>;\n}\n\nexport namespace Address {\n  export type Fragment = AddressFragment;\n  export type Country = (NonNullable<AddressFragment['country']>);\n}\n\nexport namespace Customer {\n  export type Fragment = CustomerFragment;\n  export type User = (NonNullable<CustomerFragment['user']>);\n  export type Addresses = NonNullable<(NonNullable<CustomerFragment['addresses']>)[number]>;\n}\n\nexport namespace GetCustomerList {\n  export type Variables = GetCustomerListQueryVariables;\n  export type Query = GetCustomerListQuery;\n  export type Customers = (NonNullable<GetCustomerListQuery['customers']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetCustomerListQuery['customers']>)['items']>)[number]>;\n  export type User = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetCustomerListQuery['customers']>)['items']>)[number]>['user']>);\n}\n\nexport namespace GetCustomer {\n  export type Variables = GetCustomerQueryVariables;\n  export type Query = GetCustomerQuery;\n  export type Customer = (NonNullable<GetCustomerQuery['customer']>);\n  export type Groups = NonNullable<(NonNullable<(NonNullable<GetCustomerQuery['customer']>)['groups']>)[number]>;\n  export type Orders = (NonNullable<(NonNullable<GetCustomerQuery['customer']>)['orders']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCustomerQuery['customer']>)['orders']>)['items']>)[number]>;\n}\n\nexport namespace CreateCustomer {\n  export type Variables = CreateCustomerMutationVariables;\n  export type Mutation = CreateCustomerMutation;\n  export type CreateCustomer = (NonNullable<CreateCustomerMutation['createCustomer']>);\n}\n\nexport namespace UpdateCustomer {\n  export type Variables = UpdateCustomerMutationVariables;\n  export type Mutation = UpdateCustomerMutation;\n  export type UpdateCustomer = (NonNullable<UpdateCustomerMutation['updateCustomer']>);\n}\n\nexport namespace DeleteCustomer {\n  export type Variables = DeleteCustomerMutationVariables;\n  export type Mutation = DeleteCustomerMutation;\n  export type DeleteCustomer = (NonNullable<DeleteCustomerMutation['deleteCustomer']>);\n}\n\nexport namespace CreateCustomerAddress {\n  export type Variables = CreateCustomerAddressMutationVariables;\n  export type Mutation = CreateCustomerAddressMutation;\n  export type CreateCustomerAddress = (NonNullable<CreateCustomerAddressMutation['createCustomerAddress']>);\n}\n\nexport namespace UpdateCustomerAddress {\n  export type Variables = UpdateCustomerAddressMutationVariables;\n  export type Mutation = UpdateCustomerAddressMutation;\n  export type UpdateCustomerAddress = (NonNullable<UpdateCustomerAddressMutation['updateCustomerAddress']>);\n}\n\nexport namespace CreateCustomerGroup {\n  export type Variables = CreateCustomerGroupMutationVariables;\n  export type Mutation = CreateCustomerGroupMutation;\n  export type CreateCustomerGroup = (NonNullable<CreateCustomerGroupMutation['createCustomerGroup']>);\n}\n\nexport namespace UpdateCustomerGroup {\n  export type Variables = UpdateCustomerGroupMutationVariables;\n  export type Mutation = UpdateCustomerGroupMutation;\n  export type UpdateCustomerGroup = (NonNullable<UpdateCustomerGroupMutation['updateCustomerGroup']>);\n}\n\nexport namespace DeleteCustomerGroup {\n  export type Variables = DeleteCustomerGroupMutationVariables;\n  export type Mutation = DeleteCustomerGroupMutation;\n  export type DeleteCustomerGroup = (NonNullable<DeleteCustomerGroupMutation['deleteCustomerGroup']>);\n}\n\nexport namespace GetCustomerGroups {\n  export type Variables = GetCustomerGroupsQueryVariables;\n  export type Query = GetCustomerGroupsQuery;\n  export type CustomerGroups = (NonNullable<GetCustomerGroupsQuery['customerGroups']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetCustomerGroupsQuery['customerGroups']>)['items']>)[number]>;\n}\n\nexport namespace GetCustomerGroupWithCustomers {\n  export type Variables = GetCustomerGroupWithCustomersQueryVariables;\n  export type Query = GetCustomerGroupWithCustomersQuery;\n  export type CustomerGroup = (NonNullable<GetCustomerGroupWithCustomersQuery['customerGroup']>);\n  export type Customers = (NonNullable<(NonNullable<GetCustomerGroupWithCustomersQuery['customerGroup']>)['customers']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCustomerGroupWithCustomersQuery['customerGroup']>)['customers']>)['items']>)[number]>;\n}\n\nexport namespace AddCustomersToGroup {\n  export type Variables = AddCustomersToGroupMutationVariables;\n  export type Mutation = AddCustomersToGroupMutation;\n  export type AddCustomersToGroup = (NonNullable<AddCustomersToGroupMutation['addCustomersToGroup']>);\n}\n\nexport namespace RemoveCustomersFromGroup {\n  export type Variables = RemoveCustomersFromGroupMutationVariables;\n  export type Mutation = RemoveCustomersFromGroupMutation;\n  export type RemoveCustomersFromGroup = (NonNullable<RemoveCustomersFromGroupMutation['removeCustomersFromGroup']>);\n}\n\nexport namespace GetCustomerHistory {\n  export type Variables = GetCustomerHistoryQueryVariables;\n  export type Query = GetCustomerHistoryQuery;\n  export type Customer = (NonNullable<GetCustomerHistoryQuery['customer']>);\n  export type History = (NonNullable<(NonNullable<GetCustomerHistoryQuery['customer']>)['history']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCustomerHistoryQuery['customer']>)['history']>)['items']>)[number]>;\n  export type Administrator = (NonNullable<NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCustomerHistoryQuery['customer']>)['history']>)['items']>)[number]>['administrator']>);\n}\n\nexport namespace AddNoteToCustomer {\n  export type Variables = AddNoteToCustomerMutationVariables;\n  export type Mutation = AddNoteToCustomerMutation;\n  export type AddNoteToCustomer = (NonNullable<AddNoteToCustomerMutation['addNoteToCustomer']>);\n}\n\nexport namespace UpdateCustomerNote {\n  export type Variables = UpdateCustomerNoteMutationVariables;\n  export type Mutation = UpdateCustomerNoteMutation;\n  export type UpdateCustomerNote = (NonNullable<UpdateCustomerNoteMutation['updateCustomerNote']>);\n}\n\nexport namespace DeleteCustomerNote {\n  export type Variables = DeleteCustomerNoteMutationVariables;\n  export type Mutation = DeleteCustomerNoteMutation;\n  export type DeleteCustomerNote = (NonNullable<DeleteCustomerNoteMutation['deleteCustomerNote']>);\n}\n\nexport namespace FacetValue {\n  export type Fragment = FacetValueFragment;\n  export type Translations = NonNullable<(NonNullable<FacetValueFragment['translations']>)[number]>;\n  export type Facet = (NonNullable<FacetValueFragment['facet']>);\n}\n\nexport namespace FacetWithValues {\n  export type Fragment = FacetWithValuesFragment;\n  export type Translations = NonNullable<(NonNullable<FacetWithValuesFragment['translations']>)[number]>;\n  export type Values = NonNullable<(NonNullable<FacetWithValuesFragment['values']>)[number]>;\n}\n\nexport namespace CreateFacet {\n  export type Variables = CreateFacetMutationVariables;\n  export type Mutation = CreateFacetMutation;\n  export type CreateFacet = (NonNullable<CreateFacetMutation['createFacet']>);\n}\n\nexport namespace UpdateFacet {\n  export type Variables = UpdateFacetMutationVariables;\n  export type Mutation = UpdateFacetMutation;\n  export type UpdateFacet = (NonNullable<UpdateFacetMutation['updateFacet']>);\n}\n\nexport namespace DeleteFacet {\n  export type Variables = DeleteFacetMutationVariables;\n  export type Mutation = DeleteFacetMutation;\n  export type DeleteFacet = (NonNullable<DeleteFacetMutation['deleteFacet']>);\n}\n\nexport namespace CreateFacetValues {\n  export type Variables = CreateFacetValuesMutationVariables;\n  export type Mutation = CreateFacetValuesMutation;\n  export type CreateFacetValues = NonNullable<(NonNullable<CreateFacetValuesMutation['createFacetValues']>)[number]>;\n}\n\nexport namespace UpdateFacetValues {\n  export type Variables = UpdateFacetValuesMutationVariables;\n  export type Mutation = UpdateFacetValuesMutation;\n  export type UpdateFacetValues = NonNullable<(NonNullable<UpdateFacetValuesMutation['updateFacetValues']>)[number]>;\n}\n\nexport namespace DeleteFacetValues {\n  export type Variables = DeleteFacetValuesMutationVariables;\n  export type Mutation = DeleteFacetValuesMutation;\n  export type DeleteFacetValues = NonNullable<(NonNullable<DeleteFacetValuesMutation['deleteFacetValues']>)[number]>;\n}\n\nexport namespace GetFacetList {\n  export type Variables = GetFacetListQueryVariables;\n  export type Query = GetFacetListQuery;\n  export type Facets = (NonNullable<GetFacetListQuery['facets']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetFacetListQuery['facets']>)['items']>)[number]>;\n}\n\nexport namespace GetFacetWithValues {\n  export type Variables = GetFacetWithValuesQueryVariables;\n  export type Query = GetFacetWithValuesQuery;\n  export type Facet = (NonNullable<GetFacetWithValuesQuery['facet']>);\n}\n\nexport namespace Discount {\n  export type Fragment = DiscountFragment;\n}\n\nexport namespace Refund {\n  export type Fragment = RefundFragment;\n}\n\nexport namespace OrderAddress {\n  export type Fragment = OrderAddressFragment;\n}\n\nexport namespace Order {\n  export type Fragment = OrderFragment;\n  export type Customer = (NonNullable<OrderFragment['customer']>);\n  export type ShippingLines = NonNullable<(NonNullable<OrderFragment['shippingLines']>)[number]>;\n  export type ShippingMethod = (NonNullable<NonNullable<(NonNullable<OrderFragment['shippingLines']>)[number]>['shippingMethod']>);\n}\n\nexport namespace Fulfillment {\n  export type Fragment = FulfillmentFragment;\n  export type OrderItems = NonNullable<(NonNullable<FulfillmentFragment['orderItems']>)[number]>;\n}\n\nexport namespace OrderLine {\n  export type Fragment = OrderLineFragment;\n  export type FeaturedAsset = (NonNullable<OrderLineFragment['featuredAsset']>);\n  export type ProductVariant = (NonNullable<OrderLineFragment['productVariant']>);\n  export type Discounts = NonNullable<(NonNullable<OrderLineFragment['discounts']>)[number]>;\n  export type Items = NonNullable<(NonNullable<OrderLineFragment['items']>)[number]>;\n  export type Fulfillment = (NonNullable<NonNullable<(NonNullable<OrderLineFragment['items']>)[number]>['fulfillment']>);\n}\n\nexport namespace OrderDetail {\n  export type Fragment = OrderDetailFragment;\n  export type Customer = (NonNullable<OrderDetailFragment['customer']>);\n  export type Lines = NonNullable<(NonNullable<OrderDetailFragment['lines']>)[number]>;\n  export type Surcharges = NonNullable<(NonNullable<OrderDetailFragment['surcharges']>)[number]>;\n  export type Discounts = NonNullable<(NonNullable<OrderDetailFragment['discounts']>)[number]>;\n  export type Promotions = NonNullable<(NonNullable<OrderDetailFragment['promotions']>)[number]>;\n  export type ShippingLines = NonNullable<(NonNullable<OrderDetailFragment['shippingLines']>)[number]>;\n  export type ShippingMethod = (NonNullable<NonNullable<(NonNullable<OrderDetailFragment['shippingLines']>)[number]>['shippingMethod']>);\n  export type TaxSummary = NonNullable<(NonNullable<OrderDetailFragment['taxSummary']>)[number]>;\n  export type ShippingAddress = (NonNullable<OrderDetailFragment['shippingAddress']>);\n  export type BillingAddress = (NonNullable<OrderDetailFragment['billingAddress']>);\n  export type Payments = NonNullable<(NonNullable<OrderDetailFragment['payments']>)[number]>;\n  export type Refunds = NonNullable<(NonNullable<NonNullable<(NonNullable<OrderDetailFragment['payments']>)[number]>['refunds']>)[number]>;\n  export type OrderItems = NonNullable<(NonNullable<NonNullable<(NonNullable<NonNullable<(NonNullable<OrderDetailFragment['payments']>)[number]>['refunds']>)[number]>['orderItems']>)[number]>;\n  export type Fulfillments = NonNullable<(NonNullable<OrderDetailFragment['fulfillments']>)[number]>;\n  export type Modifications = NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>;\n  export type Payment = (NonNullable<NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>['payment']>);\n  export type _OrderItems = NonNullable<(NonNullable<NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>['orderItems']>)[number]>;\n  export type Refund = (NonNullable<NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>['refund']>);\n  export type _Surcharges = NonNullable<(NonNullable<NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>['surcharges']>)[number]>;\n}\n\nexport namespace GetOrderList {\n  export type Variables = GetOrderListQueryVariables;\n  export type Query = GetOrderListQuery;\n  export type Orders = (NonNullable<GetOrderListQuery['orders']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetOrderListQuery['orders']>)['items']>)[number]>;\n}\n\nexport namespace GetOrder {\n  export type Variables = GetOrderQueryVariables;\n  export type Query = GetOrderQuery;\n  export type Order = (NonNullable<GetOrderQuery['order']>);\n}\n\nexport namespace SettlePayment {\n  export type Variables = SettlePaymentMutationVariables;\n  export type Mutation = SettlePaymentMutation;\n  export type SettlePayment = (NonNullable<SettlePaymentMutation['settlePayment']>);\n  export type PaymentInlineFragment = (DiscriminateUnion<(NonNullable<SettlePaymentMutation['settlePayment']>), { __typename?: 'Payment' }>);\n  export type SettlePaymentErrorInlineFragment = (DiscriminateUnion<(NonNullable<SettlePaymentMutation['settlePayment']>), { __typename?: 'SettlePaymentError' }>);\n  export type PaymentStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<SettlePaymentMutation['settlePayment']>), { __typename?: 'PaymentStateTransitionError' }>);\n  export type OrderStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<SettlePaymentMutation['settlePayment']>), { __typename?: 'OrderStateTransitionError' }>);\n}\n\nexport namespace TransitionPaymentToState {\n  export type Variables = TransitionPaymentToStateMutationVariables;\n  export type Mutation = TransitionPaymentToStateMutation;\n  export type TransitionPaymentToState = (NonNullable<TransitionPaymentToStateMutation['transitionPaymentToState']>);\n  export type PaymentInlineFragment = (DiscriminateUnion<(NonNullable<TransitionPaymentToStateMutation['transitionPaymentToState']>), { __typename?: 'Payment' }>);\n  export type PaymentStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<TransitionPaymentToStateMutation['transitionPaymentToState']>), { __typename?: 'PaymentStateTransitionError' }>);\n}\n\nexport namespace CreateFulfillment {\n  export type Variables = CreateFulfillmentMutationVariables;\n  export type Mutation = CreateFulfillmentMutation;\n  export type AddFulfillmentToOrder = (NonNullable<CreateFulfillmentMutation['addFulfillmentToOrder']>);\n  export type CreateFulfillmentErrorInlineFragment = (DiscriminateUnion<(NonNullable<CreateFulfillmentMutation['addFulfillmentToOrder']>), { __typename?: 'CreateFulfillmentError' }>);\n  export type FulfillmentStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<CreateFulfillmentMutation['addFulfillmentToOrder']>), { __typename?: 'FulfillmentStateTransitionError' }>);\n}\n\nexport namespace CancelOrder {\n  export type Variables = CancelOrderMutationVariables;\n  export type Mutation = CancelOrderMutation;\n  export type CancelOrder = (NonNullable<CancelOrderMutation['cancelOrder']>);\n}\n\nexport namespace RefundOrder {\n  export type Variables = RefundOrderMutationVariables;\n  export type Mutation = RefundOrderMutation;\n  export type RefundOrder = (NonNullable<RefundOrderMutation['refundOrder']>);\n}\n\nexport namespace SettleRefund {\n  export type Variables = SettleRefundMutationVariables;\n  export type Mutation = SettleRefundMutation;\n  export type SettleRefund = (NonNullable<SettleRefundMutation['settleRefund']>);\n}\n\nexport namespace GetOrderHistory {\n  export type Variables = GetOrderHistoryQueryVariables;\n  export type Query = GetOrderHistoryQuery;\n  export type Order = (NonNullable<GetOrderHistoryQuery['order']>);\n  export type History = (NonNullable<(NonNullable<GetOrderHistoryQuery['order']>)['history']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetOrderHistoryQuery['order']>)['history']>)['items']>)[number]>;\n  export type Administrator = (NonNullable<NonNullable<(NonNullable<(NonNullable<(NonNullable<GetOrderHistoryQuery['order']>)['history']>)['items']>)[number]>['administrator']>);\n}\n\nexport namespace AddNoteToOrder {\n  export type Variables = AddNoteToOrderMutationVariables;\n  export type Mutation = AddNoteToOrderMutation;\n  export type AddNoteToOrder = (NonNullable<AddNoteToOrderMutation['addNoteToOrder']>);\n}\n\nexport namespace UpdateOrderNote {\n  export type Variables = UpdateOrderNoteMutationVariables;\n  export type Mutation = UpdateOrderNoteMutation;\n  export type UpdateOrderNote = (NonNullable<UpdateOrderNoteMutation['updateOrderNote']>);\n}\n\nexport namespace DeleteOrderNote {\n  export type Variables = DeleteOrderNoteMutationVariables;\n  export type Mutation = DeleteOrderNoteMutation;\n  export type DeleteOrderNote = (NonNullable<DeleteOrderNoteMutation['deleteOrderNote']>);\n}\n\nexport namespace TransitionOrderToState {\n  export type Variables = TransitionOrderToStateMutationVariables;\n  export type Mutation = TransitionOrderToStateMutation;\n  export type TransitionOrderToState = (NonNullable<TransitionOrderToStateMutation['transitionOrderToState']>);\n  export type OrderStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<TransitionOrderToStateMutation['transitionOrderToState']>), { __typename?: 'OrderStateTransitionError' }>);\n}\n\nexport namespace UpdateOrderCustomFields {\n  export type Variables = UpdateOrderCustomFieldsMutationVariables;\n  export type Mutation = UpdateOrderCustomFieldsMutation;\n  export type SetOrderCustomFields = (NonNullable<UpdateOrderCustomFieldsMutation['setOrderCustomFields']>);\n}\n\nexport namespace TransitionFulfillmentToState {\n  export type Variables = TransitionFulfillmentToStateMutationVariables;\n  export type Mutation = TransitionFulfillmentToStateMutation;\n  export type TransitionFulfillmentToState = (NonNullable<TransitionFulfillmentToStateMutation['transitionFulfillmentToState']>);\n  export type FulfillmentStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<TransitionFulfillmentToStateMutation['transitionFulfillmentToState']>), { __typename?: 'FulfillmentStateTransitionError' }>);\n}\n\nexport namespace GetOrderSummary {\n  export type Variables = GetOrderSummaryQueryVariables;\n  export type Query = GetOrderSummaryQuery;\n  export type Orders = (NonNullable<GetOrderSummaryQuery['orders']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetOrderSummaryQuery['orders']>)['items']>)[number]>;\n}\n\nexport namespace ModifyOrder {\n  export type Variables = ModifyOrderMutationVariables;\n  export type Mutation = ModifyOrderMutation;\n  export type ModifyOrder = (NonNullable<ModifyOrderMutation['modifyOrder']>);\n}\n\nexport namespace AddManualPayment {\n  export type Variables = AddManualPaymentMutationVariables;\n  export type Mutation = AddManualPaymentMutation;\n  export type AddManualPaymentToOrder = (NonNullable<AddManualPaymentMutation['addManualPaymentToOrder']>);\n}\n\nexport namespace Asset {\n  export type Fragment = AssetFragment;\n  export type FocalPoint = (NonNullable<AssetFragment['focalPoint']>);\n}\n\nexport namespace Tag {\n  export type Fragment = TagFragment;\n}\n\nexport namespace ProductOptionGroup {\n  export type Fragment = ProductOptionGroupFragment;\n  export type Translations = NonNullable<(NonNullable<ProductOptionGroupFragment['translations']>)[number]>;\n}\n\nexport namespace ProductOption {\n  export type Fragment = ProductOptionFragment;\n  export type Translations = NonNullable<(NonNullable<ProductOptionFragment['translations']>)[number]>;\n}\n\nexport namespace ProductVariant {\n  export type Fragment = ProductVariantFragment;\n  export type TaxRateApplied = (NonNullable<ProductVariantFragment['taxRateApplied']>);\n  export type TaxCategory = (NonNullable<ProductVariantFragment['taxCategory']>);\n  export type Options = NonNullable<(NonNullable<ProductVariantFragment['options']>)[number]>;\n  export type FacetValues = NonNullable<(NonNullable<ProductVariantFragment['facetValues']>)[number]>;\n  export type Facet = (NonNullable<NonNullable<(NonNullable<ProductVariantFragment['facetValues']>)[number]>['facet']>);\n  export type FeaturedAsset = (NonNullable<ProductVariantFragment['featuredAsset']>);\n  export type Assets = NonNullable<(NonNullable<ProductVariantFragment['assets']>)[number]>;\n  export type Translations = NonNullable<(NonNullable<ProductVariantFragment['translations']>)[number]>;\n  export type Channels = NonNullable<(NonNullable<ProductVariantFragment['channels']>)[number]>;\n}\n\nexport namespace ProductWithVariants {\n  export type Fragment = ProductWithVariantsFragment;\n  export type FeaturedAsset = (NonNullable<ProductWithVariantsFragment['featuredAsset']>);\n  export type Assets = NonNullable<(NonNullable<ProductWithVariantsFragment['assets']>)[number]>;\n  export type Translations = NonNullable<(NonNullable<ProductWithVariantsFragment['translations']>)[number]>;\n  export type OptionGroups = NonNullable<(NonNullable<ProductWithVariantsFragment['optionGroups']>)[number]>;\n  export type Variants = NonNullable<(NonNullable<ProductWithVariantsFragment['variants']>)[number]>;\n  export type FacetValues = NonNullable<(NonNullable<ProductWithVariantsFragment['facetValues']>)[number]>;\n  export type Facet = (NonNullable<NonNullable<(NonNullable<ProductWithVariantsFragment['facetValues']>)[number]>['facet']>);\n  export type Channels = NonNullable<(NonNullable<ProductWithVariantsFragment['channels']>)[number]>;\n}\n\nexport namespace ProductOptionGroupWithOptions {\n  export type Fragment = ProductOptionGroupWithOptionsFragment;\n  export type Translations = NonNullable<(NonNullable<ProductOptionGroupWithOptionsFragment['translations']>)[number]>;\n  export type Options = NonNullable<(NonNullable<ProductOptionGroupWithOptionsFragment['options']>)[number]>;\n  export type _Translations = NonNullable<(NonNullable<NonNullable<(NonNullable<ProductOptionGroupWithOptionsFragment['options']>)[number]>['translations']>)[number]>;\n}\n\nexport namespace UpdateProduct {\n  export type Variables = UpdateProductMutationVariables;\n  export type Mutation = UpdateProductMutation;\n  export type UpdateProduct = (NonNullable<UpdateProductMutation['updateProduct']>);\n}\n\nexport namespace CreateProduct {\n  export type Variables = CreateProductMutationVariables;\n  export type Mutation = CreateProductMutation;\n  export type CreateProduct = (NonNullable<CreateProductMutation['createProduct']>);\n}\n\nexport namespace DeleteProduct {\n  export type Variables = DeleteProductMutationVariables;\n  export type Mutation = DeleteProductMutation;\n  export type DeleteProduct = (NonNullable<DeleteProductMutation['deleteProduct']>);\n}\n\nexport namespace CreateProductVariants {\n  export type Variables = CreateProductVariantsMutationVariables;\n  export type Mutation = CreateProductVariantsMutation;\n  export type CreateProductVariants = NonNullable<(NonNullable<CreateProductVariantsMutation['createProductVariants']>)[number]>;\n}\n\nexport namespace UpdateProductVariants {\n  export type Variables = UpdateProductVariantsMutationVariables;\n  export type Mutation = UpdateProductVariantsMutation;\n  export type UpdateProductVariants = NonNullable<(NonNullable<UpdateProductVariantsMutation['updateProductVariants']>)[number]>;\n}\n\nexport namespace CreateProductOptionGroup {\n  export type Variables = CreateProductOptionGroupMutationVariables;\n  export type Mutation = CreateProductOptionGroupMutation;\n  export type CreateProductOptionGroup = (NonNullable<CreateProductOptionGroupMutation['createProductOptionGroup']>);\n}\n\nexport namespace GetProductOptionGroup {\n  export type Variables = GetProductOptionGroupQueryVariables;\n  export type Query = GetProductOptionGroupQuery;\n  export type ProductOptionGroup = (NonNullable<GetProductOptionGroupQuery['productOptionGroup']>);\n}\n\nexport namespace AddOptionToGroup {\n  export type Variables = AddOptionToGroupMutationVariables;\n  export type Mutation = AddOptionToGroupMutation;\n  export type CreateProductOption = (NonNullable<AddOptionToGroupMutation['createProductOption']>);\n}\n\nexport namespace AddOptionGroupToProduct {\n  export type Variables = AddOptionGroupToProductMutationVariables;\n  export type Mutation = AddOptionGroupToProductMutation;\n  export type AddOptionGroupToProduct = (NonNullable<AddOptionGroupToProductMutation['addOptionGroupToProduct']>);\n  export type OptionGroups = NonNullable<(NonNullable<(NonNullable<AddOptionGroupToProductMutation['addOptionGroupToProduct']>)['optionGroups']>)[number]>;\n  export type Options = NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<AddOptionGroupToProductMutation['addOptionGroupToProduct']>)['optionGroups']>)[number]>['options']>)[number]>;\n}\n\nexport namespace RemoveOptionGroupFromProduct {\n  export type Variables = RemoveOptionGroupFromProductMutationVariables;\n  export type Mutation = RemoveOptionGroupFromProductMutation;\n  export type RemoveOptionGroupFromProduct = (NonNullable<RemoveOptionGroupFromProductMutation['removeOptionGroupFromProduct']>);\n  export type ProductInlineFragment = (DiscriminateUnion<(NonNullable<RemoveOptionGroupFromProductMutation['removeOptionGroupFromProduct']>), { __typename?: 'Product' }>);\n  export type OptionGroups = NonNullable<(NonNullable<(DiscriminateUnion<(NonNullable<RemoveOptionGroupFromProductMutation['removeOptionGroupFromProduct']>), { __typename?: 'Product' }>)['optionGroups']>)[number]>;\n  export type Options = NonNullable<(NonNullable<NonNullable<(NonNullable<(DiscriminateUnion<(NonNullable<RemoveOptionGroupFromProductMutation['removeOptionGroupFromProduct']>), { __typename?: 'Product' }>)['optionGroups']>)[number]>['options']>)[number]>;\n}\n\nexport namespace GetProductWithVariants {\n  export type Variables = GetProductWithVariantsQueryVariables;\n  export type Query = GetProductWithVariantsQuery;\n  export type Product = (NonNullable<GetProductWithVariantsQuery['product']>);\n}\n\nexport namespace GetProductSimple {\n  export type Variables = GetProductSimpleQueryVariables;\n  export type Query = GetProductSimpleQuery;\n  export type Product = (NonNullable<GetProductSimpleQuery['product']>);\n  export type FeaturedAsset = (NonNullable<(NonNullable<GetProductSimpleQuery['product']>)['featuredAsset']>);\n}\n\nexport namespace GetProductList {\n  export type Variables = GetProductListQueryVariables;\n  export type Query = GetProductListQuery;\n  export type Products = (NonNullable<GetProductListQuery['products']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetProductListQuery['products']>)['items']>)[number]>;\n  export type FeaturedAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductListQuery['products']>)['items']>)[number]>['featuredAsset']>);\n}\n\nexport namespace GetProductOptionGroups {\n  export type Variables = GetProductOptionGroupsQueryVariables;\n  export type Query = GetProductOptionGroupsQuery;\n  export type ProductOptionGroups = NonNullable<(NonNullable<GetProductOptionGroupsQuery['productOptionGroups']>)[number]>;\n  export type Options = NonNullable<(NonNullable<NonNullable<(NonNullable<GetProductOptionGroupsQuery['productOptionGroups']>)[number]>['options']>)[number]>;\n}\n\nexport namespace GetAssetList {\n  export type Variables = GetAssetListQueryVariables;\n  export type Query = GetAssetListQuery;\n  export type Assets = (NonNullable<GetAssetListQuery['assets']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetAssetListQuery['assets']>)['items']>)[number]>;\n  export type Tags = NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetAssetListQuery['assets']>)['items']>)[number]>['tags']>)[number]>;\n}\n\nexport namespace GetAsset {\n  export type Variables = GetAssetQueryVariables;\n  export type Query = GetAssetQuery;\n  export type Asset = (NonNullable<GetAssetQuery['asset']>);\n  export type Tags = NonNullable<(NonNullable<(NonNullable<GetAssetQuery['asset']>)['tags']>)[number]>;\n}\n\nexport namespace CreateAssets {\n  export type Variables = CreateAssetsMutationVariables;\n  export type Mutation = CreateAssetsMutation;\n  export type CreateAssets = NonNullable<(NonNullable<CreateAssetsMutation['createAssets']>)[number]>;\n  export type AssetInlineFragment = (DiscriminateUnion<NonNullable<(NonNullable<CreateAssetsMutation['createAssets']>)[number]>, { __typename?: 'Asset' }>);\n  export type Tags = NonNullable<(NonNullable<(DiscriminateUnion<NonNullable<(NonNullable<CreateAssetsMutation['createAssets']>)[number]>, { __typename?: 'Asset' }>)['tags']>)[number]>;\n  export type ErrorResultInlineFragment = (DiscriminateUnion<NonNullable<(NonNullable<CreateAssetsMutation['createAssets']>)[number]>, { __typename?: 'ErrorResult' }>);\n}\n\nexport namespace UpdateAsset {\n  export type Variables = UpdateAssetMutationVariables;\n  export type Mutation = UpdateAssetMutation;\n  export type UpdateAsset = (NonNullable<UpdateAssetMutation['updateAsset']>);\n  export type Tags = NonNullable<(NonNullable<(NonNullable<UpdateAssetMutation['updateAsset']>)['tags']>)[number]>;\n}\n\nexport namespace DeleteAssets {\n  export type Variables = DeleteAssetsMutationVariables;\n  export type Mutation = DeleteAssetsMutation;\n  export type DeleteAssets = (NonNullable<DeleteAssetsMutation['deleteAssets']>);\n}\n\nexport namespace SearchProducts {\n  export type Variables = SearchProductsQueryVariables;\n  export type Query = SearchProductsQuery;\n  export type Search = (NonNullable<SearchProductsQuery['search']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>;\n  export type ProductAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>['productAsset']>);\n  export type FocalPoint = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>['productAsset']>)['focalPoint']>);\n  export type ProductVariantAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>['productVariantAsset']>);\n  export type _FocalPoint = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>['productVariantAsset']>)['focalPoint']>);\n  export type FacetValues = NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['facetValues']>)[number]>;\n  export type FacetValue = (NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['facetValues']>)[number]>['facetValue']>);\n  export type Facet = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['facetValues']>)[number]>['facetValue']>)['facet']>);\n}\n\nexport namespace ProductSelectorSearch {\n  export type Variables = ProductSelectorSearchQueryVariables;\n  export type Query = ProductSelectorSearchQuery;\n  export type Search = (NonNullable<ProductSelectorSearchQuery['search']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>;\n  export type ProductAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['productAsset']>);\n  export type FocalPoint = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['productAsset']>)['focalPoint']>);\n  export type Price = (NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['price']>);\n  export type SinglePriceInlineFragment = (DiscriminateUnion<(NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['price']>), { __typename?: 'SinglePrice' }>);\n  export type PriceWithTax = (NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['priceWithTax']>);\n  export type _SinglePriceInlineFragment = (DiscriminateUnion<(NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['priceWithTax']>), { __typename?: 'SinglePrice' }>);\n}\n\nexport namespace UpdateProductOption {\n  export type Variables = UpdateProductOptionMutationVariables;\n  export type Mutation = UpdateProductOptionMutation;\n  export type UpdateProductOption = (NonNullable<UpdateProductOptionMutation['updateProductOption']>);\n}\n\nexport namespace DeleteProductVariant {\n  export type Variables = DeleteProductVariantMutationVariables;\n  export type Mutation = DeleteProductVariantMutation;\n  export type DeleteProductVariant = (NonNullable<DeleteProductVariantMutation['deleteProductVariant']>);\n}\n\nexport namespace GetProductVariantOptions {\n  export type Variables = GetProductVariantOptionsQueryVariables;\n  export type Query = GetProductVariantOptionsQuery;\n  export type Product = (NonNullable<GetProductVariantOptionsQuery['product']>);\n  export type OptionGroups = NonNullable<(NonNullable<(NonNullable<GetProductVariantOptionsQuery['product']>)['optionGroups']>)[number]>;\n  export type Options = NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantOptionsQuery['product']>)['optionGroups']>)[number]>['options']>)[number]>;\n  export type Variants = NonNullable<(NonNullable<(NonNullable<GetProductVariantOptionsQuery['product']>)['variants']>)[number]>;\n  export type _Options = NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantOptionsQuery['product']>)['variants']>)[number]>['options']>)[number]>;\n}\n\nexport namespace AssignProductsToChannel {\n  export type Variables = AssignProductsToChannelMutationVariables;\n  export type Mutation = AssignProductsToChannelMutation;\n  export type AssignProductsToChannel = NonNullable<(NonNullable<AssignProductsToChannelMutation['assignProductsToChannel']>)[number]>;\n  export type Channels = NonNullable<(NonNullable<NonNullable<(NonNullable<AssignProductsToChannelMutation['assignProductsToChannel']>)[number]>['channels']>)[number]>;\n}\n\nexport namespace AssignVariantsToChannel {\n  export type Variables = AssignVariantsToChannelMutationVariables;\n  export type Mutation = AssignVariantsToChannelMutation;\n  export type AssignProductVariantsToChannel = NonNullable<(NonNullable<AssignVariantsToChannelMutation['assignProductVariantsToChannel']>)[number]>;\n  export type Channels = NonNullable<(NonNullable<NonNullable<(NonNullable<AssignVariantsToChannelMutation['assignProductVariantsToChannel']>)[number]>['channels']>)[number]>;\n}\n\nexport namespace RemoveProductsFromChannel {\n  export type Variables = RemoveProductsFromChannelMutationVariables;\n  export type Mutation = RemoveProductsFromChannelMutation;\n  export type RemoveProductsFromChannel = NonNullable<(NonNullable<RemoveProductsFromChannelMutation['removeProductsFromChannel']>)[number]>;\n  export type Channels = NonNullable<(NonNullable<NonNullable<(NonNullable<RemoveProductsFromChannelMutation['removeProductsFromChannel']>)[number]>['channels']>)[number]>;\n}\n\nexport namespace RemoveVariantsFromChannel {\n  export type Variables = RemoveVariantsFromChannelMutationVariables;\n  export type Mutation = RemoveVariantsFromChannelMutation;\n  export type RemoveProductVariantsFromChannel = NonNullable<(NonNullable<RemoveVariantsFromChannelMutation['removeProductVariantsFromChannel']>)[number]>;\n  export type Channels = NonNullable<(NonNullable<NonNullable<(NonNullable<RemoveVariantsFromChannelMutation['removeProductVariantsFromChannel']>)[number]>['channels']>)[number]>;\n}\n\nexport namespace GetProductVariant {\n  export type Variables = GetProductVariantQueryVariables;\n  export type Query = GetProductVariantQuery;\n  export type ProductVariant = (NonNullable<GetProductVariantQuery['productVariant']>);\n  export type FeaturedAsset = (NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['featuredAsset']>);\n  export type FocalPoint = (NonNullable<(NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['featuredAsset']>)['focalPoint']>);\n  export type Product = (NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['product']>);\n  export type _FeaturedAsset = (NonNullable<(NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['product']>)['featuredAsset']>);\n  export type _FocalPoint = (NonNullable<(NonNullable<(NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['product']>)['featuredAsset']>)['focalPoint']>);\n}\n\nexport namespace GetProductVariantList {\n  export type Variables = GetProductVariantListQueryVariables;\n  export type Query = GetProductVariantListQuery;\n  export type ProductVariants = (NonNullable<GetProductVariantListQuery['productVariants']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetProductVariantListQuery['productVariants']>)['items']>)[number]>;\n  export type FeaturedAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListQuery['productVariants']>)['items']>)[number]>['featuredAsset']>);\n  export type FocalPoint = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListQuery['productVariants']>)['items']>)[number]>['featuredAsset']>)['focalPoint']>);\n  export type Product = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListQuery['productVariants']>)['items']>)[number]>['product']>);\n  export type _FeaturedAsset = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListQuery['productVariants']>)['items']>)[number]>['product']>)['featuredAsset']>);\n  export type _FocalPoint = (NonNullable<(NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListQuery['productVariants']>)['items']>)[number]>['product']>)['featuredAsset']>)['focalPoint']>);\n}\n\nexport namespace GetTagList {\n  export type Variables = GetTagListQueryVariables;\n  export type Query = GetTagListQuery;\n  export type Tags = (NonNullable<GetTagListQuery['tags']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetTagListQuery['tags']>)['items']>)[number]>;\n}\n\nexport namespace GetTag {\n  export type Variables = GetTagQueryVariables;\n  export type Query = GetTagQuery;\n  export type Tag = (NonNullable<GetTagQuery['tag']>);\n}\n\nexport namespace CreateTag {\n  export type Variables = CreateTagMutationVariables;\n  export type Mutation = CreateTagMutation;\n  export type CreateTag = (NonNullable<CreateTagMutation['createTag']>);\n}\n\nexport namespace UpdateTag {\n  export type Variables = UpdateTagMutationVariables;\n  export type Mutation = UpdateTagMutation;\n  export type UpdateTag = (NonNullable<UpdateTagMutation['updateTag']>);\n}\n\nexport namespace DeleteTag {\n  export type Variables = DeleteTagMutationVariables;\n  export type Mutation = DeleteTagMutation;\n  export type DeleteTag = (NonNullable<DeleteTagMutation['deleteTag']>);\n}\n\nexport namespace Promotion {\n  export type Fragment = PromotionFragment;\n  export type Conditions = NonNullable<(NonNullable<PromotionFragment['conditions']>)[number]>;\n  export type Actions = NonNullable<(NonNullable<PromotionFragment['actions']>)[number]>;\n}\n\nexport namespace GetPromotionList {\n  export type Variables = GetPromotionListQueryVariables;\n  export type Query = GetPromotionListQuery;\n  export type Promotions = (NonNullable<GetPromotionListQuery['promotions']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetPromotionListQuery['promotions']>)['items']>)[number]>;\n}\n\nexport namespace GetPromotion {\n  export type Variables = GetPromotionQueryVariables;\n  export type Query = GetPromotionQuery;\n  export type Promotion = (NonNullable<GetPromotionQuery['promotion']>);\n}\n\nexport namespace GetAdjustmentOperations {\n  export type Variables = GetAdjustmentOperationsQueryVariables;\n  export type Query = GetAdjustmentOperationsQuery;\n  export type PromotionConditions = NonNullable<(NonNullable<GetAdjustmentOperationsQuery['promotionConditions']>)[number]>;\n  export type PromotionActions = NonNullable<(NonNullable<GetAdjustmentOperationsQuery['promotionActions']>)[number]>;\n}\n\nexport namespace CreatePromotion {\n  export type Variables = CreatePromotionMutationVariables;\n  export type Mutation = CreatePromotionMutation;\n  export type CreatePromotion = (NonNullable<CreatePromotionMutation['createPromotion']>);\n}\n\nexport namespace UpdatePromotion {\n  export type Variables = UpdatePromotionMutationVariables;\n  export type Mutation = UpdatePromotionMutation;\n  export type UpdatePromotion = (NonNullable<UpdatePromotionMutation['updatePromotion']>);\n}\n\nexport namespace DeletePromotion {\n  export type Variables = DeletePromotionMutationVariables;\n  export type Mutation = DeletePromotionMutation;\n  export type DeletePromotion = (NonNullable<DeletePromotionMutation['deletePromotion']>);\n}\n\nexport namespace Country {\n  export type Fragment = CountryFragment;\n  export type Translations = NonNullable<(NonNullable<CountryFragment['translations']>)[number]>;\n}\n\nexport namespace GetCountryList {\n  export type Variables = GetCountryListQueryVariables;\n  export type Query = GetCountryListQuery;\n  export type Countries = (NonNullable<GetCountryListQuery['countries']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetCountryListQuery['countries']>)['items']>)[number]>;\n}\n\nexport namespace GetAvailableCountries {\n  export type Variables = GetAvailableCountriesQueryVariables;\n  export type Query = GetAvailableCountriesQuery;\n  export type Countries = (NonNullable<GetAvailableCountriesQuery['countries']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetAvailableCountriesQuery['countries']>)['items']>)[number]>;\n}\n\nexport namespace GetCountry {\n  export type Variables = GetCountryQueryVariables;\n  export type Query = GetCountryQuery;\n  export type Country = (NonNullable<GetCountryQuery['country']>);\n}\n\nexport namespace CreateCountry {\n  export type Variables = CreateCountryMutationVariables;\n  export type Mutation = CreateCountryMutation;\n  export type CreateCountry = (NonNullable<CreateCountryMutation['createCountry']>);\n}\n\nexport namespace UpdateCountry {\n  export type Variables = UpdateCountryMutationVariables;\n  export type Mutation = UpdateCountryMutation;\n  export type UpdateCountry = (NonNullable<UpdateCountryMutation['updateCountry']>);\n}\n\nexport namespace DeleteCountry {\n  export type Variables = DeleteCountryMutationVariables;\n  export type Mutation = DeleteCountryMutation;\n  export type DeleteCountry = (NonNullable<DeleteCountryMutation['deleteCountry']>);\n}\n\nexport namespace Zone {\n  export type Fragment = ZoneFragment;\n  export type Members = NonNullable<(NonNullable<ZoneFragment['members']>)[number]>;\n}\n\nexport namespace GetZones {\n  export type Variables = GetZonesQueryVariables;\n  export type Query = GetZonesQuery;\n  export type Zones = NonNullable<(NonNullable<GetZonesQuery['zones']>)[number]>;\n  export type Members = NonNullable<(NonNullable<NonNullable<(NonNullable<GetZonesQuery['zones']>)[number]>['members']>)[number]>;\n}\n\nexport namespace GetZone {\n  export type Variables = GetZoneQueryVariables;\n  export type Query = GetZoneQuery;\n  export type Zone = (NonNullable<GetZoneQuery['zone']>);\n}\n\nexport namespace CreateZone {\n  export type Variables = CreateZoneMutationVariables;\n  export type Mutation = CreateZoneMutation;\n  export type CreateZone = (NonNullable<CreateZoneMutation['createZone']>);\n}\n\nexport namespace UpdateZone {\n  export type Variables = UpdateZoneMutationVariables;\n  export type Mutation = UpdateZoneMutation;\n  export type UpdateZone = (NonNullable<UpdateZoneMutation['updateZone']>);\n}\n\nexport namespace DeleteZone {\n  export type Variables = DeleteZoneMutationVariables;\n  export type Mutation = DeleteZoneMutation;\n  export type DeleteZone = (NonNullable<DeleteZoneMutation['deleteZone']>);\n}\n\nexport namespace AddMembersToZone {\n  export type Variables = AddMembersToZoneMutationVariables;\n  export type Mutation = AddMembersToZoneMutation;\n  export type AddMembersToZone = (NonNullable<AddMembersToZoneMutation['addMembersToZone']>);\n}\n\nexport namespace RemoveMembersFromZone {\n  export type Variables = RemoveMembersFromZoneMutationVariables;\n  export type Mutation = RemoveMembersFromZoneMutation;\n  export type RemoveMembersFromZone = (NonNullable<RemoveMembersFromZoneMutation['removeMembersFromZone']>);\n}\n\nexport namespace TaxCategory {\n  export type Fragment = TaxCategoryFragment;\n}\n\nexport namespace GetTaxCategories {\n  export type Variables = GetTaxCategoriesQueryVariables;\n  export type Query = GetTaxCategoriesQuery;\n  export type TaxCategories = NonNullable<(NonNullable<GetTaxCategoriesQuery['taxCategories']>)[number]>;\n}\n\nexport namespace GetTaxCategory {\n  export type Variables = GetTaxCategoryQueryVariables;\n  export type Query = GetTaxCategoryQuery;\n  export type TaxCategory = (NonNullable<GetTaxCategoryQuery['taxCategory']>);\n}\n\nexport namespace CreateTaxCategory {\n  export type Variables = CreateTaxCategoryMutationVariables;\n  export type Mutation = CreateTaxCategoryMutation;\n  export type CreateTaxCategory = (NonNullable<CreateTaxCategoryMutation['createTaxCategory']>);\n}\n\nexport namespace UpdateTaxCategory {\n  export type Variables = UpdateTaxCategoryMutationVariables;\n  export type Mutation = UpdateTaxCategoryMutation;\n  export type UpdateTaxCategory = (NonNullable<UpdateTaxCategoryMutation['updateTaxCategory']>);\n}\n\nexport namespace DeleteTaxCategory {\n  export type Variables = DeleteTaxCategoryMutationVariables;\n  export type Mutation = DeleteTaxCategoryMutation;\n  export type DeleteTaxCategory = (NonNullable<DeleteTaxCategoryMutation['deleteTaxCategory']>);\n}\n\nexport namespace TaxRate {\n  export type Fragment = TaxRateFragment;\n  export type Category = (NonNullable<TaxRateFragment['category']>);\n  export type Zone = (NonNullable<TaxRateFragment['zone']>);\n  export type CustomerGroup = (NonNullable<TaxRateFragment['customerGroup']>);\n}\n\nexport namespace GetTaxRateList {\n  export type Variables = GetTaxRateListQueryVariables;\n  export type Query = GetTaxRateListQuery;\n  export type TaxRates = (NonNullable<GetTaxRateListQuery['taxRates']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetTaxRateListQuery['taxRates']>)['items']>)[number]>;\n}\n\nexport namespace GetTaxRate {\n  export type Variables = GetTaxRateQueryVariables;\n  export type Query = GetTaxRateQuery;\n  export type TaxRate = (NonNullable<GetTaxRateQuery['taxRate']>);\n}\n\nexport namespace CreateTaxRate {\n  export type Variables = CreateTaxRateMutationVariables;\n  export type Mutation = CreateTaxRateMutation;\n  export type CreateTaxRate = (NonNullable<CreateTaxRateMutation['createTaxRate']>);\n}\n\nexport namespace UpdateTaxRate {\n  export type Variables = UpdateTaxRateMutationVariables;\n  export type Mutation = UpdateTaxRateMutation;\n  export type UpdateTaxRate = (NonNullable<UpdateTaxRateMutation['updateTaxRate']>);\n}\n\nexport namespace DeleteTaxRate {\n  export type Variables = DeleteTaxRateMutationVariables;\n  export type Mutation = DeleteTaxRateMutation;\n  export type DeleteTaxRate = (NonNullable<DeleteTaxRateMutation['deleteTaxRate']>);\n}\n\nexport namespace Channel {\n  export type Fragment = ChannelFragment;\n  export type DefaultShippingZone = (NonNullable<ChannelFragment['defaultShippingZone']>);\n  export type DefaultTaxZone = (NonNullable<ChannelFragment['defaultTaxZone']>);\n}\n\nexport namespace GetChannels {\n  export type Variables = GetChannelsQueryVariables;\n  export type Query = GetChannelsQuery;\n  export type Channels = NonNullable<(NonNullable<GetChannelsQuery['channels']>)[number]>;\n}\n\nexport namespace GetChannel {\n  export type Variables = GetChannelQueryVariables;\n  export type Query = GetChannelQuery;\n  export type Channel = (NonNullable<GetChannelQuery['channel']>);\n}\n\nexport namespace GetActiveChannel {\n  export type Variables = GetActiveChannelQueryVariables;\n  export type Query = GetActiveChannelQuery;\n  export type ActiveChannel = (NonNullable<GetActiveChannelQuery['activeChannel']>);\n}\n\nexport namespace CreateChannel {\n  export type Variables = CreateChannelMutationVariables;\n  export type Mutation = CreateChannelMutation;\n  export type CreateChannel = (NonNullable<CreateChannelMutation['createChannel']>);\n}\n\nexport namespace UpdateChannel {\n  export type Variables = UpdateChannelMutationVariables;\n  export type Mutation = UpdateChannelMutation;\n  export type UpdateChannel = (NonNullable<UpdateChannelMutation['updateChannel']>);\n}\n\nexport namespace DeleteChannel {\n  export type Variables = DeleteChannelMutationVariables;\n  export type Mutation = DeleteChannelMutation;\n  export type DeleteChannel = (NonNullable<DeleteChannelMutation['deleteChannel']>);\n}\n\nexport namespace PaymentMethod {\n  export type Fragment = PaymentMethodFragment;\n  export type Checker = (NonNullable<PaymentMethodFragment['checker']>);\n  export type Handler = (NonNullable<PaymentMethodFragment['handler']>);\n}\n\nexport namespace GetPaymentMethodList {\n  export type Variables = GetPaymentMethodListQueryVariables;\n  export type Query = GetPaymentMethodListQuery;\n  export type PaymentMethods = (NonNullable<GetPaymentMethodListQuery['paymentMethods']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetPaymentMethodListQuery['paymentMethods']>)['items']>)[number]>;\n}\n\nexport namespace GetPaymentMethodOperations {\n  export type Variables = GetPaymentMethodOperationsQueryVariables;\n  export type Query = GetPaymentMethodOperationsQuery;\n  export type PaymentMethodEligibilityCheckers = NonNullable<(NonNullable<GetPaymentMethodOperationsQuery['paymentMethodEligibilityCheckers']>)[number]>;\n  export type PaymentMethodHandlers = NonNullable<(NonNullable<GetPaymentMethodOperationsQuery['paymentMethodHandlers']>)[number]>;\n}\n\nexport namespace GetPaymentMethod {\n  export type Variables = GetPaymentMethodQueryVariables;\n  export type Query = GetPaymentMethodQuery;\n  export type PaymentMethod = (NonNullable<GetPaymentMethodQuery['paymentMethod']>);\n}\n\nexport namespace CreatePaymentMethod {\n  export type Variables = CreatePaymentMethodMutationVariables;\n  export type Mutation = CreatePaymentMethodMutation;\n  export type CreatePaymentMethod = (NonNullable<CreatePaymentMethodMutation['createPaymentMethod']>);\n}\n\nexport namespace UpdatePaymentMethod {\n  export type Variables = UpdatePaymentMethodMutationVariables;\n  export type Mutation = UpdatePaymentMethodMutation;\n  export type UpdatePaymentMethod = (NonNullable<UpdatePaymentMethodMutation['updatePaymentMethod']>);\n}\n\nexport namespace DeletePaymentMethod {\n  export type Variables = DeletePaymentMethodMutationVariables;\n  export type Mutation = DeletePaymentMethodMutation;\n  export type DeletePaymentMethod = (NonNullable<DeletePaymentMethodMutation['deletePaymentMethod']>);\n}\n\nexport namespace GlobalSettings {\n  export type Fragment = GlobalSettingsFragment;\n  export type ServerConfig = (NonNullable<GlobalSettingsFragment['serverConfig']>);\n  export type Permissions = NonNullable<(NonNullable<(NonNullable<GlobalSettingsFragment['serverConfig']>)['permissions']>)[number]>;\n  export type OrderProcess = NonNullable<(NonNullable<(NonNullable<GlobalSettingsFragment['serverConfig']>)['orderProcess']>)[number]>;\n}\n\nexport namespace GetGlobalSettings {\n  export type Variables = GetGlobalSettingsQueryVariables;\n  export type Query = GetGlobalSettingsQuery;\n  export type GlobalSettings = (NonNullable<GetGlobalSettingsQuery['globalSettings']>);\n}\n\nexport namespace UpdateGlobalSettings {\n  export type Variables = UpdateGlobalSettingsMutationVariables;\n  export type Mutation = UpdateGlobalSettingsMutation;\n  export type UpdateGlobalSettings = (NonNullable<UpdateGlobalSettingsMutation['updateGlobalSettings']>);\n}\n\nexport namespace CustomFieldConfig {\n  export type Fragment = CustomFieldConfigFragment;\n  export type Description = NonNullable<(NonNullable<CustomFieldConfigFragment['description']>)[number]>;\n  export type Label = NonNullable<(NonNullable<CustomFieldConfigFragment['label']>)[number]>;\n}\n\nexport namespace StringCustomField {\n  export type Fragment = StringCustomFieldFragment;\n  export type Options = NonNullable<(NonNullable<StringCustomFieldFragment['options']>)[number]>;\n  export type Label = NonNullable<(NonNullable<NonNullable<(NonNullable<StringCustomFieldFragment['options']>)[number]>['label']>)[number]>;\n}\n\nexport namespace LocaleStringCustomField {\n  export type Fragment = LocaleStringCustomFieldFragment;\n}\n\nexport namespace TextCustomField {\n  export type Fragment = TextCustomFieldFragment;\n}\n\nexport namespace BooleanCustomField {\n  export type Fragment = BooleanCustomFieldFragment;\n}\n\nexport namespace IntCustomField {\n  export type Fragment = IntCustomFieldFragment;\n}\n\nexport namespace FloatCustomField {\n  export type Fragment = FloatCustomFieldFragment;\n}\n\nexport namespace DateTimeCustomField {\n  export type Fragment = DateTimeCustomFieldFragment;\n}\n\nexport namespace RelationCustomField {\n  export type Fragment = RelationCustomFieldFragment;\n}\n\nexport namespace CustomFields {\n  export type Fragment = CustomFieldsFragment;\n  export type StringCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'StringCustomFieldConfig' }>);\n  export type LocaleStringCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'LocaleStringCustomFieldConfig' }>);\n  export type TextCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'TextCustomFieldConfig' }>);\n  export type BooleanCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'BooleanCustomFieldConfig' }>);\n  export type IntCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'IntCustomFieldConfig' }>);\n  export type FloatCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'FloatCustomFieldConfig' }>);\n  export type DateTimeCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'DateTimeCustomFieldConfig' }>);\n  export type RelationCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'RelationCustomFieldConfig' }>);\n}\n\nexport namespace GetServerConfig {\n  export type Variables = GetServerConfigQueryVariables;\n  export type Query = GetServerConfigQuery;\n  export type GlobalSettings = (NonNullable<GetServerConfigQuery['globalSettings']>);\n  export type ServerConfig = (NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>);\n  export type OrderProcess = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['orderProcess']>)[number]>;\n  export type Permissions = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['permissions']>)[number]>;\n  export type CustomFieldConfig = (NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>);\n  export type Address = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Address']>)[number]>;\n  export type Administrator = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Administrator']>)[number]>;\n  export type Asset = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Asset']>)[number]>;\n  export type Channel = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Channel']>)[number]>;\n  export type Collection = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Collection']>)[number]>;\n  export type Customer = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Customer']>)[number]>;\n  export type Facet = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Facet']>)[number]>;\n  export type FacetValue = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['FacetValue']>)[number]>;\n  export type Fulfillment = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Fulfillment']>)[number]>;\n  export type _GlobalSettings = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['GlobalSettings']>)[number]>;\n  export type Order = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Order']>)[number]>;\n  export type OrderLine = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['OrderLine']>)[number]>;\n  export type Product = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Product']>)[number]>;\n  export type ProductOption = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['ProductOption']>)[number]>;\n  export type ProductOptionGroup = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['ProductOptionGroup']>)[number]>;\n  export type ProductVariant = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['ProductVariant']>)[number]>;\n  export type ShippingMethod = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['ShippingMethod']>)[number]>;\n  export type User = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['User']>)[number]>;\n}\n\nexport namespace JobInfo {\n  export type Fragment = JobInfoFragment;\n}\n\nexport namespace GetJobInfo {\n  export type Variables = GetJobInfoQueryVariables;\n  export type Query = GetJobInfoQuery;\n  export type Job = (NonNullable<GetJobInfoQuery['job']>);\n}\n\nexport namespace GetAllJobs {\n  export type Variables = GetAllJobsQueryVariables;\n  export type Query = GetAllJobsQuery;\n  export type Jobs = (NonNullable<GetAllJobsQuery['jobs']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetAllJobsQuery['jobs']>)['items']>)[number]>;\n}\n\nexport namespace GetJobsById {\n  export type Variables = GetJobsByIdQueryVariables;\n  export type Query = GetJobsByIdQuery;\n  export type JobsById = NonNullable<(NonNullable<GetJobsByIdQuery['jobsById']>)[number]>;\n}\n\nexport namespace GetJobQueueList {\n  export type Variables = GetJobQueueListQueryVariables;\n  export type Query = GetJobQueueListQuery;\n  export type JobQueues = NonNullable<(NonNullable<GetJobQueueListQuery['jobQueues']>)[number]>;\n}\n\nexport namespace CancelJob {\n  export type Variables = CancelJobMutationVariables;\n  export type Mutation = CancelJobMutation;\n  export type CancelJob = (NonNullable<CancelJobMutation['cancelJob']>);\n}\n\nexport namespace Reindex {\n  export type Variables = ReindexMutationVariables;\n  export type Mutation = ReindexMutation;\n  export type Reindex = (NonNullable<ReindexMutation['reindex']>);\n}\n\nexport namespace ConfigurableOperation {\n  export type Fragment = ConfigurableOperationFragment;\n  export type Args = NonNullable<(NonNullable<ConfigurableOperationFragment['args']>)[number]>;\n}\n\nexport namespace ConfigurableOperationDef {\n  export type Fragment = ConfigurableOperationDefFragment;\n  export type Args = NonNullable<(NonNullable<ConfigurableOperationDefFragment['args']>)[number]>;\n}\n\nexport namespace ErrorResult {\n  export type Fragment = ErrorResultFragment;\n}\n\nexport namespace ShippingMethod {\n  export type Fragment = ShippingMethodFragment;\n  export type Checker = (NonNullable<ShippingMethodFragment['checker']>);\n  export type Calculator = (NonNullable<ShippingMethodFragment['calculator']>);\n  export type Translations = NonNullable<(NonNullable<ShippingMethodFragment['translations']>)[number]>;\n}\n\nexport namespace GetShippingMethodList {\n  export type Variables = GetShippingMethodListQueryVariables;\n  export type Query = GetShippingMethodListQuery;\n  export type ShippingMethods = (NonNullable<GetShippingMethodListQuery['shippingMethods']>);\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetShippingMethodListQuery['shippingMethods']>)['items']>)[number]>;\n}\n\nexport namespace GetShippingMethod {\n  export type Variables = GetShippingMethodQueryVariables;\n  export type Query = GetShippingMethodQuery;\n  export type ShippingMethod = (NonNullable<GetShippingMethodQuery['shippingMethod']>);\n}\n\nexport namespace GetShippingMethodOperations {\n  export type Variables = GetShippingMethodOperationsQueryVariables;\n  export type Query = GetShippingMethodOperationsQuery;\n  export type ShippingEligibilityCheckers = NonNullable<(NonNullable<GetShippingMethodOperationsQuery['shippingEligibilityCheckers']>)[number]>;\n  export type ShippingCalculators = NonNullable<(NonNullable<GetShippingMethodOperationsQuery['shippingCalculators']>)[number]>;\n  export type FulfillmentHandlers = NonNullable<(NonNullable<GetShippingMethodOperationsQuery['fulfillmentHandlers']>)[number]>;\n}\n\nexport namespace CreateShippingMethod {\n  export type Variables = CreateShippingMethodMutationVariables;\n  export type Mutation = CreateShippingMethodMutation;\n  export type CreateShippingMethod = (NonNullable<CreateShippingMethodMutation['createShippingMethod']>);\n}\n\nexport namespace UpdateShippingMethod {\n  export type Variables = UpdateShippingMethodMutationVariables;\n  export type Mutation = UpdateShippingMethodMutation;\n  export type UpdateShippingMethod = (NonNullable<UpdateShippingMethodMutation['updateShippingMethod']>);\n}\n\nexport namespace DeleteShippingMethod {\n  export type Variables = DeleteShippingMethodMutationVariables;\n  export type Mutation = DeleteShippingMethodMutation;\n  export type DeleteShippingMethod = (NonNullable<DeleteShippingMethodMutation['deleteShippingMethod']>);\n}\n\nexport namespace TestShippingMethod {\n  export type Variables = TestShippingMethodQueryVariables;\n  export type Query = TestShippingMethodQuery;\n  export type TestShippingMethod = (NonNullable<TestShippingMethodQuery['testShippingMethod']>);\n  export type Quote = (NonNullable<(NonNullable<TestShippingMethodQuery['testShippingMethod']>)['quote']>);\n}\n\nexport namespace TestEligibleShippingMethods {\n  export type Variables = TestEligibleShippingMethodsQueryVariables;\n  export type Query = TestEligibleShippingMethodsQuery;\n  export type TestEligibleShippingMethods = NonNullable<(NonNullable<TestEligibleShippingMethodsQuery['testEligibleShippingMethods']>)[number]>;\n}\n","import { pick } from '@vendure/common/lib/pick';\r\n\r\nimport {\r\n    AddOptionGroupToProduct,\r\n    AddOptionToGroup,\r\n    AssignProductsToChannel,\r\n    AssignProductsToChannelInput,\r\n    AssignProductVariantsToChannelInput,\r\n    AssignVariantsToChannel,\r\n    CreateAssets,\r\n    CreateProduct,\r\n    CreateProductInput,\r\n    CreateProductOptionGroup,\r\n    CreateProductOptionGroupInput,\r\n    CreateProductOptionInput,\r\n    CreateProductVariantInput,\r\n    CreateProductVariants,\r\n    CreateTag,\r\n    CreateTagInput,\r\n    DeleteAssets,\r\n    DeleteProduct,\r\n    DeleteProductVariant,\r\n    DeleteTag,\r\n    GetAsset,\r\n    GetAssetList,\r\n    GetProductList,\r\n    GetProductOptionGroup,\r\n    GetProductOptionGroups,\r\n    GetProductSimple,\r\n    GetProductVariant,\r\n    GetProductVariantList,\r\n    GetProductVariantOptions,\r\n    GetProductWithVariants,\r\n    GetTag,\r\n    GetTagList,\r\n    ProductListOptions,\r\n    ProductSelectorSearch,\r\n    ProductVariantListOptions,\r\n    Reindex,\r\n    RemoveOptionGroupFromProduct,\r\n    RemoveProductsFromChannel,\r\n    RemoveProductsFromChannelInput,\r\n    RemoveProductVariantsFromChannelInput,\r\n    RemoveVariantsFromChannel,\r\n    SearchProducts,\r\n    SortOrder,\r\n    TagListOptions,\r\n    UpdateAsset,\r\n    UpdateAssetInput,\r\n    UpdateProduct,\r\n    UpdateProductInput,\r\n    UpdateProductOption,\r\n    UpdateProductOptionInput,\r\n    UpdateProductVariantInput,\r\n    UpdateProductVariants,\r\n    UpdateTag,\r\n    UpdateTagInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    ADD_OPTION_GROUP_TO_PRODUCT,\r\n    ADD_OPTION_TO_GROUP,\r\n    ASSIGN_PRODUCTS_TO_CHANNEL,\r\n    ASSIGN_VARIANTS_TO_CHANNEL,\r\n    CREATE_ASSETS,\r\n    CREATE_PRODUCT,\r\n    CREATE_PRODUCT_OPTION_GROUP,\r\n    CREATE_PRODUCT_VARIANTS,\r\n    CREATE_TAG,\r\n    DELETE_ASSETS,\r\n    DELETE_PRODUCT,\r\n    DELETE_PRODUCT_VARIANT,\r\n    DELETE_TAG,\r\n    GET_ASSET,\r\n    GET_ASSET_LIST,\r\n    GET_PRODUCT_LIST,\r\n    GET_PRODUCT_OPTION_GROUP,\r\n    GET_PRODUCT_OPTION_GROUPS,\r\n    GET_PRODUCT_SIMPLE,\r\n    GET_PRODUCT_VARIANT,\r\n    GET_PRODUCT_VARIANT_LIST,\r\n    GET_PRODUCT_VARIANT_OPTIONS,\r\n    GET_PRODUCT_WITH_VARIANTS,\r\n    GET_TAG,\r\n    GET_TAG_LIST,\r\n    PRODUCT_SELECTOR_SEARCH,\r\n    REMOVE_OPTION_GROUP_FROM_PRODUCT,\r\n    REMOVE_PRODUCTS_FROM_CHANNEL,\r\n    REMOVE_VARIANTS_FROM_CHANNEL,\r\n    SEARCH_PRODUCTS,\r\n    UPDATE_ASSET,\r\n    UPDATE_PRODUCT,\r\n    UPDATE_PRODUCT_OPTION,\r\n    UPDATE_PRODUCT_VARIANTS,\r\n    UPDATE_TAG,\r\n} from '../definitions/product-definitions';\r\nimport { REINDEX } from '../definitions/settings-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class ProductDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    searchProducts(term: string, take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<SearchProducts.Query, SearchProducts.Variables>(SEARCH_PRODUCTS, {\r\n            input: {\r\n                term,\r\n                take,\r\n                skip,\r\n                groupByProduct: true,\r\n            },\r\n        });\r\n    }\r\n\r\n    productSelectorSearch(term: string, take: number) {\r\n        return this.baseDataService.query<ProductSelectorSearch.Query, ProductSelectorSearch.Variables>(\r\n            PRODUCT_SELECTOR_SEARCH,\r\n            {\r\n                take,\r\n                term,\r\n            },\r\n        );\r\n    }\r\n\r\n    reindex() {\r\n        return this.baseDataService.mutate<Reindex.Mutation>(REINDEX);\r\n    }\r\n\r\n    getProducts(options: ProductListOptions) {\r\n        return this.baseDataService.query<GetProductList.Query, GetProductList.Variables>(GET_PRODUCT_LIST, {\r\n            options,\r\n        });\r\n    }\r\n\r\n    getProduct(id: string) {\r\n        return this.baseDataService.query<GetProductWithVariants.Query, GetProductWithVariants.Variables>(\r\n            GET_PRODUCT_WITH_VARIANTS,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getProductSimple(id: string) {\r\n        return this.baseDataService.query<GetProductSimple.Query, GetProductSimple.Variables>(\r\n            GET_PRODUCT_SIMPLE,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getProductVariants(options: ProductVariantListOptions) {\r\n        return this.baseDataService.query<GetProductVariantList.Query, GetProductVariantList.Variables>(\r\n            GET_PRODUCT_VARIANT_LIST,\r\n            { options },\r\n        );\r\n    }\r\n\r\n    getProductVariant(id: string) {\r\n        return this.baseDataService.query<GetProductVariant.Query, GetProductVariant.Variables>(\r\n            GET_PRODUCT_VARIANT,\r\n            { id },\r\n        );\r\n    }\r\n\r\n    getProductVariantsOptions(id: string) {\r\n        return this.baseDataService.query<GetProductVariantOptions.Query, GetProductVariantOptions.Variables>(\r\n            GET_PRODUCT_VARIANT_OPTIONS,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getProductOptionGroup(id: string) {\r\n        return this.baseDataService.query<GetProductOptionGroup.Query, GetProductOptionGroup.Variables>(\r\n            GET_PRODUCT_OPTION_GROUP,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    createProduct(product: CreateProductInput) {\r\n        const input: CreateProduct.Variables = {\r\n            input: pick(product, [\r\n                'enabled',\r\n                'translations',\r\n                'customFields',\r\n                'assetIds',\r\n                'featuredAssetId',\r\n                'facetValueIds',\r\n            ]),\r\n        };\r\n        return this.baseDataService.mutate<CreateProduct.Mutation, CreateProduct.Variables>(\r\n            CREATE_PRODUCT,\r\n            input,\r\n        );\r\n    }\r\n\r\n    updateProduct(product: UpdateProductInput) {\r\n        const input: UpdateProduct.Variables = {\r\n            input: pick(product, [\r\n                'id',\r\n                'enabled',\r\n                'translations',\r\n                'customFields',\r\n                'assetIds',\r\n                'featuredAssetId',\r\n                'facetValueIds',\r\n            ]),\r\n        };\r\n        return this.baseDataService.mutate<UpdateProduct.Mutation, UpdateProduct.Variables>(\r\n            UPDATE_PRODUCT,\r\n            input,\r\n        );\r\n    }\r\n\r\n    deleteProduct(id: string) {\r\n        return this.baseDataService.mutate<DeleteProduct.Mutation, DeleteProduct.Variables>(DELETE_PRODUCT, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createProductVariants(input: CreateProductVariantInput[]) {\r\n        return this.baseDataService.mutate<CreateProductVariants.Mutation, CreateProductVariants.Variables>(\r\n            CREATE_PRODUCT_VARIANTS,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateProductVariants(variants: UpdateProductVariantInput[]) {\r\n        const input: UpdateProductVariants.Variables = {\r\n            input: variants.map(\r\n                pick([\r\n                    'id',\r\n                    'enabled',\r\n                    'translations',\r\n                    'sku',\r\n                    'price',\r\n                    'taxCategoryId',\r\n                    'facetValueIds',\r\n                    'featuredAssetId',\r\n                    'assetIds',\r\n                    'trackInventory',\r\n                    'outOfStockThreshold',\r\n                    'useGlobalOutOfStockThreshold',\r\n                    'stockOnHand',\r\n                    'customFields',\r\n                ]),\r\n            ),\r\n        };\r\n        return this.baseDataService.mutate<UpdateProductVariants.Mutation, UpdateProductVariants.Variables>(\r\n            UPDATE_PRODUCT_VARIANTS,\r\n            input,\r\n        );\r\n    }\r\n\r\n    deleteProductVariant(id: string) {\r\n        return this.baseDataService.mutate<DeleteProductVariant.Mutation, DeleteProductVariant.Variables>(\r\n            DELETE_PRODUCT_VARIANT,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    createProductOptionGroups(productOptionGroup: CreateProductOptionGroupInput) {\r\n        const input: CreateProductOptionGroup.Variables = {\r\n            input: productOptionGroup,\r\n        };\r\n        return this.baseDataService.mutate<\r\n            CreateProductOptionGroup.Mutation,\r\n            CreateProductOptionGroup.Variables\r\n        >(CREATE_PRODUCT_OPTION_GROUP, input);\r\n    }\r\n\r\n    addOptionGroupToProduct(variables: AddOptionGroupToProduct.Variables) {\r\n        return this.baseDataService.mutate<\r\n            AddOptionGroupToProduct.Mutation,\r\n            AddOptionGroupToProduct.Variables\r\n        >(ADD_OPTION_GROUP_TO_PRODUCT, variables);\r\n    }\r\n\r\n    addOptionToGroup(input: CreateProductOptionInput) {\r\n        return this.baseDataService.mutate<AddOptionToGroup.Mutation, AddOptionToGroup.Variables>(\r\n            ADD_OPTION_TO_GROUP,\r\n            { input },\r\n        );\r\n    }\r\n\r\n    removeOptionGroupFromProduct(variables: RemoveOptionGroupFromProduct.Variables) {\r\n        return this.baseDataService.mutate<\r\n            RemoveOptionGroupFromProduct.Mutation,\r\n            RemoveOptionGroupFromProduct.Variables\r\n        >(REMOVE_OPTION_GROUP_FROM_PRODUCT, variables);\r\n    }\r\n\r\n    updateProductOption(input: UpdateProductOptionInput) {\r\n        return this.baseDataService.mutate<UpdateProductOption.Mutation, UpdateProductOption.Variables>(\r\n            UPDATE_PRODUCT_OPTION,\r\n            {\r\n                input: pick(input, ['id', 'code', 'translations', 'customFields']),\r\n            },\r\n        );\r\n    }\r\n\r\n    getProductOptionGroups(filterTerm?: string) {\r\n        return this.baseDataService.query<GetProductOptionGroups.Query, GetProductOptionGroups.Variables>(\r\n            GET_PRODUCT_OPTION_GROUPS,\r\n            {\r\n                filterTerm,\r\n            },\r\n        );\r\n    }\r\n\r\n    getAssetList(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetAssetList.Query, GetAssetList.Variables>(GET_ASSET_LIST, {\r\n            options: {\r\n                skip,\r\n                take,\r\n                sort: {\r\n                    createdAt: SortOrder.DESC,\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    getAsset(id: string) {\r\n        return this.baseDataService.query<GetAsset.Query, GetAsset.Variables>(GET_ASSET, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createAssets(files: File[]) {\r\n        return this.baseDataService.mutate<CreateAssets.Mutation, CreateAssets.Variables>(CREATE_ASSETS, {\r\n            input: files.map(file => ({ file })),\r\n        });\r\n    }\r\n\r\n    updateAsset(input: UpdateAssetInput) {\r\n        return this.baseDataService.mutate<UpdateAsset.Mutation, UpdateAsset.Variables>(UPDATE_ASSET, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    deleteAssets(ids: string[], force: boolean) {\r\n        return this.baseDataService.mutate<DeleteAssets.Mutation, DeleteAssets.Variables>(DELETE_ASSETS, {\r\n            input: {\r\n                assetIds: ids,\r\n                force,\r\n            },\r\n        });\r\n    }\r\n\r\n    assignProductsToChannel(input: AssignProductsToChannelInput) {\r\n        return this.baseDataService.mutate<\r\n            AssignProductsToChannel.Mutation,\r\n            AssignProductsToChannel.Variables\r\n        >(ASSIGN_PRODUCTS_TO_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    removeProductsFromChannel(input: RemoveProductsFromChannelInput) {\r\n        return this.baseDataService.mutate<\r\n            RemoveProductsFromChannel.Mutation,\r\n            RemoveProductsFromChannel.Variables\r\n        >(REMOVE_PRODUCTS_FROM_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    assignVariantsToChannel(input: AssignProductVariantsToChannelInput) {\r\n        return this.baseDataService.mutate<\r\n            AssignVariantsToChannel.Mutation,\r\n            AssignVariantsToChannel.Variables\r\n        >(ASSIGN_VARIANTS_TO_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    removeVariantsFromChannel(input: RemoveProductVariantsFromChannelInput) {\r\n        return this.baseDataService.mutate<\r\n            RemoveVariantsFromChannel.Mutation,\r\n            RemoveVariantsFromChannel.Variables\r\n        >(REMOVE_VARIANTS_FROM_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    getTag(id: string) {\r\n        return this.baseDataService.query<GetTag.Query, GetTag.Variables>(GET_TAG, { id });\r\n    }\r\n\r\n    getTagList(options?: TagListOptions) {\r\n        return this.baseDataService.query<GetTagList.Query, GetTagList.Variables>(GET_TAG_LIST, { options });\r\n    }\r\n\r\n    createTag(input: CreateTagInput) {\r\n        return this.baseDataService.mutate<CreateTag.Mutation, CreateTag.Variables>(CREATE_TAG, { input });\r\n    }\r\n\r\n    updateTag(input: UpdateTagInput) {\r\n        return this.baseDataService.mutate<UpdateTag.Mutation, UpdateTag.Variables>(UPDATE_TAG, { input });\r\n    }\r\n\r\n    deleteTag(id: string) {\r\n        return this.baseDataService.mutate<DeleteTag.Mutation, DeleteTag.Variables>(DELETE_TAG, { id });\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport {\r\n    CONFIGURABLE_OPERATION_DEF_FRAGMENT,\r\n    CONFIGURABLE_OPERATION_FRAGMENT,\r\n    ERROR_RESULT_FRAGMENT,\r\n} from './shared-definitions';\r\n\r\nexport const PROMOTION_FRAGMENT = gql`\r\n    fragment Promotion on Promotion {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        enabled\r\n        couponCode\r\n        perCustomerUsageLimit\r\n        startsAt\r\n        endsAt\r\n        conditions {\r\n            ...ConfigurableOperation\r\n        }\r\n        actions {\r\n            ...ConfigurableOperation\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PROMOTION_LIST = gql`\r\n    query GetPromotionList($options: PromotionListOptions) {\r\n        promotions(options: $options) {\r\n            items {\r\n                ...Promotion\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PROMOTION = gql`\r\n    query GetPromotion($id: ID!) {\r\n        promotion(id: $id) {\r\n            ...Promotion\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ADJUSTMENT_OPERATIONS = gql`\r\n    query GetAdjustmentOperations {\r\n        promotionConditions {\r\n            ...ConfigurableOperationDef\r\n        }\r\n        promotionActions {\r\n            ...ConfigurableOperationDef\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_PROMOTION = gql`\r\n    mutation CreatePromotion($input: CreatePromotionInput!) {\r\n        createPromotion(input: $input) {\r\n            ...Promotion\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_PROMOTION = gql`\r\n    mutation UpdatePromotion($input: UpdatePromotionInput!) {\r\n        updatePromotion(input: $input) {\r\n            ...Promotion\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_PROMOTION = gql`\r\n    mutation DeletePromotion($id: ID!) {\r\n        deletePromotion(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n","import {\r\n    CreatePromotion,\r\n    CreatePromotionInput,\r\n    DeletePromotion,\r\n    GetAdjustmentOperations,\r\n    GetPromotion,\r\n    GetPromotionList,\r\n    UpdatePromotion,\r\n    UpdatePromotionInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    CREATE_PROMOTION,\r\n    DELETE_PROMOTION,\r\n    GET_ADJUSTMENT_OPERATIONS,\r\n    GET_PROMOTION,\r\n    GET_PROMOTION_LIST,\r\n    UPDATE_PROMOTION,\r\n} from '../definitions/promotion-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class PromotionDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getPromotions(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetPromotionList.Query, GetPromotionList.Variables>(\r\n            GET_PROMOTION_LIST,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getPromotion(id: string) {\r\n        return this.baseDataService.query<GetPromotion.Query, GetPromotion.Variables>(GET_PROMOTION, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getPromotionActionsAndConditions() {\r\n        return this.baseDataService.query<GetAdjustmentOperations.Query>(GET_ADJUSTMENT_OPERATIONS);\r\n    }\r\n\r\n    createPromotion(input: CreatePromotionInput) {\r\n        return this.baseDataService.mutate<CreatePromotion.Mutation, CreatePromotion.Variables>(\r\n            CREATE_PROMOTION,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updatePromotion(input: UpdatePromotionInput) {\r\n        return this.baseDataService.mutate<UpdatePromotion.Mutation, UpdatePromotion.Variables>(\r\n            UPDATE_PROMOTION,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deletePromotion(id: string) {\r\n        return this.baseDataService.mutate<DeletePromotion.Mutation, DeletePromotion.Variables>(\r\n            DELETE_PROMOTION,\r\n            { id },\r\n        );\r\n    }\r\n}\r\n","import { FetchPolicy, WatchQueryFetchPolicy } from '@apollo/client/core';\r\nimport { pick } from '@vendure/common/lib/pick';\r\n\r\nimport {\r\n    AddMembersToZone,\r\n    CancelJob,\r\n    CreateChannel,\r\n    CreateChannelInput,\r\n    CreateCountry,\r\n    CreateCountryInput,\r\n    CreatePaymentMethod,\r\n    CreatePaymentMethodInput,\r\n    CreateTaxCategory,\r\n    CreateTaxCategoryInput,\r\n    CreateTaxRate,\r\n    CreateTaxRateInput,\r\n    CreateZone,\r\n    CreateZoneInput,\r\n    DeleteChannel,\r\n    DeleteCountry,\r\n    DeletePaymentMethod,\r\n    DeleteTaxCategory,\r\n    DeleteTaxRate,\r\n    DeleteZone,\r\n    GetActiveChannel,\r\n    GetAllJobs,\r\n    GetAvailableCountries,\r\n    GetChannel,\r\n    GetChannels,\r\n    GetCountry,\r\n    GetCountryList,\r\n    GetGlobalSettings,\r\n    GetJobInfo,\r\n    GetJobQueueList,\r\n    GetJobsById,\r\n    GetPaymentMethod,\r\n    GetPaymentMethodList,\r\n    GetPaymentMethodOperations,\r\n    GetTaxCategories,\r\n    GetTaxCategory,\r\n    GetTaxRate,\r\n    GetTaxRateList,\r\n    GetZone,\r\n    GetZones,\r\n    JobListOptions,\r\n    JobState,\r\n    RemoveMembersFromZone,\r\n    UpdateChannel,\r\n    UpdateChannelInput,\r\n    UpdateCountry,\r\n    UpdateCountryInput,\r\n    UpdateGlobalSettings,\r\n    UpdateGlobalSettingsInput,\r\n    UpdatePaymentMethod,\r\n    UpdatePaymentMethodInput,\r\n    UpdateTaxCategory,\r\n    UpdateTaxCategoryInput,\r\n    UpdateTaxRate,\r\n    UpdateTaxRateInput,\r\n    UpdateZone,\r\n    UpdateZoneInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    ADD_MEMBERS_TO_ZONE,\r\n    CANCEL_JOB,\r\n    CREATE_CHANNEL,\r\n    CREATE_COUNTRY,\r\n    CREATE_PAYMENT_METHOD,\r\n    CREATE_TAX_CATEGORY,\r\n    CREATE_TAX_RATE,\r\n    CREATE_ZONE,\r\n    DELETE_CHANNEL,\r\n    DELETE_COUNTRY,\r\n    DELETE_PAYMENT_METHOD,\r\n    DELETE_TAX_CATEGORY,\r\n    DELETE_TAX_RATE,\r\n    DELETE_ZONE,\r\n    GET_ACTIVE_CHANNEL,\r\n    GET_AVAILABLE_COUNTRIES,\r\n    GET_CHANNEL,\r\n    GET_CHANNELS,\r\n    GET_COUNTRY,\r\n    GET_COUNTRY_LIST,\r\n    GET_GLOBAL_SETTINGS,\r\n    GET_JOBS_BY_ID,\r\n    GET_JOBS_LIST,\r\n    GET_JOB_INFO,\r\n    GET_JOB_QUEUE_LIST,\r\n    GET_PAYMENT_METHOD,\r\n    GET_PAYMENT_METHOD_LIST,\r\n    GET_PAYMENT_METHOD_OPERATIONS,\r\n    GET_TAX_CATEGORIES,\r\n    GET_TAX_CATEGORY,\r\n    GET_TAX_RATE,\r\n    GET_TAX_RATE_LIST,\r\n    GET_ZONES,\r\n    REMOVE_MEMBERS_FROM_ZONE,\r\n    UPDATE_CHANNEL,\r\n    UPDATE_COUNTRY,\r\n    UPDATE_GLOBAL_SETTINGS,\r\n    UPDATE_PAYMENT_METHOD,\r\n    UPDATE_TAX_CATEGORY,\r\n    UPDATE_TAX_RATE,\r\n    UPDATE_ZONE,\r\n} from '../definitions/settings-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class SettingsDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getCountries(take: number = 10, skip: number = 0, filterTerm?: string) {\r\n        return this.baseDataService.query<GetCountryList.Query, GetCountryList.Variables>(GET_COUNTRY_LIST, {\r\n            options: {\r\n                take,\r\n                skip,\r\n                filter: {\r\n                    name: filterTerm ? { contains: filterTerm } : null,\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    getAvailableCountries() {\r\n        return this.baseDataService.query<GetAvailableCountries.Query>(GET_AVAILABLE_COUNTRIES);\r\n    }\r\n\r\n    getCountry(id: string) {\r\n        return this.baseDataService.query<GetCountry.Query, GetCountry.Variables>(GET_COUNTRY, { id });\r\n    }\r\n\r\n    createCountry(input: CreateCountryInput) {\r\n        return this.baseDataService.mutate<CreateCountry.Mutation, CreateCountry.Variables>(CREATE_COUNTRY, {\r\n            input: pick(input, ['code', 'enabled', 'translations']),\r\n        });\r\n    }\r\n\r\n    updateCountry(input: UpdateCountryInput) {\r\n        return this.baseDataService.mutate<UpdateCountry.Mutation, UpdateCountry.Variables>(UPDATE_COUNTRY, {\r\n            input: pick(input, ['id', 'code', 'enabled', 'translations']),\r\n        });\r\n    }\r\n\r\n    deleteCountry(id: string) {\r\n        return this.baseDataService.mutate<DeleteCountry.Mutation, DeleteCountry.Variables>(DELETE_COUNTRY, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getZones() {\r\n        return this.baseDataService.query<GetZones.Query>(GET_ZONES);\r\n    }\r\n\r\n    getZone(id: string) {\r\n        return this.baseDataService.query<GetZone.Query, GetZone.Variables>(GET_ZONES, { id });\r\n    }\r\n\r\n    createZone(input: CreateZoneInput) {\r\n        return this.baseDataService.mutate<CreateZone.Mutation, CreateZone.Variables>(CREATE_ZONE, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    updateZone(input: UpdateZoneInput) {\r\n        return this.baseDataService.mutate<UpdateZone.Mutation, UpdateZone.Variables>(UPDATE_ZONE, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    deleteZone(id: string) {\r\n        return this.baseDataService.mutate<DeleteZone.Mutation, DeleteZone.Variables>(DELETE_ZONE, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    addMembersToZone(zoneId: string, memberIds: string[]) {\r\n        return this.baseDataService.mutate<AddMembersToZone.Mutation, AddMembersToZone.Variables>(\r\n            ADD_MEMBERS_TO_ZONE,\r\n            {\r\n                zoneId,\r\n                memberIds,\r\n            },\r\n        );\r\n    }\r\n\r\n    removeMembersFromZone(zoneId: string, memberIds: string[]) {\r\n        return this.baseDataService.mutate<RemoveMembersFromZone.Mutation, RemoveMembersFromZone.Variables>(\r\n            REMOVE_MEMBERS_FROM_ZONE,\r\n            {\r\n                zoneId,\r\n                memberIds,\r\n            },\r\n        );\r\n    }\r\n\r\n    getTaxCategories() {\r\n        return this.baseDataService.query<GetTaxCategories.Query>(GET_TAX_CATEGORIES);\r\n    }\r\n\r\n    getTaxCategory(id: string) {\r\n        return this.baseDataService.query<GetTaxCategory.Query, GetTaxCategory.Variables>(GET_TAX_CATEGORY, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createTaxCategory(input: CreateTaxCategoryInput) {\r\n        return this.baseDataService.mutate<CreateTaxCategory.Mutation, CreateTaxCategory.Variables>(\r\n            CREATE_TAX_CATEGORY,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateTaxCategory(input: UpdateTaxCategoryInput) {\r\n        return this.baseDataService.mutate<UpdateTaxCategory.Mutation, UpdateTaxCategory.Variables>(\r\n            UPDATE_TAX_CATEGORY,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteTaxCategory(id: string) {\r\n        return this.baseDataService.mutate<DeleteTaxCategory.Mutation, DeleteTaxRate.Variables>(\r\n            DELETE_TAX_CATEGORY,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getTaxRates(take: number = 10, skip: number = 0, fetchPolicy?: FetchPolicy) {\r\n        return this.baseDataService.query<GetTaxRateList.Query, GetTaxRateList.Variables>(\r\n            GET_TAX_RATE_LIST,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                },\r\n            },\r\n            fetchPolicy,\r\n        );\r\n    }\r\n\r\n    getTaxRate(id: string) {\r\n        return this.baseDataService.query<GetTaxRate.Query, GetTaxRate.Variables>(GET_TAX_RATE, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createTaxRate(input: CreateTaxRateInput) {\r\n        return this.baseDataService.mutate<CreateTaxRate.Mutation, CreateTaxRate.Variables>(CREATE_TAX_RATE, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    updateTaxRate(input: UpdateTaxRateInput) {\r\n        return this.baseDataService.mutate<UpdateTaxRate.Mutation, UpdateTaxRate.Variables>(UPDATE_TAX_RATE, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    deleteTaxRate(id: string) {\r\n        return this.baseDataService.mutate<DeleteTaxRate.Mutation, DeleteTaxRate.Variables>(DELETE_TAX_RATE, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getChannels() {\r\n        return this.baseDataService.query<GetChannels.Query>(GET_CHANNELS);\r\n    }\r\n\r\n    getChannel(id: string) {\r\n        return this.baseDataService.query<GetChannel.Query, GetChannel.Variables>(GET_CHANNEL, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getActiveChannel(fetchPolicy?: FetchPolicy) {\r\n        return this.baseDataService.query<GetActiveChannel.Query, GetActiveChannel.Variables>(\r\n            GET_ACTIVE_CHANNEL,\r\n            {},\r\n            fetchPolicy,\r\n        );\r\n    }\r\n\r\n    createChannel(input: CreateChannelInput) {\r\n        return this.baseDataService.mutate<CreateChannel.Mutation, CreateChannel.Variables>(CREATE_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    updateChannel(input: UpdateChannelInput) {\r\n        return this.baseDataService.mutate<UpdateChannel.Mutation, UpdateChannel.Variables>(UPDATE_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    deleteChannel(id: string) {\r\n        return this.baseDataService.mutate<DeleteChannel.Mutation, DeleteChannel.Variables>(DELETE_CHANNEL, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getPaymentMethods(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetPaymentMethodList.Query, GetPaymentMethodList.Variables>(\r\n            GET_PAYMENT_METHOD_LIST,\r\n            {\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getPaymentMethod(id: string) {\r\n        return this.baseDataService.query<GetPaymentMethod.Query, GetPaymentMethod.Variables>(\r\n            GET_PAYMENT_METHOD,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    createPaymentMethod(input: CreatePaymentMethodInput) {\r\n        return this.baseDataService.mutate<CreatePaymentMethod.Mutation, CreatePaymentMethod.Variables>(\r\n            CREATE_PAYMENT_METHOD,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updatePaymentMethod(input: UpdatePaymentMethodInput) {\r\n        return this.baseDataService.mutate<UpdatePaymentMethod.Mutation, UpdatePaymentMethod.Variables>(\r\n            UPDATE_PAYMENT_METHOD,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deletePaymentMethod(id: string, force: boolean) {\r\n        return this.baseDataService.mutate<DeletePaymentMethod.Mutation, DeletePaymentMethod.Variables>(\r\n            DELETE_PAYMENT_METHOD,\r\n            {\r\n                id,\r\n                force,\r\n            },\r\n        );\r\n    }\r\n\r\n    getPaymentMethodOperations() {\r\n        return this.baseDataService.query<GetPaymentMethodOperations.Query>(GET_PAYMENT_METHOD_OPERATIONS);\r\n    }\r\n\r\n    getGlobalSettings(fetchPolicy?: WatchQueryFetchPolicy) {\r\n        return this.baseDataService.query<GetGlobalSettings.Query>(\r\n            GET_GLOBAL_SETTINGS,\r\n            undefined,\r\n            fetchPolicy,\r\n        );\r\n    }\r\n\r\n    updateGlobalSettings(input: UpdateGlobalSettingsInput) {\r\n        return this.baseDataService.mutate<UpdateGlobalSettings.Mutation, UpdateGlobalSettings.Variables>(\r\n            UPDATE_GLOBAL_SETTINGS,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    getJob(id: string) {\r\n        return this.baseDataService.query<GetJobInfo.Query, GetJobInfo.Variables>(GET_JOB_INFO, { id });\r\n    }\r\n\r\n    pollJobs(ids: string[]) {\r\n        return this.baseDataService.query<GetJobsById.Query, GetJobsById.Variables>(GET_JOBS_BY_ID, {\r\n            ids,\r\n        });\r\n    }\r\n\r\n    getAllJobs(options?: JobListOptions) {\r\n        return this.baseDataService.query<GetAllJobs.Query, GetAllJobs.Variables>(GET_JOBS_LIST, {\r\n            options,\r\n        });\r\n    }\r\n\r\n    getJobQueues() {\r\n        return this.baseDataService.query<GetJobQueueList.Query>(GET_JOB_QUEUE_LIST);\r\n    }\r\n\r\n    getRunningJobs() {\r\n        return this.baseDataService.query<GetAllJobs.Query, GetAllJobs.Variables>(GET_JOBS_LIST, {\r\n            options: {\r\n                filter: {\r\n                    state: {\r\n                        eq: JobState.RUNNING,\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    cancelJob(id: string) {\r\n        return this.baseDataService.mutate<CancelJob.Mutation, CancelJob.Variables>(CANCEL_JOB, {\r\n            id,\r\n        });\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport { CONFIGURABLE_OPERATION_DEF_FRAGMENT, CONFIGURABLE_OPERATION_FRAGMENT } from './shared-definitions';\r\n\r\nexport const SHIPPING_METHOD_FRAGMENT = gql`\r\n    fragment ShippingMethod on ShippingMethod {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        name\r\n        description\r\n        fulfillmentHandlerCode\r\n        checker {\r\n            ...ConfigurableOperation\r\n        }\r\n        calculator {\r\n            ...ConfigurableOperation\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n            description\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_SHIPPING_METHOD_LIST = gql`\r\n    query GetShippingMethodList($options: ShippingMethodListOptions) {\r\n        shippingMethods(options: $options) {\r\n            items {\r\n                ...ShippingMethod\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const GET_SHIPPING_METHOD = gql`\r\n    query GetShippingMethod($id: ID!) {\r\n        shippingMethod(id: $id) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const GET_SHIPPING_METHOD_OPERATIONS = gql`\r\n    query GetShippingMethodOperations {\r\n        shippingEligibilityCheckers {\r\n            ...ConfigurableOperationDef\r\n        }\r\n        shippingCalculators {\r\n            ...ConfigurableOperationDef\r\n        }\r\n        fulfillmentHandlers {\r\n            ...ConfigurableOperationDef\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_SHIPPING_METHOD = gql`\r\n    mutation CreateShippingMethod($input: CreateShippingMethodInput!) {\r\n        createShippingMethod(input: $input) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_SHIPPING_METHOD = gql`\r\n    mutation UpdateShippingMethod($input: UpdateShippingMethodInput!) {\r\n        updateShippingMethod(input: $input) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_SHIPPING_METHOD = gql`\r\n    mutation DeleteShippingMethod($id: ID!) {\r\n        deleteShippingMethod(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TEST_SHIPPING_METHOD = gql`\r\n    query TestShippingMethod($input: TestShippingMethodInput!) {\r\n        testShippingMethod(input: $input) {\r\n            eligible\r\n            quote {\r\n                price\r\n                priceWithTax\r\n                metadata\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TEST_ELIGIBLE_SHIPPING_METHODS = gql`\r\n    query TestEligibleShippingMethods($input: TestEligibleShippingMethodsInput!) {\r\n        testEligibleShippingMethods(input: $input) {\r\n            id\r\n            name\r\n            code\r\n            description\r\n            price\r\n            priceWithTax\r\n            metadata\r\n        }\r\n    }\r\n`;\r\n","import { pick } from '@vendure/common/lib/pick';\n\nimport {\n    CreateShippingMethod,\n    CreateShippingMethodInput,\n    DeleteShippingMethod,\n    GetShippingMethod,\n    GetShippingMethodList,\n    GetShippingMethodOperations,\n    TestEligibleShippingMethods,\n    TestEligibleShippingMethodsInput,\n    TestShippingMethod,\n    TestShippingMethodInput,\n    UpdateShippingMethod,\n    UpdateShippingMethodInput,\n} from '../../common/generated-types';\nimport {\n    CREATE_SHIPPING_METHOD,\n    DELETE_SHIPPING_METHOD,\n    GET_SHIPPING_METHOD,\n    GET_SHIPPING_METHOD_LIST,\n    GET_SHIPPING_METHOD_OPERATIONS,\n    TEST_ELIGIBLE_SHIPPING_METHODS,\n    TEST_SHIPPING_METHOD,\n    UPDATE_SHIPPING_METHOD,\n} from '../definitions/shipping-definitions';\n\nimport { BaseDataService } from './base-data.service';\n\nexport class ShippingMethodDataService {\n    constructor(private baseDataService: BaseDataService) {}\n\n    getShippingMethods(take: number = 10, skip: number = 0) {\n        return this.baseDataService.query<GetShippingMethodList.Query, GetShippingMethodList.Variables>(\n            GET_SHIPPING_METHOD_LIST,\n            {\n                options: {\n                    take,\n                    skip,\n                },\n            },\n        );\n    }\n\n    getShippingMethod(id: string) {\n        return this.baseDataService.query<GetShippingMethod.Query, GetShippingMethod.Variables>(\n            GET_SHIPPING_METHOD,\n            {\n                id,\n            },\n        );\n    }\n\n    getShippingMethodOperations() {\n        return this.baseDataService.query<GetShippingMethodOperations.Query>(GET_SHIPPING_METHOD_OPERATIONS);\n    }\n\n    createShippingMethod(input: CreateShippingMethodInput) {\n        const variables: CreateShippingMethod.Variables = {\n            input: pick(input, [\n                'code',\n                'checker',\n                'calculator',\n                'fulfillmentHandler',\n                'customFields',\n                'translations',\n            ]),\n        };\n        return this.baseDataService.mutate<CreateShippingMethod.Mutation, CreateShippingMethod.Variables>(\n            CREATE_SHIPPING_METHOD,\n            variables,\n        );\n    }\n\n    updateShippingMethod(input: UpdateShippingMethodInput) {\n        const variables: UpdateShippingMethod.Variables = {\n            input: pick(input, [\n                'id',\n                'code',\n                'checker',\n                'calculator',\n                'fulfillmentHandler',\n                'customFields',\n                'translations',\n            ]),\n        };\n        return this.baseDataService.mutate<UpdateShippingMethod.Mutation, UpdateShippingMethod.Variables>(\n            UPDATE_SHIPPING_METHOD,\n            variables,\n        );\n    }\n\n    deleteShippingMethod(id: string) {\n        return this.baseDataService.mutate<DeleteShippingMethod.Mutation, DeleteShippingMethod.Variables>(\n            DELETE_SHIPPING_METHOD,\n            {\n                id,\n            },\n        );\n    }\n\n    testShippingMethod(input: TestShippingMethodInput) {\n        return this.baseDataService.query<TestShippingMethod.Query, TestShippingMethod.Variables>(\n            TEST_SHIPPING_METHOD,\n            {\n                input,\n            },\n        );\n    }\n\n    testEligibleShippingMethods(input: TestEligibleShippingMethodsInput) {\n        return this.baseDataService.query<\n            TestEligibleShippingMethods.Query,\n            TestEligibleShippingMethods.Variables\n        >(TEST_ELIGIBLE_SHIPPING_METHODS, {\n            input,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { MutationUpdaterFn, WatchQueryFetchPolicy } from '@apollo/client/core';\r\nimport { DocumentNode } from 'graphql';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { QueryResult } from '../query-result';\r\n\r\nimport { AdministratorDataService } from './administrator-data.service';\r\nimport { AuthDataService } from './auth-data.service';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { ClientDataService } from './client-data.service';\r\nimport { CollectionDataService } from './collection-data.service';\r\nimport { CustomerDataService } from './customer-data.service';\r\nimport { FacetDataService } from './facet-data.service';\r\nimport { OrderDataService } from './order-data.service';\r\nimport { ProductDataService } from './product-data.service';\r\nimport { PromotionDataService } from './promotion-data.service';\r\nimport { SettingsDataService } from './settings-data.service';\r\nimport { ShippingMethodDataService } from './shipping-method-data.service';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    promotion: PromotionDataService;\r\n    administrator: AdministratorDataService;\r\n    auth: AuthDataService;\r\n    collection: CollectionDataService;\r\n    product: ProductDataService;\r\n    client: ClientDataService;\r\n    facet: FacetDataService;\r\n    order: OrderDataService;\r\n    settings: SettingsDataService;\r\n    customer: CustomerDataService;\r\n    shippingMethod: ShippingMethodDataService;\r\n\r\n    constructor(private baseDataService: BaseDataService) {\r\n        this.promotion = new PromotionDataService(baseDataService);\r\n        this.administrator = new AdministratorDataService(baseDataService);\r\n        this.auth = new AuthDataService(baseDataService);\r\n        this.collection = new CollectionDataService(baseDataService);\r\n        this.product = new ProductDataService(baseDataService);\r\n        this.client = new ClientDataService(baseDataService);\r\n        this.facet = new FacetDataService(baseDataService);\r\n        this.order = new OrderDataService(baseDataService);\r\n        this.settings = new SettingsDataService(baseDataService);\r\n        this.customer = new CustomerDataService(baseDataService);\r\n        this.shippingMethod = new ShippingMethodDataService(baseDataService);\r\n    }\r\n\r\n    /**\r\n     * Perform a GraphQL query.\r\n     */\r\n    query<T, V = Record<string, any>>(\r\n        query: DocumentNode,\r\n        variables?: V,\r\n        fetchPolicy: WatchQueryFetchPolicy = 'cache-and-network',\r\n    ): QueryResult<T, V> {\r\n        return this.baseDataService.query(query, variables, fetchPolicy);\r\n    }\r\n\r\n    /**\r\n     * Perform a GraphQL mutation.\r\n     */\r\n    mutate<T, V = Record<string, any>>(\r\n        mutation: DocumentNode,\r\n        variables?: V,\r\n        update?: MutationUpdaterFn<T>,\r\n    ): Observable<T> {\r\n        return this.baseDataService.mutate(mutation, variables, update);\r\n    }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\nimport { DataService } from './data/providers/data.service';\nimport { ServerConfigService } from './data/server-config';\nimport { LocalStorageService } from './providers/local-storage/local-storage.service';\n\n@Component({\n    selector: 'vdr-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n    loading$: Observable<boolean>;\n    private _document?: Document;\n\n    constructor(\n        private dataService: DataService,\n        private serverConfigService: ServerConfigService,\n        private localStorageService: LocalStorageService,\n        @Inject(DOCUMENT) private document?: any,\n    ) {\n        this._document = document;\n    }\n\n    ngOnInit() {\n        this.loading$ = this.dataService.client\n            .getNetworkStatus()\n            .stream$.pipe(map(data => 0 < data.networkStatus.inFlightRequests));\n\n        this.dataService.client\n            .uiState()\n            .mapStream(data => data.uiState.theme)\n            .subscribe(theme => {\n                this._document?.body.setAttribute('data-theme', theme);\n            });\n\n        // Once logged in, keep the localStorage \"contentLanguageCode\" in sync with the\n        // uiState. Also perform a check to ensure that the current contentLanguage is\n        // one of the availableLanguages per GlobalSettings.\n        this.dataService.client\n            .userStatus()\n            .mapStream(({ userStatus }) => userStatus.isLoggedIn)\n            .pipe(\n                filter(loggedIn => loggedIn === true),\n                switchMap(() => {\n                    return this.dataService.client.uiState().mapStream(data => data.uiState.contentLanguage);\n                }),\n                switchMap(contentLang => {\n                    return this.serverConfigService\n                        .getAvailableLanguages()\n                        .pipe(map(available => [contentLang, available] as const));\n                }),\n            )\n            .subscribe({\n                next: ([contentLanguage, availableLanguages]) => {\n                    this.localStorageService.set('contentLanguageCode', contentLanguage);\n                    if (availableLanguages.length && !availableLanguages.includes(contentLanguage)) {\n                        this.dataService.client.setContentLanguage(availableLanguages[0]).subscribe();\n                    }\n                },\n            });\n    }\n}\n","import { AdminUiConfig } from '@vendure/common/lib/shared-types';\r\n\r\nimport { LanguageCode } from './common/generated-types';\r\n\r\nlet vendureUiConfig: AdminUiConfig | undefined;\r\n\r\nexport function loadAppConfig(): Promise<void> {\r\n    return fetch('./vendure-ui-config.json')\r\n        .then(res => res.json())\r\n        .then(config => {\r\n            vendureUiConfig = config;\r\n        });\r\n}\r\n\r\nexport function getAppConfig(): AdminUiConfig {\r\n    if (!vendureUiConfig) {\r\n        throw new Error(`vendure ui config not loaded`);\r\n    }\r\n    return vendureUiConfig;\r\n}\r\n","import { getAppConfig } from '../../app.config';\r\nimport { LanguageCode } from '../generated-types';\r\n\r\nexport function getDefaultUiLanguage(): LanguageCode {\r\n    return getAppConfig().defaultLanguage;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, mapTo, mergeMap, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    AttemptLogin,\r\n    CurrentUserChannel,\r\n    CurrentUserFragment,\r\n    SetAsLoggedIn,\r\n} from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\nimport { ServerConfigService } from '../../data/server-config';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\n\r\n/**\r\n * This service handles logic relating to authentication of the current user.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n    constructor(\r\n        private localStorageService: LocalStorageService,\r\n        private dataService: DataService,\r\n        private serverConfigService: ServerConfigService,\r\n    ) {}\r\n\r\n    /**\r\n     * Attempts to log in via the REST login endpoint and updates the app\r\n     * state on success.\r\n     */\r\n    logIn(username: string, password: string, rememberMe: boolean): Observable<AttemptLogin.Login> {\r\n        return this.dataService.auth.attemptLogin(username, password, rememberMe).pipe(\r\n            switchMap(response => {\r\n                if (response.login.__typename === 'CurrentUser') {\r\n                    this.setChannelToken(response.login.channels);\r\n                }\r\n                return this.serverConfigService.getServerConfig().then(() => response.login);\r\n            }),\r\n            switchMap(login => {\r\n                if (login.__typename === 'CurrentUser') {\r\n                    const { id } = this.getActiveChannel(login.channels);\r\n                    return this.dataService.client\r\n                        .loginSuccess(username, id, login.channels)\r\n                        .pipe(map(() => login));\r\n                }\r\n                return of(login);\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Update the user status to being logged out.\r\n     */\r\n    logOut(): Observable<boolean> {\r\n        return this.dataService.client.userStatus().single$.pipe(\r\n            switchMap(status => {\r\n                if (status.userStatus.isLoggedIn) {\r\n                    return this.dataService.client\r\n                        .logOut()\r\n                        .pipe(mergeMap(() => this.dataService.auth.logOut()));\r\n                } else {\r\n                    return [];\r\n                }\r\n            }),\r\n            mapTo(true),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks the app state to see if the user is already logged in,\r\n     * and if not, attempts to validate any auth token found.\r\n     */\r\n    checkAuthenticatedStatus(): Observable<boolean> {\r\n        return this.dataService.client.userStatus().single$.pipe(\r\n            mergeMap(data => {\r\n                if (!data.userStatus.isLoggedIn) {\r\n                    return this.validateAuthToken();\r\n                } else {\r\n                    return of(true);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks for an auth token and if found, attempts to validate\r\n     * that token against the API.\r\n     */\r\n    validateAuthToken(): Observable<boolean> {\r\n        return this.dataService.auth.currentUser().single$.pipe(\r\n            mergeMap(result => {\r\n                if (!result.me) {\r\n                    return of(false) as any;\r\n                }\r\n                this.setChannelToken(result.me.channels);\r\n                const { id } = this.getActiveChannel(result.me.channels);\r\n                return this.dataService.client.loginSuccess(result.me.identifier, id, result.me.channels);\r\n            }),\r\n            mapTo(true),\r\n            catchError(err => of(false)),\r\n        );\r\n    }\r\n\r\n    private getActiveChannel(userChannels: CurrentUserFragment['channels']) {\r\n        const lastActiveChannelToken = this.localStorageService.get('activeChannelToken');\r\n        if (lastActiveChannelToken) {\r\n            const lastActiveChannel = userChannels.find(c => c.token === lastActiveChannelToken);\r\n            if (lastActiveChannel) {\r\n                return lastActiveChannel;\r\n            }\r\n        }\r\n        const defaultChannel = userChannels.find(c => c.code === DEFAULT_CHANNEL_CODE);\r\n        return defaultChannel || userChannels[0];\r\n    }\r\n\r\n    private setChannelToken(userChannels: CurrentUserFragment['channels']) {\r\n        this.localStorageService.set('activeChannelToken', this.getActiveChannel(userChannels).token);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { LanguageCode } from '../../common/generated-types';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class I18nService {\r\n    _availableLanguages: LanguageCode[] = [];\r\n\r\n    get availableLanguages(): LanguageCode[] {\r\n        return [...this._availableLanguages];\r\n    }\r\n\r\n    constructor(private ngxTranslate: TranslateService) {}\r\n\r\n    /**\r\n     * Set the default language\r\n     */\r\n    setDefaultLanguage(languageCode: LanguageCode) {\r\n        this.ngxTranslate.setDefaultLang(languageCode);\r\n    }\r\n\r\n    /**\r\n     * Set the UI language\r\n     */\r\n    setLanguage(language: LanguageCode): void {\r\n        this.ngxTranslate.use(language);\r\n    }\r\n\r\n    /**\r\n     * Set the available UI languages\r\n     */\r\n    setAvailableLanguages(languages: LanguageCode[]) {\r\n        this._availableLanguages = languages;\r\n    }\r\n\r\n    /**\r\n     * Translate the given key.\r\n     */\r\n    translate(key: string | string[], params?: any): string {\r\n        return this.ngxTranslate.instant(key, params);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ContentChild,\r\n    ContentChildren,\r\n    QueryList,\r\n    TemplateRef,\r\n    Type,\r\n    ViewChild,\r\n    ViewChildren,\r\n} from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { Dialog, ModalOptions } from '../../../providers/modal/modal.service';\r\n\r\nimport { DialogButtonsDirective } from './dialog-buttons.directive';\r\n\r\n/**\r\n * This component should only be instatiated dynamically by the ModalService. It should not be used\r\n * directly in templates. See {@link ModalService.fromComponent} method for more detail.\r\n */\r\n@Component({\r\n    selector: 'vdr-modal-dialog',\r\n    templateUrl: './modal-dialog.component.html',\r\n    styleUrls: ['./modal-dialog.component.scss'],\r\n})\r\nexport class ModalDialogComponent<T extends Dialog<any>> {\r\n    childComponentType: Type<T>;\r\n    closeModal: (result?: any) => void;\r\n    titleTemplateRef$ = new Subject<TemplateRef<any>>();\r\n    buttonsTemplateRef$ = new Subject<TemplateRef<any>>();\r\n    options?: ModalOptions<T>;\r\n\r\n    /**\r\n     * This callback is invoked when the childComponentType is instantiated in the\r\n     * template by the {@link DialogComponentOutletComponent}.\r\n     * Once we have the instance, we can set the resolveWith function and any\r\n     * locals which were specified in the config.\r\n     */\r\n    onCreate(componentInstance: T) {\r\n        componentInstance.resolveWith = (result?: any) => {\r\n            this.closeModal(result);\r\n        };\r\n        if (this.options && this.options.locals) {\r\n            // tslint:disable-next-line\r\n            for (const key in this.options.locals) {\r\n                componentInstance[key] = this.options.locals[key] as T[Extract<keyof T, string>];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This should be called by the {@link DialogTitleDirective} only\r\n     */\r\n    registerTitleTemplate(titleTemplateRef: TemplateRef<any>) {\r\n        this.titleTemplateRef$.next(titleTemplateRef);\r\n    }\r\n\r\n    /**\r\n     * This should be called by the {@link DialogButtonsDirective} only\r\n     */\r\n    registerButtonsTemplate(buttonsTemplateRef: TemplateRef<any>) {\r\n        this.buttonsTemplateRef$.next(buttonsTemplateRef);\r\n    }\r\n\r\n    /**\r\n     * Called when the modal is closed by clicking the X or the mask.\r\n     */\r\n    modalOpenChange(status: any) {\r\n        if (status === false) {\r\n            this.closeModal();\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\nimport { Dialog, DialogButtonConfig } from '../../../providers/modal/modal.service';\r\n\r\n/**\r\n * Used by ModalService.dialog() to host a generic configurable modal dialog.\r\n */\r\n@Component({\r\n    selector: 'vdr-simple-dialog',\r\n    templateUrl: './simple-dialog.component.html',\r\n    styleUrls: ['./simple-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SimpleDialogComponent implements Dialog<any> {\r\n    resolveWith: (result?: any) => void;\r\n    title = '';\r\n    body = '';\r\n    translationVars = {};\r\n    buttons: Array<DialogButtonConfig<any>> = [];\r\n}\r\n","import { Injectable, ViewContainerRef } from '@angular/core';\r\n\r\n/**\r\n * The OverlayHostService is used to get a reference to the ViewConainerRef of the\r\n * OverlayHost component, so that other components may insert components & elements\r\n * into the DOM at that point.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class OverlayHostService {\r\n    private hostView: ViewContainerRef;\r\n    private promiseResolveFns: Array<(result: any) => void> = [];\r\n\r\n    /**\r\n     * Used to pass in the ViewContainerRed from the OverlayHost component.\r\n     * Should not be used by any other component.\r\n     */\r\n    registerHostView(viewContainerRef: ViewContainerRef): void {\r\n        this.hostView = viewContainerRef;\r\n        if (0 < this.promiseResolveFns.length) {\r\n            this.resolveHostView();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a promise which resolves to the ViewContainerRef of the OverlayHost\r\n     * component. This can then be used to insert components and elements into the\r\n     * DOM at that point.\r\n     */\r\n    getHostView(): Promise<ViewContainerRef> {\r\n        return new Promise((resolve: (result: any) => void) => {\r\n            this.promiseResolveFns.push(resolve);\r\n            if (this.hostView !== undefined) {\r\n                this.resolveHostView();\r\n            }\r\n        });\r\n    }\r\n\r\n    private resolveHostView(): void {\r\n        this.promiseResolveFns.forEach(resolve => resolve(this.hostView));\r\n        this.promiseResolveFns = [];\r\n    }\r\n}\r\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\r\nimport { Type } from '@vendure/common/lib/shared-types';\r\nimport { from, Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { ModalDialogComponent } from '../../shared/components/modal-dialog/modal-dialog.component';\r\nimport { SimpleDialogComponent } from '../../shared/components/simple-dialog/simple-dialog.component';\r\nimport { OverlayHostService } from '../overlay-host/overlay-host.service';\r\n\r\n/**\r\n * Any component intended to be used with the ModalService.fromComponent() method must implement\r\n * this interface.\r\n */\r\nexport interface Dialog<R = any> {\r\n    /**\r\n     * Function to be invoked in order to close the dialog when the action is complete.\r\n     * The Observable returned from the .fromComponent() method will emit the value passed\r\n     * to this method and then complete.\r\n     */\r\n    resolveWith: (result?: R) => void;\r\n}\r\n\r\nexport interface DialogButtonConfig<T> {\r\n    label: string;\r\n    type: 'secondary' | 'primary' | 'danger';\r\n    returnValue?: T;\r\n}\r\n\r\n/**\r\n * Configures a generic modal dialog.\r\n */\r\nexport interface DialogConfig<T> {\r\n    title: string;\r\n    body?: string;\r\n    translationVars?: { [key: string]: string | number };\r\n    buttons: Array<DialogButtonConfig<T>>;\r\n}\r\n\r\n/**\r\n * Options to configure the behaviour of the modal.\r\n */\r\nexport interface ModalOptions<T> {\r\n    /** Sets the width of the dialog */\r\n    size?: 'sm' | 'md' | 'lg' | 'xl';\r\n    /** Sets the vertical alignment of the dialog */\r\n    verticalAlign?: 'top' | 'center' | 'bottom';\r\n    /**\r\n     * When true, the \"x\" icon is shown\r\n     * and clicking it or the mask will close the dialog\r\n     */\r\n    closable?: boolean;\r\n    /**\r\n     * Values to be passed directly to the component.\r\n     */\r\n    locals?: Partial<T>;\r\n}\r\n\r\n/**\r\n * This service is responsible for instantiating a ModalDialog component and\r\n * embedding the specified component within.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ModalService {\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private overlayHostService: OverlayHostService,\r\n    ) {}\r\n\r\n    /**\r\n     * Create a modal from a component. The component must implement the {@link Dialog} interface.\r\n     * Additionally, the component should include templates for the title and the buttons to be\r\n     * displayed in the modal dialog. See example:\r\n     *\r\n     * @example\r\n     * ```\r\n     * class MyDialog implements Dialog {\r\n     *  resolveWith: (result?: any) => void;\r\n     *\r\n     *  okay() {\r\n     *    doSomeWork().subscribe(result => {\r\n     *      this.resolveWith(result);\r\n     *    })\r\n     *  }\r\n     *\r\n     *  cancel() {\r\n     *    this.resolveWith(false);\r\n     *  }\r\n     * }\r\n     * ```\r\n     *\r\n     * ```\r\n     * <ng-template vdrDialogTitle>Title of the modal</ng-template>\r\n     *\r\n     * <p>\r\n     *     My Content\r\n     * </p>\r\n     *\r\n     * <ng-template vdrDialogButtons>\r\n     *     <button type=\"button\"\r\n     *             class=\"btn\"\r\n     *             (click)=\"cancel()\">Cancel</button>\r\n     *     <button type=\"button\"\r\n     *             class=\"btn btn-primary\"\r\n     *             (click)=\"okay()\">Okay</button>\r\n     * </ng-template>\r\n     * ```\r\n     */\r\n    fromComponent<T extends Dialog<any>, R>(\r\n        component: Type<T> & Type<Dialog<R>>,\r\n        options?: ModalOptions<T>,\r\n    ): Observable<R | undefined> {\r\n        const modalFactory = this.componentFactoryResolver.resolveComponentFactory(ModalDialogComponent);\r\n\r\n        return from(this.overlayHostService.getHostView()).pipe(\r\n            mergeMap((hostView) => {\r\n                const modalComponentRef = hostView.createComponent(modalFactory);\r\n                const modalInstance: ModalDialogComponent<any> = modalComponentRef.instance;\r\n                modalInstance.childComponentType = component;\r\n                modalInstance.options = options;\r\n\r\n                return new Observable<R>((subscriber) => {\r\n                    modalInstance.closeModal = (result: R) => {\r\n                        modalComponentRef.destroy();\r\n                        subscriber.next(result);\r\n                        subscriber.complete();\r\n                    };\r\n                });\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Displays a modal dialog with the provided title, body and buttons.\r\n     */\r\n    dialog<T>(config: DialogConfig<T>): Observable<T | undefined> {\r\n        return this.fromComponent(SimpleDialogComponent, {\r\n            locals: config,\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\nimport { LanguageCode } from '../../common/generated-types';\r\nimport { Dialog } from '../../providers/modal/modal.service';\r\n\r\n@Component({\r\n    selector: 'vdr-ui-language-switcher',\r\n    templateUrl: './ui-language-switcher-dialog.component.html',\r\n    styleUrls: ['./ui-language-switcher-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiLanguageSwitcherDialogComponent implements Dialog<LanguageCode> {\r\n    resolveWith: (result?: LanguageCode) => void;\r\n    currentLanguage: LanguageCode;\r\n    availableLanguages: LanguageCode[] = [];\r\n\r\n    setLanguage(languageCode: LanguageCode) {\r\n        this.resolveWith(languageCode);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { map, switchMap, take } from 'rxjs/operators';\r\n\r\nimport { getAppConfig } from '../../app.config';\r\nimport { LanguageCode } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\nimport { AuthService } from '../../providers/auth/auth.service';\r\nimport { I18nService } from '../../providers/i18n/i18n.service';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\nimport { ModalService } from '../../providers/modal/modal.service';\r\nimport { UiLanguageSwitcherDialogComponent } from '../ui-language-switcher-dialog/ui-language-switcher-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-app-shell',\r\n    templateUrl: './app-shell.component.html',\r\n    styleUrls: ['./app-shell.component.scss'],\r\n})\r\nexport class AppShellComponent implements OnInit {\r\n    userName$: Observable<string>;\r\n    uiLanguage$: Observable<LanguageCode>;\r\n    availableLanguages: LanguageCode[] = [];\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private dataService: DataService,\r\n        private router: Router,\r\n        private i18nService: I18nService,\r\n        private modalService: ModalService,\r\n        private localStorageService: LocalStorageService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.userName$ = this.dataService.client\r\n            .userStatus()\r\n            .single$.pipe(map(data => data.userStatus.username));\r\n        this.uiLanguage$ = this.dataService.client.uiState().stream$.pipe(map(data => data.uiState.language));\r\n        this.availableLanguages = this.i18nService.availableLanguages;\r\n    }\r\n\r\n    selectUiLanguage() {\r\n        this.uiLanguage$\r\n            .pipe(\r\n                take(1),\r\n                switchMap(currentLanguage =>\r\n                    this.modalService.fromComponent(UiLanguageSwitcherDialogComponent, {\r\n                        closable: true,\r\n                        size: 'md',\r\n                        locals: {\r\n                            availableLanguages: this.availableLanguages,\r\n                            currentLanguage,\r\n                        },\r\n                    }),\r\n                ),\r\n                switchMap(value => (value ? this.dataService.client.setUiLanguage(value) : EMPTY)),\r\n            )\r\n            .subscribe(result => {\r\n                if (result.setUiLanguage) {\r\n                    this.i18nService.setLanguage(result.setUiLanguage);\r\n                    this.localStorageService.set('uiLanguageCode', result.setUiLanguage);\r\n                }\r\n            });\r\n    }\r\n\r\n    logOut() {\r\n        this.authService.logOut().subscribe(() => {\r\n            const { loginUrl } = getAppConfig();\r\n            if (loginUrl) {\r\n                window.location.href = loginUrl;\r\n            } else {\r\n                this.router.navigate(['/login']);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Data, NavigationEnd, Params, PRIMARY_OUTLET, Router } from '@angular/router';\r\nimport { flatten } from 'lodash';\r\nimport { combineLatest as observableCombineLatest, Observable, of as observableOf, Subject } from 'rxjs';\r\nimport { filter, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nexport type BreadcrumbString = string;\r\nexport interface BreadcrumbLabelLinkPair {\r\n    label: string;\r\n    link: any[];\r\n}\r\nexport type BreadcrumbValue = BreadcrumbString | BreadcrumbLabelLinkPair | BreadcrumbLabelLinkPair[];\r\nexport type BreadcrumbFunction = (\r\n    data: Data,\r\n    params: Params,\r\n    dataService: DataService,\r\n) => BreadcrumbValue | Observable<BreadcrumbValue>;\r\nexport type BreadcrumbDefinition = BreadcrumbValue | BreadcrumbFunction | Observable<BreadcrumbValue>;\r\n\r\n/**\r\n * A breadcrumbs component which reads the route config and any route that has a `data.breadcrumb` property will\r\n * be displayed in the breadcrumb trail.\r\n *\r\n * The `breadcrumb` property can be a string or a function. If a function, it will be passed the route's `data`\r\n * object (which will include all resolved keys) and any route params, and should return a BreadcrumbValue.\r\n *\r\n * See the test config to get an idea of allowable configs for breadcrumbs.\r\n */\r\n@Component({\r\n    selector: 'vdr-breadcrumb',\r\n    templateUrl: './breadcrumb.component.html',\r\n    styleUrls: ['./breadcrumb.component.scss'],\r\n})\r\nexport class BreadcrumbComponent implements OnDestroy {\r\n    breadcrumbs$: Observable<Array<{ link: string | any[]; label: string }>>;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute, private dataService: DataService) {\r\n        this.breadcrumbs$ = this.router.events.pipe(\r\n            filter(event => event instanceof NavigationEnd),\r\n            takeUntil(this.destroy$),\r\n            startWith(true),\r\n            switchMap(() => this.generateBreadcrumbs(this.route.root)),\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    private generateBreadcrumbs(\r\n        rootRoute: ActivatedRoute,\r\n    ): Observable<Array<{ link: Array<string | any>; label: string }>> {\r\n        const breadcrumbParts = this.assembleBreadcrumbParts(rootRoute);\r\n        const breadcrumbObservables$ = breadcrumbParts.map(({ value$, path }) => {\r\n            return value$.pipe(\r\n                map(value => {\r\n                    if (isBreadcrumbLabelLinkPair(value)) {\r\n                        return {\r\n                            label: value.label,\r\n                            link: this.normalizeRelativeLinks(value.link, path),\r\n                        };\r\n                    } else if (isBreadcrumbPairArray(value)) {\r\n                        return value.map(val => ({\r\n                            label: val.label,\r\n                            link: this.normalizeRelativeLinks(val.link, path),\r\n                        }));\r\n                    } else {\r\n                        return {\r\n                            label: value,\r\n                            link: '/' + path.join('/'),\r\n                        };\r\n                    }\r\n                }),\r\n            ) as Observable<BreadcrumbLabelLinkPair | BreadcrumbLabelLinkPair[]>;\r\n        });\r\n\r\n        return observableCombineLatest(breadcrumbObservables$).pipe(map(links => flatten(links)));\r\n    }\r\n\r\n    /**\r\n     * Walks the route definition tree to assemble an array from which the breadcrumbs can be derived.\r\n     */\r\n    private assembleBreadcrumbParts(\r\n        rootRoute: ActivatedRoute,\r\n    ): Array<{ value$: Observable<BreadcrumbValue>; path: string[] }> {\r\n        const breadcrumbParts: Array<{ value$: Observable<BreadcrumbValue>; path: string[] }> = [];\r\n        const inferredUrl = '';\r\n        const segmentPaths: string[] = [];\r\n        let currentRoute: ActivatedRoute | null = rootRoute;\r\n        do {\r\n            const childRoutes = currentRoute.children;\r\n            currentRoute = null;\r\n            childRoutes.forEach((route: ActivatedRoute) => {\r\n                if (route.outlet === PRIMARY_OUTLET) {\r\n                    const routeSnapshot = route.snapshot;\r\n                    let breadcrumbDef: BreadcrumbDefinition | undefined =\r\n                        route.routeConfig && route.routeConfig.data && route.routeConfig.data['breadcrumb'];\r\n                    segmentPaths.push(routeSnapshot.url.map(segment => segment.path).join('/'));\r\n\r\n                    if (breadcrumbDef) {\r\n                        if (isBreadcrumbFunction(breadcrumbDef)) {\r\n                            breadcrumbDef = breadcrumbDef(\r\n                                routeSnapshot.data,\r\n                                routeSnapshot.params,\r\n                                this.dataService,\r\n                            );\r\n                        }\r\n                        const observableValue = isObservable(breadcrumbDef)\r\n                            ? breadcrumbDef\r\n                            : observableOf(breadcrumbDef);\r\n                        breadcrumbParts.push({ value$: observableValue, path: segmentPaths.slice() });\r\n                    }\r\n                    currentRoute = route;\r\n                }\r\n            });\r\n        } while (currentRoute);\r\n\r\n        return breadcrumbParts;\r\n    }\r\n\r\n    /**\r\n     * Accounts for relative routes in the link array, i.e. arrays whose first element is either:\r\n     * * `./`   - this appends the rest of the link segments to the current active route\r\n     * * `../`  - this removes the last segment of the current active route, and appends the link segments\r\n     *            to the parent route.\r\n     */\r\n    private normalizeRelativeLinks(link: any[], segmentPaths: string[]): any[] {\r\n        const clone = link.slice();\r\n        if (clone[0] === './') {\r\n            clone[0] = segmentPaths.join('/');\r\n        }\r\n        if (clone[0] === '../') {\r\n            clone[0] = segmentPaths.slice(0, -1).join('/');\r\n        }\r\n        return clone.filter(segment => segment !== '');\r\n    }\r\n}\r\n\r\nfunction isBreadcrumbFunction(value: BreadcrumbDefinition): value is BreadcrumbFunction {\r\n    return typeof value === 'function';\r\n}\r\n\r\nfunction isObservable(value: BreadcrumbDefinition): value is Observable<BreadcrumbValue> {\r\n    return value instanceof Observable;\r\n}\r\n\r\nfunction isBreadcrumbLabelLinkPair(value: BreadcrumbValue): value is BreadcrumbLabelLinkPair {\r\n    return value.hasOwnProperty('label') && value.hasOwnProperty('link');\r\n}\r\n\r\nfunction isBreadcrumbPairArray(value: BreadcrumbValue): value is BreadcrumbLabelLinkPair[] {\r\n    return Array.isArray(value) && isBreadcrumbLabelLinkPair(value[0]);\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\n\r\nimport { CurrentUserChannel } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\n\r\n@Component({\r\n    selector: 'vdr-channel-switcher',\r\n    templateUrl: './channel-switcher.component.html',\r\n    styleUrls: ['./channel-switcher.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChannelSwitcherComponent implements OnInit {\r\n    readonly displayFilterThreshold = 10;\r\n    channels$: Observable<CurrentUserChannel[]>;\r\n    channelCount$: Observable<number>;\r\n    filterControl = new FormControl('');\r\n    activeChannelCode$: Observable<string>;\r\n    constructor(private dataService: DataService, private localStorageService: LocalStorageService) {}\r\n\r\n    ngOnInit() {\r\n        const channels$ = this.dataService.client.userStatus().mapStream(data => data.userStatus.channels);\r\n        const filterTerm$ = this.filterControl.valueChanges.pipe<string>(startWith(''));\r\n        this.channels$ = combineLatest(channels$, filterTerm$).pipe(\r\n            map(([channels, filterTerm]) => {\r\n                return filterTerm\r\n                    ? channels.filter(c =>\r\n                          c.code.toLocaleLowerCase().includes(filterTerm.toLocaleLowerCase()),\r\n                      )\r\n                    : channels;\r\n            }),\r\n        );\r\n        this.channelCount$ = channels$.pipe(map(channels => channels.length));\r\n        const activeChannel$ = this.dataService.client\r\n            .userStatus()\r\n            .mapStream(data => data.userStatus.channels.find(c => c.id === data.userStatus.activeChannelId))\r\n            .pipe(filter(notNullOrUndefined));\r\n        this.activeChannelCode$ = activeChannel$.pipe(map(channel => channel.code));\r\n    }\r\n\r\n    setActiveChannel(channelId: string) {\r\n        this.dataService.client.setActiveChannel(channelId).subscribe(({ setActiveChannel }) => {\r\n            const activeChannel = setActiveChannel.channels.find(c => c.id === channelId);\r\n            if (activeChannel) {\r\n                this.localStorageService.set('activeChannelToken', activeChannel.token);\r\n            }\r\n            this.filterControl.patchValue('');\r\n        });\r\n    }\r\n}\r\n","import { getAppConfig } from '../../app.config';\r\n\r\n/**\r\n * Returns the location of the server, e.g. \"http://localhost:3000\"\r\n */\r\nexport function getServerLocation(): string {\r\n    const { apiHost, apiPort, adminApiPath, tokenMethod } = getAppConfig();\r\n    const host = apiHost === 'auto' ? `${location.protocol}//${location.hostname}` : apiHost;\r\n    const port = apiPort\r\n        ? apiPort === 'auto'\r\n            ? location.port === ''\r\n                ? ''\r\n                : `:${location.port}`\r\n            : `:${apiPort}`\r\n        : '';\r\n    return `${host}${port}`;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { merge, Observable, of, Subject, timer } from 'rxjs';\r\nimport { catchError, map, shareReplay, switchMap, throttleTime } from 'rxjs/operators';\r\n\r\nimport { getServerLocation } from '../../data/utils/get-server-location';\r\n\r\nexport type SystemStatus = 'ok' | 'error';\r\n\r\nexport interface HealthCheckResult {\r\n    status: SystemStatus;\r\n    info: { [name: string]: HealthCheckSuccessResult };\r\n    details: { [name: string]: HealthCheckSuccessResult | HealthCheckErrorResult };\r\n    error: { [name: string]: HealthCheckErrorResult };\r\n}\r\n\r\nexport interface HealthCheckSuccessResult {\r\n    status: 'up';\r\n}\r\n\r\nexport interface HealthCheckErrorResult {\r\n    status: 'down';\r\n    message: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class HealthCheckService {\r\n    status$: Observable<SystemStatus>;\r\n    details$: Observable<Array<{ key: string; result: HealthCheckSuccessResult | HealthCheckErrorResult }>>;\r\n    lastCheck$: Observable<Date>;\r\n\r\n    private readonly pollingDelayMs = 60 * 1000;\r\n    private readonly healthCheckEndpoint: string;\r\n    private readonly _refresh = new Subject();\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        this.healthCheckEndpoint = getServerLocation() + '/health';\r\n\r\n        const refresh$ = this._refresh.pipe(throttleTime(1000));\r\n        const result$ = merge(timer(0, this.pollingDelayMs), refresh$).pipe(\r\n            switchMap(() => this.checkHealth()),\r\n            shareReplay(1),\r\n        );\r\n\r\n        this.status$ = result$.pipe(map(res => res.status));\r\n        this.details$ = result$.pipe(\r\n            map(res =>\r\n                Object.keys(res.details).map(key => {\r\n                    return { key, result: res.details[key] };\r\n                }),\r\n            ),\r\n        );\r\n        this.lastCheck$ = result$.pipe(map(res => res.lastChecked));\r\n    }\r\n\r\n    refresh() {\r\n        this._refresh.next();\r\n    }\r\n\r\n    private checkHealth() {\r\n        return this.httpClient.get<HealthCheckResult>(this.healthCheckEndpoint).pipe(\r\n            catchError(err => of(err.error)),\r\n            map(res => ({ ...res, lastChecked: new Date() })),\r\n        );\r\n    }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { EMPTY, interval, Observable, of, Subject, Subscription, timer } from 'rxjs';\r\nimport { debounceTime, map, mapTo, scan, shareReplay, switchMap } from 'rxjs/operators';\r\n\r\nimport { JobInfoFragment, JobState, Permission } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class JobQueueService implements OnDestroy {\r\n    activeJobs$: Observable<JobInfoFragment[]>;\r\n\r\n    private updateJob$ = new Subject<JobInfoFragment>();\r\n    private onCompleteHandlers = new Map<string, (job: JobInfoFragment) => void>();\r\n    private readonly subscription: Subscription;\r\n\r\n    constructor(private dataService: DataService) {\r\n        this.checkForJobs();\r\n\r\n        this.activeJobs$ = this.updateJob$.pipe(\r\n            scan<JobInfoFragment, Map<string, JobInfoFragment>>(\r\n                (jobMap, job) => this.handleJob(jobMap, job),\r\n                new Map<string, JobInfoFragment>(),\r\n            ),\r\n            map(jobMap => Array.from(jobMap.values())),\r\n            debounceTime(500),\r\n            shareReplay(1),\r\n        );\r\n\r\n        this.subscription = this.activeJobs$\r\n            .pipe(\r\n                switchMap(jobs => {\r\n                    if (jobs.length) {\r\n                        return interval(2500).pipe(mapTo(jobs));\r\n                    } else {\r\n                        return of([]);\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(jobs => {\r\n                if (jobs.length) {\r\n                    this.dataService.settings.pollJobs(jobs.map(j => j.id)).single$.subscribe(data => {\r\n                        data.jobsById.forEach(job => {\r\n                            this.updateJob$.next(job);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After a given delay, checks the server for any active jobs.\r\n     */\r\n    checkForJobs(delay: number = 1000) {\r\n        timer(delay)\r\n            .pipe(\r\n                switchMap(() => this.dataService.client.userStatus().mapSingle(data => data.userStatus)),\r\n                switchMap(userStatus => {\r\n                    if (userStatus.permissions.includes(Permission.ReadSettings) && userStatus.isLoggedIn) {\r\n                        return this.dataService.settings.getRunningJobs().single$;\r\n                    } else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(data => data.jobs.items.forEach(job => this.updateJob$.next(job)));\r\n    }\r\n\r\n    addJob(jobId: string, onComplete?: (job: JobInfoFragment) => void) {\r\n        this.dataService.settings.getJob(jobId).single$.subscribe(({ job }) => {\r\n            if (job) {\r\n                this.updateJob$.next(job);\r\n                if (onComplete) {\r\n                    this.onCompleteHandlers.set(jobId, onComplete);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private handleJob(jobMap: Map<string, JobInfoFragment>, job: JobInfoFragment) {\r\n        switch (job.state) {\r\n            case JobState.RUNNING:\r\n            case JobState.PENDING:\r\n                jobMap.set(job.id, job);\r\n                break;\r\n            case JobState.COMPLETED:\r\n            case JobState.FAILED:\r\n            case JobState.CANCELLED:\r\n                jobMap.delete(job.id);\r\n                const handler = this.onCompleteHandlers.get(job.id);\r\n                if (handler) {\r\n                    handler(job);\r\n                    this.onCompleteHandlers.delete(job.id);\r\n                }\r\n                break;\r\n        }\r\n        return jobMap;\r\n    }\r\n}\r\n","import { APP_INITIALIZER, Injectable, Provider } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nimport { Permission } from '../../common/generated-types';\n\nimport {\n    ActionBarItem,\n    NavMenuBadgeType,\n    NavMenuItem,\n    NavMenuSection,\n    RouterLinkDefinition,\n} from './nav-builder-types';\n\n/**\n * @description\n * Add a section to the main nav menu. Providing the `before` argument will\n * move the section before any existing section with the specified id. If\n * omitted (or if the id is not found) the section will be appended to the\n * existing set of sections.\n * This should be used in the NgModule `providers` array of your ui extension module.\n *\n * @example\n * ```TypeScript\n * \\@NgModule({\n *   imports: [SharedModule],\n *   providers: [\n *     addNavMenuSection({\n *       id: 'reviews',\n *       label: 'Product Reviews',\n *       routerLink: ['/extensions/reviews'],\n *       icon: 'star',\n *     },\n *     'settings'),\n *   ],\n * })\n * export class MyUiExtensionModule {}\n * ```\n */\nexport function addNavMenuSection(config: NavMenuSection, before?: string): Provider {\n    return {\n        provide: APP_INITIALIZER,\n        multi: true,\n        useFactory: (navBuilderService: NavBuilderService) => () => {\n            navBuilderService.addNavMenuSection(config, before);\n        },\n        deps: [NavBuilderService],\n    };\n}\n\n/**\n * @description\n * Add a menu item to an existing section specified by `sectionId`. The id of the section\n * can be found by inspecting the DOM and finding the `data-section-id` attribute.\n * Providing the `before` argument will move the item before any existing item with the specified id.\n * If omitted (or if the name is not found) the item will be appended to the\n * end of the section.\n *\n * This should be used in the NgModule `providers` array of your ui extension module.\n *\n * @example\n * ```TypeScript\n * \\@NgModule({\n *   imports: [SharedModule],\n *   providers: [\n *     addNavMenuItem({\n *       id: 'reports',\n *       label: 'Reports',\n *       items: [{\n *           // ...\n *       }],\n *     },\n *     'marketing'),\n *   ],\n * })\n * export class MyUiExtensionModule {}\n * ```\n */\nexport function addNavMenuItem(config: NavMenuItem, sectionId: string, before?: string): Provider {\n    return {\n        provide: APP_INITIALIZER,\n        multi: true,\n        useFactory: (navBuilderService: NavBuilderService) => () => {\n            navBuilderService.addNavMenuItem(config, sectionId, before);\n        },\n        deps: [NavBuilderService],\n    };\n}\n\n/**\n * @description\n * Adds a button to the ActionBar at the top right of each list or detail view. The locationId can\n * be determined by inspecting the DOM and finding the <vdr-action-bar> element and its\n * `data-location-id` attribute.\n *\n * This should be used in the NgModule `providers` array of your ui extension module.\n *\n * @example\n * ```TypeScript\n * \\@NgModule({\n *   imports: [SharedModule],\n *   providers: [\n *     addActionBarItem({\n *      id: 'print-invoice'\n *      label: 'Print Invoice',\n *      locationId: 'order-detail',\n *      routerLink: ['/extensions/invoicing'],\n *     }),\n *   ],\n * })\n * export class MyUiExtensionModule {}\n * ```\n */\nexport function addActionBarItem(config: ActionBarItem): Provider {\n    return {\n        provide: APP_INITIALIZER,\n        multi: true,\n        useFactory: (navBuilderService: NavBuilderService) => () => {\n            navBuilderService.addActionBarItem(config);\n        },\n        deps: [NavBuilderService],\n    };\n}\n\n/**\n * This service is used to define the contents of configurable menus in the application.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class NavBuilderService {\n    navMenuConfig$: Observable<NavMenuSection[]>;\n    actionBarConfig$: Observable<ActionBarItem[]>;\n    sectionBadges: { [sectionId: string]: Observable<NavMenuBadgeType> } = {};\n\n    private initialNavMenuConfig$ = new BehaviorSubject<NavMenuSection[]>([]);\n    private addedNavMenuSections: Array<{ config: NavMenuSection; before?: string }> = [];\n    private addedNavMenuItems: Array<{\n        config: NavMenuItem;\n        sectionId: string;\n        before?: string;\n    }> = [];\n    private addedActionBarItems: ActionBarItem[] = [];\n\n    constructor() {\n        this.setupStreams();\n    }\n\n    /**\n     * Used to define the initial sections and items of the main nav menu.\n     */\n    defineNavMenuSections(config: NavMenuSection[]) {\n        this.initialNavMenuConfig$.next(config);\n    }\n\n    /**\n     * Add a section to the main nav menu. Providing the `before` argument will\n     * move the section before any existing section with the specified id. If\n     * omitted (or if the id is not found) the section will be appended to the\n     * existing set of sections.\n     *\n     * Providing the `id` of an existing section will replace that section.\n     */\n    addNavMenuSection(config: NavMenuSection, before?: string) {\n        this.addedNavMenuSections.push({ config, before });\n    }\n\n    /**\n     * Add a menu item to an existing section specified by `sectionId`. The id of the section\n     * can be found by inspecting the DOM and finding the `data-section-id` attribute.\n     * Providing the `before` argument will move the item before any existing item with the specified id.\n     * If omitted (or if the name is not found) the item will be appended to the\n     * end of the section.\n     *\n     * Providing the `id` of an existing item in that section will replace\n     * that item.\n     */\n    addNavMenuItem(config: NavMenuItem, sectionId: string, before?: string) {\n        this.addedNavMenuItems.push({ config, sectionId, before });\n    }\n\n    /**\n     * Adds a button to the ActionBar at the top right of each list or detail view. The locationId can\n     * be determined by inspecting the DOM and finding the <vdr-action-bar> element and its\n     * `data-location-id` attribute.\n     */\n    addActionBarItem(config: ActionBarItem) {\n        this.addedActionBarItems.push({\n            requiresPermission: Permission.Authenticated,\n            ...config,\n        });\n    }\n\n    getRouterLink(config: { routerLink?: RouterLinkDefinition }, route: ActivatedRoute): string[] | null {\n        if (typeof config.routerLink === 'function') {\n            return config.routerLink(route);\n        }\n        if (Array.isArray(config.routerLink)) {\n            return config.routerLink;\n        }\n        return null;\n    }\n\n    private setupStreams() {\n        const sectionAdditions$ = of(this.addedNavMenuSections);\n        const itemAdditions$ = of(this.addedNavMenuItems);\n\n        const combinedConfig$ = combineLatest(this.initialNavMenuConfig$, sectionAdditions$).pipe(\n            map(([initialConfig, additions]) => {\n                for (const { config, before } of additions) {\n                    if (!config.requiresPermission) {\n                        config.requiresPermission = Permission.Authenticated;\n                    }\n                    const existingIndex = initialConfig.findIndex(c => c.id === config.id);\n                    if (-1 < existingIndex) {\n                        initialConfig[existingIndex] = config;\n                    }\n                    const beforeIndex = initialConfig.findIndex(c => c.id === before);\n                    if (-1 < beforeIndex) {\n                        if (-1 < existingIndex) {\n                            initialConfig.splice(existingIndex, 1);\n                        }\n                        initialConfig.splice(beforeIndex, 0, config);\n                    } else if (existingIndex === -1) {\n                        initialConfig.push(config);\n                    }\n                }\n                return initialConfig;\n            }),\n            shareReplay(1),\n        );\n\n        this.navMenuConfig$ = combineLatest(combinedConfig$, itemAdditions$).pipe(\n            map(([sections, additionalItems]) => {\n                for (const item of additionalItems) {\n                    const section = sections.find(s => s.id === item.sectionId);\n                    if (!section) {\n                        // tslint:disable-next-line:no-console\n                        console.error(\n                            `Could not add menu item \"${item.config.id}\", section \"${item.sectionId}\" does not exist`,\n                        );\n                    } else {\n                        const { config, sectionId, before } = item;\n                        const existingIndex = section.items.findIndex(i => i.id === config.id);\n                        if (-1 < existingIndex) {\n                            section.items[existingIndex] = config;\n                        }\n                        const beforeIndex = section.items.findIndex(i => i.id === before);\n                        if (-1 < beforeIndex) {\n                            if (-1 < existingIndex) {\n                                section.items.splice(existingIndex, 1);\n                            }\n                            section.items.splice(beforeIndex, 0, config);\n                        } else if (existingIndex === -1) {\n                            section.items.push(config);\n                        }\n                    }\n                }\n\n                // Aggregate any badges defined for the nav items in each section\n                for (const section of sections) {\n                    const itemBadgeStatuses = section.items\n                        .map(i => i.statusBadge)\n                        .filter(notNullOrUndefined);\n                    this.sectionBadges[section.id] = combineLatest(itemBadgeStatuses).pipe(\n                        map(badges => {\n                            const propagatingBadges = badges.filter(b => b.propagateToSection);\n                            if (propagatingBadges.length === 0) {\n                                return 'none';\n                            }\n                            const statuses = propagatingBadges.map(b => b.type);\n                            if (statuses.includes('error')) {\n                                return 'error';\n                            } else if (statuses.includes('warning')) {\n                                return 'warning';\n                            } else if (statuses.includes('info')) {\n                                return 'info';\n                            } else {\n                                return 'none';\n                            }\n                        }),\n                    );\n                }\n\n                return sections;\n            }),\n        );\n\n        this.actionBarConfig$ = of(this.addedActionBarItems);\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { Subscription } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { Permission } from '../../common/generated-types';\nimport { DataService } from '../../data/providers/data.service';\nimport { HealthCheckService } from '../../providers/health-check/health-check.service';\nimport { JobQueueService } from '../../providers/job-queue/job-queue.service';\nimport { NavMenuBadge, NavMenuItem } from '../../providers/nav-builder/nav-builder-types';\nimport { NavBuilderService } from '../../providers/nav-builder/nav-builder.service';\n\n@Component({\n    selector: 'vdr-main-nav',\n    templateUrl: './main-nav.component.html',\n    styleUrls: ['./main-nav.component.scss'],\n})\nexport class MainNavComponent implements OnInit, OnDestroy {\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        public navBuilderService: NavBuilderService,\n        private healthCheckService: HealthCheckService,\n        private jobQueueService: JobQueueService,\n        private dataService: DataService,\n    ) {}\n\n    private userPermissions: string[];\n    private subscription: Subscription;\n\n    shouldDisplayLink(menuItem: Pick<NavMenuItem, 'requiresPermission'>) {\n        if (!this.userPermissions) {\n            return false;\n        }\n        if (!menuItem.requiresPermission) {\n            return true;\n        }\n        if (typeof menuItem.requiresPermission === 'string') {\n            return this.userPermissions.includes(menuItem.requiresPermission);\n        }\n        if (typeof menuItem.requiresPermission === 'function') {\n            return menuItem.requiresPermission(this.userPermissions);\n        }\n    }\n\n    ngOnInit(): void {\n        this.defineNavMenu();\n        this.subscription = this.dataService.client\n            .userStatus()\n            .mapStream(({ userStatus }) => {\n                this.userPermissions = userStatus.permissions;\n            })\n            .subscribe();\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    getRouterLink(item: NavMenuItem) {\n        return this.navBuilderService.getRouterLink(item, this.route);\n    }\n\n    private defineNavMenu() {\n        function allow(...permissions: string[]): (userPermissions: string[]) => boolean {\n            return userPermissions => {\n                for (const permission of permissions) {\n                    if (userPermissions.includes(permission)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n\n        this.navBuilderService.defineNavMenuSections([\n            {\n                requiresPermission: allow(\n                    Permission.ReadCatalog,\n                    Permission.ReadProduct,\n                    Permission.ReadFacet,\n                    Permission.ReadCollection,\n                    Permission.ReadAsset,\n                ),\n                id: 'catalog',\n                label: _('nav.catalog'),\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadCatalog, Permission.ReadProduct),\n                        id: 'products',\n                        label: _('nav.products'),\n                        icon: 'library',\n                        routerLink: ['/catalog', 'products'],\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCatalog, Permission.ReadFacet),\n                        id: 'facets',\n                        label: _('nav.facets'),\n                        icon: 'tag',\n                        routerLink: ['/catalog', 'facets'],\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCatalog, Permission.ReadCollection),\n                        id: 'collections',\n                        label: _('nav.collections'),\n                        icon: 'folder-open',\n                        routerLink: ['/catalog', 'collections'],\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCatalog, Permission.ReadAsset),\n                        id: 'assets',\n                        label: _('nav.assets'),\n                        icon: 'image-gallery',\n                        routerLink: ['/catalog', 'assets'],\n                    },\n                ],\n            },\n            {\n                id: 'sales',\n                label: _('nav.sales'),\n                requiresPermission: allow(Permission.ReadOrder),\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadOrder),\n                        id: 'orders',\n                        label: _('nav.orders'),\n                        routerLink: ['/orders'],\n                        icon: 'shopping-cart',\n                    },\n                ],\n            },\n            {\n                id: 'customers',\n                label: _('nav.customers'),\n                requiresPermission: allow(Permission.ReadCustomer, Permission.ReadCustomerGroup),\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadCustomer),\n                        id: 'customers',\n                        label: _('nav.customers'),\n                        routerLink: ['/customer', 'customers'],\n                        icon: 'user',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCustomerGroup),\n                        id: 'customer-groups',\n                        label: _('nav.customer-groups'),\n                        routerLink: ['/customer', 'groups'],\n                        icon: 'users',\n                    },\n                ],\n            },\n            {\n                id: 'marketing',\n                label: _('nav.marketing'),\n                requiresPermission: allow(Permission.ReadPromotion),\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadPromotion),\n                        id: 'promotions',\n                        label: _('nav.promotions'),\n                        routerLink: ['/marketing', 'promotions'],\n                        icon: 'asterisk',\n                    },\n                ],\n            },\n            {\n                id: 'settings',\n                label: _('nav.settings'),\n                requiresPermission: allow(\n                    Permission.ReadSettings,\n                    Permission.ReadChannel,\n                    Permission.ReadAdministrator,\n                    Permission.ReadShippingMethod,\n                    Permission.ReadPaymentMethod,\n                    Permission.ReadTaxCategory,\n                    Permission.ReadTaxRate,\n                    Permission.ReadCountry,\n                    Permission.ReadZone,\n                    Permission.UpdateGlobalSettings,\n                ),\n                collapsible: true,\n                collapsedByDefault: true,\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadChannel),\n                        id: 'channels',\n                        label: _('nav.channels'),\n                        routerLink: ['/settings', 'channels'],\n                        icon: 'layers',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadAdministrator),\n                        id: 'administrators',\n                        label: _('nav.administrators'),\n                        routerLink: ['/settings', 'administrators'],\n                        icon: 'administrator',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadAdministrator),\n                        id: 'roles',\n                        label: _('nav.roles'),\n                        routerLink: ['/settings', 'roles'],\n                        icon: 'users',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadShippingMethod),\n                        id: 'shipping-methods',\n                        label: _('nav.shipping-methods'),\n                        routerLink: ['/settings', 'shipping-methods'],\n                        icon: 'truck',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadPaymentMethod),\n                        id: 'payment-methods',\n                        label: _('nav.payment-methods'),\n                        routerLink: ['/settings', 'payment-methods'],\n                        icon: 'credit-card',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadTaxCategory),\n                        id: 'tax-categories',\n                        label: _('nav.tax-categories'),\n                        routerLink: ['/settings', 'tax-categories'],\n                        icon: 'view-list',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadTaxRate),\n                        id: 'tax-rates',\n                        label: _('nav.tax-rates'),\n                        routerLink: ['/settings', 'tax-rates'],\n                        icon: 'calculator',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCountry),\n                        id: 'countries',\n                        label: _('nav.countries'),\n                        routerLink: ['/settings', 'countries'],\n                        icon: 'flag',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadZone),\n                        id: 'zones',\n                        label: _('nav.zones'),\n                        routerLink: ['/settings', 'zones'],\n                        icon: 'world',\n                    },\n                    {\n                        requiresPermission: allow(Permission.UpdateGlobalSettings),\n                        id: 'global-settings',\n                        label: _('nav.global-settings'),\n                        routerLink: ['/settings', 'global-settings'],\n                        icon: 'cog',\n                    },\n                ],\n            },\n            {\n                id: 'system',\n                label: _('nav.system'),\n                requiresPermission: Permission.ReadSystem,\n                collapsible: true,\n                collapsedByDefault: true,\n                items: [\n                    {\n                        id: 'job-queue',\n                        label: _('nav.job-queue'),\n                        routerLink: ['/system', 'jobs'],\n                        icon: 'tick-chart',\n                        statusBadge: this.jobQueueService.activeJobs$.pipe(\n                            startWith([]),\n                            map(\n                                jobs =>\n                                    ({\n                                        type: jobs.length === 0 ? 'none' : 'info',\n                                        propagateToSection: jobs.length > 0,\n                                    } as NavMenuBadge),\n                            ),\n                        ),\n                    },\n                    {\n                        id: 'system-status',\n                        label: _('nav.system-status'),\n                        routerLink: ['/system', 'system-status'],\n                        icon: 'rack-server',\n                        statusBadge: this.healthCheckService.status$.pipe(\n                            map(status => ({\n                                type: status === 'ok' ? 'success' : 'error',\n                                propagateToSection: status === 'error',\n                            })),\n                        ),\n                    },\n                ],\n            },\n        ]);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\r\n\r\nimport { NotificationType } from '../../providers/notification/notification.service';\r\n\r\n@Component({\r\n    selector: 'vdr-notification',\r\n    templateUrl: './notification.component.html',\r\n    styleUrls: ['./notification.component.scss'],\r\n})\r\nexport class NotificationComponent {\r\n    @ViewChild('wrapper', { static: true }) wrapper: ElementRef;\r\n    offsetTop = 0;\r\n    message = '';\r\n    translationVars: { [key: string]: string | number } = {};\r\n    type: NotificationType = 'info';\r\n    isVisible = true;\r\n    private onClickFn: () => void = () => {\r\n        /* */\r\n    }\r\n\r\n    registerOnClickFn(fn: () => void): void {\r\n        this.onClickFn = fn;\r\n    }\r\n\r\n    @HostListener('click')\r\n    onClick(): void {\r\n        if (this.isVisible) {\r\n            this.onClickFn();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fade out the toast. When promise resolves, toast is invisible and\r\n     * can be removed.\r\n     */\r\n    fadeOut(): Promise<any> {\r\n        this.isVisible = false;\r\n        return new Promise(resolve => setTimeout(resolve, 1000));\r\n    }\r\n\r\n    /**\r\n     * Returns the height of the toast element in px.\r\n     */\r\n    getHeight(): number {\r\n        if (!this.wrapper) {\r\n            return 0;\r\n        }\r\n        const el: HTMLElement = this.wrapper.nativeElement;\r\n        return el.getBoundingClientRect().height;\r\n    }\r\n\r\n    getIcon(): string {\r\n        switch (this.type) {\r\n            case 'info':\r\n                return 'info-circle';\r\n            case 'success':\r\n                return 'check-circle';\r\n            case 'error':\r\n                return 'exclamation-circle';\r\n            case 'warning':\r\n                return 'exclamation-triangle';\r\n        }\r\n    }\r\n\r\n    stringifyMessage(message: unknown) {\r\n        if (typeof message === 'string') {\r\n            return message;\r\n        } else {\r\n            return JSON.stringify(message, null, 2);\r\n        }\r\n    }\r\n}\r\n","import { Component, ViewContainerRef } from '@angular/core';\r\n\r\nimport { OverlayHostService } from '../../providers/overlay-host/overlay-host.service';\r\n\r\n/**\r\n * The OverlayHostComponent is a placeholder component which provides a location in the DOM into which overlay\r\n * elements (modals, notify notifications etc) may be injected dynamically.\r\n */\r\n@Component({\r\n    selector: 'vdr-overlay-host',\r\n    template: '<!-- -->',\r\n})\r\nexport class OverlayHostComponent {\r\n    constructor(viewContainerRef: ViewContainerRef, overlayHostService: OverlayHostService) {\r\n        overlayHostService.registerHostView(viewContainerRef);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\n\r\n@Component({\r\n    selector: 'vdr-theme-switcher',\r\n    templateUrl: './theme-switcher.component.html',\r\n    styleUrls: ['./theme-switcher.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ThemeSwitcherComponent implements OnInit {\r\n    activeTheme$: Observable<string>;\r\n\r\n    constructor(private dataService: DataService, private localStorageService: LocalStorageService) {}\r\n\r\n    ngOnInit() {\r\n        this.activeTheme$ = this.dataService.client.uiState().mapStream(data => data.uiState.theme);\r\n    }\r\n\r\n    toggleTheme(current: string) {\r\n        const newTheme = current === 'default' ? 'dark' : 'default';\r\n        this.dataService.client.setUiTheme(newTheme).subscribe(() => {\r\n            this.localStorageService.set('activeTheme', newTheme);\r\n        });\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { LanguageCode } from '../../common/generated-types';\n\n@Component({\n    selector: 'vdr-user-menu',\n    templateUrl: './user-menu.component.html',\n    styleUrls: ['./user-menu.component.scss'],\n})\nexport class UserMenuComponent {\n    @Input() userName = '';\n    @Input() availableLanguages: LanguageCode[] = [];\n    @Input() uiLanguage: LanguageCode;\n    @Output() logOut = new EventEmitter<void>();\n    @Output() selectUiLanguage = new EventEmitter<void>();\n}\n","// tslint:disable\n\n      export interface PossibleTypesResultData {\n        possibleTypes: {\n          [key: string]: string[]\n        }\n      }\n      const result: PossibleTypesResultData = {\n  \"possibleTypes\": {\n    \"CreateAssetResult\": [\n      \"Asset\",\n      \"MimeTypeError\"\n    ],\n    \"NativeAuthenticationResult\": [\n      \"CurrentUser\",\n      \"InvalidCredentialsError\",\n      \"NativeAuthStrategyError\"\n    ],\n    \"AuthenticationResult\": [\n      \"CurrentUser\",\n      \"InvalidCredentialsError\"\n    ],\n    \"CreateChannelResult\": [\n      \"Channel\",\n      \"LanguageNotAvailableError\"\n    ],\n    \"UpdateChannelResult\": [\n      \"Channel\",\n      \"LanguageNotAvailableError\"\n    ],\n    \"CreateCustomerResult\": [\n      \"Customer\",\n      \"EmailAddressConflictError\"\n    ],\n    \"UpdateCustomerResult\": [\n      \"Customer\",\n      \"EmailAddressConflictError\"\n    ],\n    \"UpdateGlobalSettingsResult\": [\n      \"GlobalSettings\",\n      \"ChannelDefaultLanguageError\"\n    ],\n    \"TransitionOrderToStateResult\": [\n      \"Order\",\n      \"OrderStateTransitionError\"\n    ],\n    \"SettlePaymentResult\": [\n      \"Payment\",\n      \"SettlePaymentError\",\n      \"PaymentStateTransitionError\",\n      \"OrderStateTransitionError\"\n    ],\n    \"AddFulfillmentToOrderResult\": [\n      \"Fulfillment\",\n      \"EmptyOrderLineSelectionError\",\n      \"ItemsAlreadyFulfilledError\",\n      \"InsufficientStockOnHandError\",\n      \"InvalidFulfillmentHandlerError\",\n      \"FulfillmentStateTransitionError\",\n      \"CreateFulfillmentError\"\n    ],\n    \"CancelOrderResult\": [\n      \"Order\",\n      \"EmptyOrderLineSelectionError\",\n      \"QuantityTooGreatError\",\n      \"MultipleOrderError\",\n      \"CancelActiveOrderError\",\n      \"OrderStateTransitionError\"\n    ],\n    \"RefundOrderResult\": [\n      \"Refund\",\n      \"QuantityTooGreatError\",\n      \"NothingToRefundError\",\n      \"OrderStateTransitionError\",\n      \"MultipleOrderError\",\n      \"PaymentOrderMismatchError\",\n      \"RefundOrderStateError\",\n      \"AlreadyRefundedError\",\n      \"RefundStateTransitionError\"\n    ],\n    \"SettleRefundResult\": [\n      \"Refund\",\n      \"RefundStateTransitionError\"\n    ],\n    \"TransitionFulfillmentToStateResult\": [\n      \"Fulfillment\",\n      \"FulfillmentStateTransitionError\"\n    ],\n    \"TransitionPaymentToStateResult\": [\n      \"Payment\",\n      \"PaymentStateTransitionError\"\n    ],\n    \"ModifyOrderResult\": [\n      \"Order\",\n      \"NoChangesSpecifiedError\",\n      \"OrderModificationStateError\",\n      \"PaymentMethodMissingError\",\n      \"RefundPaymentIdMissingError\",\n      \"OrderLimitError\",\n      \"NegativeQuantityError\",\n      \"InsufficientStockError\"\n    ],\n    \"AddManualPaymentToOrderResult\": [\n      \"Order\",\n      \"ManualPaymentStateError\"\n    ],\n    \"RemoveOptionGroupFromProductResult\": [\n      \"Product\",\n      \"ProductOptionInUseError\"\n    ],\n    \"CreatePromotionResult\": [\n      \"Promotion\",\n      \"MissingConditionsError\"\n    ],\n    \"UpdatePromotionResult\": [\n      \"Promotion\",\n      \"MissingConditionsError\"\n    ],\n    \"StockMovement\": [\n      \"StockAdjustment\",\n      \"Allocation\",\n      \"Sale\",\n      \"Cancellation\",\n      \"Return\",\n      \"Release\"\n    ],\n    \"StockMovementItem\": [\n      \"StockAdjustment\",\n      \"Allocation\",\n      \"Sale\",\n      \"Cancellation\",\n      \"Return\",\n      \"Release\"\n    ],\n    \"PaginatedList\": [\n      \"AdministratorList\",\n      \"CustomerGroupList\",\n      \"JobList\",\n      \"PaymentMethodList\",\n      \"AssetList\",\n      \"CollectionList\",\n      \"ProductVariantList\",\n      \"CountryList\",\n      \"CustomerList\",\n      \"FacetList\",\n      \"HistoryEntryList\",\n      \"OrderList\",\n      \"ProductList\",\n      \"PromotionList\",\n      \"RoleList\",\n      \"ShippingMethodList\",\n      \"TagList\",\n      \"TaxRateList\"\n    ],\n    \"Node\": [\n      \"Administrator\",\n      \"Asset\",\n      \"Collection\",\n      \"Customer\",\n      \"Facet\",\n      \"HistoryEntry\",\n      \"Job\",\n      \"Order\",\n      \"Fulfillment\",\n      \"Payment\",\n      \"OrderModification\",\n      \"PaymentMethod\",\n      \"Product\",\n      \"ProductVariant\",\n      \"StockAdjustment\",\n      \"Allocation\",\n      \"Sale\",\n      \"Cancellation\",\n      \"Return\",\n      \"Release\",\n      \"Address\",\n      \"Channel\",\n      \"Country\",\n      \"CustomerGroup\",\n      \"FacetValue\",\n      \"OrderItem\",\n      \"OrderLine\",\n      \"Refund\",\n      \"Surcharge\",\n      \"ProductOptionGroup\",\n      \"ProductOption\",\n      \"Promotion\",\n      \"Role\",\n      \"ShippingMethod\",\n      \"Tag\",\n      \"TaxCategory\",\n      \"TaxRate\",\n      \"User\",\n      \"AuthenticationMethod\",\n      \"Zone\"\n    ],\n    \"ErrorResult\": [\n      \"MimeTypeError\",\n      \"LanguageNotAvailableError\",\n      \"ChannelDefaultLanguageError\",\n      \"SettlePaymentError\",\n      \"EmptyOrderLineSelectionError\",\n      \"ItemsAlreadyFulfilledError\",\n      \"InvalidFulfillmentHandlerError\",\n      \"CreateFulfillmentError\",\n      \"InsufficientStockOnHandError\",\n      \"MultipleOrderError\",\n      \"CancelActiveOrderError\",\n      \"PaymentOrderMismatchError\",\n      \"RefundOrderStateError\",\n      \"NothingToRefundError\",\n      \"AlreadyRefundedError\",\n      \"QuantityTooGreatError\",\n      \"RefundStateTransitionError\",\n      \"PaymentStateTransitionError\",\n      \"FulfillmentStateTransitionError\",\n      \"OrderModificationStateError\",\n      \"NoChangesSpecifiedError\",\n      \"PaymentMethodMissingError\",\n      \"RefundPaymentIdMissingError\",\n      \"ManualPaymentStateError\",\n      \"ProductOptionInUseError\",\n      \"MissingConditionsError\",\n      \"NativeAuthStrategyError\",\n      \"InvalidCredentialsError\",\n      \"OrderStateTransitionError\",\n      \"EmailAddressConflictError\",\n      \"OrderLimitError\",\n      \"NegativeQuantityError\",\n      \"InsufficientStockError\"\n    ],\n    \"CustomField\": [\n      \"StringCustomFieldConfig\",\n      \"LocaleStringCustomFieldConfig\",\n      \"IntCustomFieldConfig\",\n      \"FloatCustomFieldConfig\",\n      \"BooleanCustomFieldConfig\",\n      \"DateTimeCustomFieldConfig\",\n      \"RelationCustomFieldConfig\",\n      \"TextCustomFieldConfig\"\n    ],\n    \"CustomFieldConfig\": [\n      \"StringCustomFieldConfig\",\n      \"LocaleStringCustomFieldConfig\",\n      \"IntCustomFieldConfig\",\n      \"FloatCustomFieldConfig\",\n      \"BooleanCustomFieldConfig\",\n      \"DateTimeCustomFieldConfig\",\n      \"RelationCustomFieldConfig\",\n      \"TextCustomFieldConfig\"\n    ],\n    \"SearchResultPrice\": [\n      \"PriceRange\",\n      \"SinglePrice\"\n    ]\n  }\n};\n      export default result;\n    ","// Allows the introspectionResult to be imported as a named symbol\r\nexport { default as introspectionResult } from './introspection-result';\r\n","import { Injector } from '@angular/core';\r\nimport { ApolloLink, Operation } from '@apollo/client/core';\r\n\r\nimport { JobQueueService } from '../providers/job-queue/job-queue.service';\r\n\r\n/**\r\n * This link checks each operation and if it is a mutation, it tells the JobQueueService\r\n * to poll for active jobs. This is because certain mutations trigger background jobs\r\n * which should be made known in the UI.\r\n */\r\nexport class CheckJobsLink extends ApolloLink {\r\n    private _jobQueueService: JobQueueService;\r\n    get jobQueueService(): JobQueueService {\r\n        if (!this._jobQueueService) {\r\n            this._jobQueueService = this.injector.get(JobQueueService);\r\n        }\r\n        return this._jobQueueService;\r\n    }\r\n\r\n    /**\r\n     * We inject the Injector rather than the JobQueueService directly in order\r\n     * to avoid a circular dependency error.\r\n     */\r\n    constructor(private injector: Injector) {\r\n        super((operation, forward) => {\r\n            if (this.isMutation(operation)) {\r\n                this.jobQueueService.checkForJobs();\r\n            }\r\n            return forward ? forward(operation) : null;\r\n        });\r\n    }\r\n\r\n    private isMutation(operation: Operation): boolean {\r\n        return !!operation.query.definitions.find(\r\n            d => d.kind === 'OperationDefinition' && d.operation === 'mutation',\r\n        );\r\n    }\r\n}\r\n","import { getAppConfig } from '../../app.config';\r\nimport { GetNetworkStatus, GetUiState, GetUserStatus } from '../../common/generated-types';\r\nimport { getDefaultUiLanguage } from '../../common/utilities/get-default-ui-language';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\n\r\nexport function getClientDefaults(localStorageService: LocalStorageService) {\r\n    const currentLanguage = localStorageService.get('uiLanguageCode') || getDefaultUiLanguage();\r\n    const currentContentLanguage = localStorageService.get('contentLanguageCode') || getDefaultUiLanguage();\r\n    const activeTheme = localStorageService.get('activeTheme') || 'default';\r\n    return {\r\n        networkStatus: {\r\n            inFlightRequests: 0,\r\n            __typename: 'NetworkStatus',\r\n        } as GetNetworkStatus.NetworkStatus,\r\n        userStatus: {\r\n            username: '',\r\n            isLoggedIn: false,\r\n            loginTime: '',\r\n            activeChannelId: null,\r\n            permissions: [],\r\n            channels: [],\r\n            __typename: 'UserStatus',\r\n        } as GetUserStatus.UserStatus,\r\n        uiState: {\r\n            language: currentLanguage,\r\n            contentLanguage: currentContentLanguage,\r\n            theme: activeTheme,\r\n            __typename: 'UiState',\r\n        } as GetUiState.UiState,\r\n    };\r\n}\r\n","import { InMemoryCache } from '@apollo/client/core';\r\n\r\nimport {\r\n    GetNetworkStatus,\r\n    GetUiState,\r\n    GetUserStatus,\r\n    LanguageCode,\r\n    SetActiveChannel,\r\n    SetAsLoggedIn,\r\n    SetContentLanguage,\r\n    SetUiLanguage,\r\n    SetUiTheme,\r\n    UpdateUserChannels,\r\n    UserStatus,\r\n} from '../../common/generated-types';\r\nimport { GET_NEWTORK_STATUS, GET_UI_STATE, GET_USER_STATUS } from '../definitions/client-definitions';\r\n\r\nexport type ResolverContext = {\r\n    cache: InMemoryCache;\r\n    optimisticResponse: any;\r\n    getCacheKey: (storeObj: any) => string;\r\n};\r\n\r\nexport type ResolverDefinition = {\r\n    Mutation: {\r\n        [name: string]: (rootValue: any, args: any, context: ResolverContext, info?: any) => any;\r\n    };\r\n};\r\n\r\nexport const clientResolvers: ResolverDefinition = {\r\n    Mutation: {\r\n        requestStarted: (_, args, { cache }): number => {\r\n            return updateRequestsInFlight(cache, 1);\r\n        },\r\n        requestCompleted: (_, args, { cache }): number => {\r\n            return updateRequestsInFlight(cache, -1);\r\n        },\r\n        setAsLoggedIn: (_, args: SetAsLoggedIn.Variables, { cache }): GetUserStatus.UserStatus => {\r\n            const {\r\n                input: { username, loginTime, channels, activeChannelId },\r\n            } = args;\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const permissions = channels.find(c => c.id === activeChannelId)!.permissions;\r\n            const data: { userStatus: UserStatus } = {\r\n                userStatus: {\r\n                    __typename: 'UserStatus',\r\n                    username,\r\n                    loginTime,\r\n                    isLoggedIn: true,\r\n                    permissions,\r\n                    channels,\r\n                    activeChannelId,\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_USER_STATUS, data });\r\n            return data.userStatus;\r\n        },\r\n        setAsLoggedOut: (_, args, { cache }): GetUserStatus.UserStatus => {\r\n            const data: GetUserStatus.Query = {\r\n                userStatus: {\r\n                    __typename: 'UserStatus',\r\n                    username: '',\r\n                    loginTime: '',\r\n                    isLoggedIn: false,\r\n                    permissions: [],\r\n                    channels: [],\r\n                    activeChannelId: null,\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_USER_STATUS, data });\r\n            return data.userStatus;\r\n        },\r\n        setUiLanguage: (_, args: SetUiLanguage.Variables, { cache }): LanguageCode => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUiState.Query>({ query: GET_UI_STATE })!;\r\n            const data: GetUiState.Query = {\r\n                uiState: {\r\n                    __typename: 'UiState',\r\n                    language: args.languageCode,\r\n                    contentLanguage: previous.uiState.contentLanguage,\r\n                    theme: previous.uiState.theme,\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_UI_STATE, data });\r\n            return args.languageCode;\r\n        },\r\n        setContentLanguage: (_, args: SetContentLanguage.Variables, { cache }): LanguageCode => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUiState.Query>({ query: GET_UI_STATE })!;\r\n            const data: GetUiState.Query = {\r\n                uiState: {\r\n                    __typename: 'UiState',\r\n                    language: previous.uiState.language,\r\n                    contentLanguage: args.languageCode,\r\n                    theme: previous.uiState.theme,\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_UI_STATE, data });\r\n            return args.languageCode;\r\n        },\r\n        setUiTheme: (_, args: SetUiTheme.Variables, { cache }): string => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUiState.Query>({ query: GET_UI_STATE })!;\r\n            const data: GetUiState.Query = {\r\n                uiState: {\r\n                    __typename: 'UiState',\r\n                    language: previous.uiState.language,\r\n                    contentLanguage: previous.uiState.contentLanguage,\r\n                    theme: args.theme,\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_UI_STATE, data });\r\n            return args.theme;\r\n        },\r\n        setActiveChannel: (_, args: SetActiveChannel.Variables, { cache }): UserStatus => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUserStatus.Query>({ query: GET_USER_STATUS })!;\r\n            const activeChannel = previous.userStatus.channels.find(c => c.id === args.channelId);\r\n            if (!activeChannel) {\r\n                throw new Error('setActiveChannel: Could not find Channel with ID ' + args.channelId);\r\n            }\r\n            const permissions = activeChannel.permissions;\r\n            const data: { userStatus: UserStatus } = {\r\n                userStatus: {\r\n                    ...previous.userStatus,\r\n                    permissions,\r\n                    activeChannelId: activeChannel.id,\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_USER_STATUS, data });\r\n            return data.userStatus;\r\n        },\r\n        updateUserChannels: (_, args: UpdateUserChannels.Variables, { cache }): UserStatus => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUserStatus.Query>({ query: GET_USER_STATUS })!;\r\n            const data = {\r\n                userStatus: {\r\n                    ...previous.userStatus,\r\n                    channels: Array.isArray(args.channels) ? args.channels : [args.channels],\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_USER_STATUS, data });\r\n            return data.userStatus;\r\n        },\r\n    },\r\n};\r\n\r\nfunction updateRequestsInFlight(cache: InMemoryCache, increment: 1 | -1): number {\r\n    const previous = cache.readQuery<GetNetworkStatus.Query>({ query: GET_NEWTORK_STATUS });\r\n    const inFlightRequests = previous ? previous.networkStatus.inFlightRequests + increment : increment;\r\n    const data: GetNetworkStatus.Query = {\r\n        networkStatus: {\r\n            __typename: 'NetworkStatus',\r\n            inFlightRequests,\r\n        },\r\n    };\r\n    cache.writeQuery({ query: GET_NEWTORK_STATUS, data });\r\n    return inFlightRequests;\r\n}\r\n","import { ApolloLink } from '@apollo/client/core';\r\nimport { omit } from '@vendure/common/lib/omit';\r\n\r\n/**\r\n * The \"__typename\" property added by Apollo Client causes errors when posting the entity\r\n * back in a mutation. Therefore this link will remove all such keys before the object\r\n * reaches the API layer.\r\n *\r\n * See: https://github.com/apollographql/apollo-client/issues/1913#issuecomment-393721604\r\n */\r\nexport class OmitTypenameLink extends ApolloLink {\r\n    constructor() {\r\n        super((operation, forward) => {\r\n            if (operation.variables) {\r\n                operation.variables = omit(operation.variables, ['__typename'], true);\r\n            }\r\n\r\n            return forward ? forward(operation) : null;\r\n        });\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * An adapter that allows the Angular HttpClient to be used as a replacement for the global `fetch` function.\r\n * This is used to supply a custom fetch function to the apollo-upload-client whilst also allowing the\r\n * use of Angular's http infrastructure such as interceptors.\r\n */\r\n@Injectable()\r\nexport class FetchAdapter {\r\n    constructor(private httpClient: HttpClient) {}\r\n\r\n    fetch = (input: Request | string, init: RequestInit): Promise<Response> => {\r\n        const url = typeof input === 'string' ? input : input.url;\r\n        const method = typeof input === 'string' ? (init.method ? init.method : 'GET') : input.method;\r\n\r\n        return this.httpClient\r\n            .request(method, url, {\r\n                body: init.body,\r\n                headers: init.headers as any,\r\n                observe: 'response',\r\n                responseType: 'json',\r\n                withCredentials: true,\r\n            })\r\n            .toPromise()\r\n            .then(result => {\r\n                return new Response(JSON.stringify(result.body), {\r\n                    status: result.status,\r\n                    statusText: result.statusText,\r\n                });\r\n            });\r\n    };\r\n}\r\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\r\n\r\nimport { NotificationComponent } from '../../components/notification/notification.component';\r\nimport { I18nService } from '../i18n/i18n.service';\r\nimport { OverlayHostService } from '../overlay-host/overlay-host.service';\r\n\r\nexport type NotificationType = 'info' | 'success' | 'error' | 'warning';\r\nexport interface ToastConfig {\r\n    message: string;\r\n    translationVars?: { [key: string]: string | number };\r\n    type?: NotificationType;\r\n    duration?: number;\r\n}\r\n\r\n// How many ms before the toast is dismissed.\r\nconst TOAST_DURATION = 3000;\r\n\r\n/**\r\n * Provides toast notification functionality.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class NotificationService {\r\n    private get hostView(): Promise<ViewContainerRef> {\r\n        return this.overlayHostService.getHostView();\r\n    }\r\n    private openToastRefs: Array<{ ref: ComponentRef<NotificationComponent>; timerId: any }> = [];\r\n\r\n    constructor(\r\n        private i18nService: I18nService,\r\n        private resolver: ComponentFactoryResolver,\r\n        private overlayHostService: OverlayHostService,\r\n    ) {}\r\n\r\n    /**\r\n     * Display a success toast notification\r\n     */\r\n    success(message: string, translationVars?: { [key: string]: string | number }): void {\r\n        this.notify({\r\n            message,\r\n            translationVars,\r\n            type: 'success',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Display an info toast notification\r\n     */\r\n    info(message: string, translationVars?: { [key: string]: string | number }): void {\r\n        this.notify({\r\n            message,\r\n            translationVars,\r\n            type: 'info',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Display a warning toast notification\r\n     */\r\n    warning(message: string, translationVars?: { [key: string]: string | number }): void {\r\n        this.notify({\r\n            message,\r\n            translationVars,\r\n            type: 'warning',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Display an error toast notification\r\n     */\r\n    error(message: string, translationVars?: { [key: string]: string | number }): void {\r\n        this.notify({\r\n            message,\r\n            translationVars,\r\n            type: 'error',\r\n            duration: 20000,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Display a toast notification.\r\n     */\r\n    notify(config: ToastConfig): void {\r\n        this.createToast(config);\r\n    }\r\n\r\n    /**\r\n     * Load a ToastComponent into the DOM host location.\r\n     */\r\n    private async createToast(config: ToastConfig): Promise<void> {\r\n        const toastFactory = this.resolver.resolveComponentFactory(NotificationComponent);\r\n        const hostView = await this.hostView;\r\n        const ref = hostView.createComponent<NotificationComponent>(toastFactory);\r\n        const toast: NotificationComponent = ref.instance;\r\n        const dismissFn = this.createDismissFunction(ref);\r\n        toast.type = config.type || 'info';\r\n        toast.message = config.message;\r\n        toast.translationVars = this.translateTranslationVars(config.translationVars || {});\r\n        toast.registerOnClickFn(dismissFn);\r\n\r\n        let timerId;\r\n        if (!config.duration || 0 < config.duration) {\r\n            timerId = setTimeout(dismissFn, config.duration || TOAST_DURATION);\r\n        }\r\n\r\n        this.openToastRefs.unshift({ ref, timerId });\r\n        setTimeout(() => this.calculatePositions());\r\n    }\r\n\r\n    /**\r\n     * Returns a function which will destroy the toast component and\r\n     * remove it from the openToastRefs array.\r\n     */\r\n    private createDismissFunction(ref: ComponentRef<NotificationComponent>): () => void {\r\n        return () => {\r\n            const toast: NotificationComponent = ref.instance;\r\n            const index = this.openToastRefs.map(o => o.ref).indexOf(ref);\r\n\r\n            if (this.openToastRefs[index]) {\r\n                clearTimeout(this.openToastRefs[index].timerId);\r\n            }\r\n\r\n            toast.fadeOut().then(() => {\r\n                ref.destroy();\r\n                this.openToastRefs.splice(index, 1);\r\n                this.calculatePositions();\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Calculate and set the top offsets for each of the open toasts.\r\n     */\r\n    private calculatePositions(): void {\r\n        let cumulativeHeight = 10;\r\n\r\n        this.openToastRefs.forEach(obj => {\r\n            const toast: NotificationComponent = obj.ref.instance;\r\n            toast.offsetTop = cumulativeHeight;\r\n            cumulativeHeight += toast.getHeight() + 6;\r\n        });\r\n    }\r\n\r\n    private translateTranslationVars(translationVars: {\r\n        [key: string]: string | number;\r\n    }): { [key: string]: string | number } {\r\n        for (const [key, val] of Object.entries(translationVars)) {\r\n            if (typeof val === 'string') {\r\n                translationVars[key] = this.i18nService.translate(val);\r\n            }\r\n        }\r\n        return translationVars;\r\n    }\r\n}\r\n","import {\r\n    HttpErrorResponse,\r\n    HttpEvent,\r\n    HttpHandler,\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { DEFAULT_AUTH_TOKEN_HEADER_KEY } from '@vendure/common/lib/shared-constants';\r\nimport { AdminUiConfig } from '@vendure/common/lib/shared-types';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { getAppConfig } from '../../app.config';\r\nimport { AuthService } from '../../providers/auth/auth.service';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\nimport { NotificationService } from '../../providers/notification/notification.service';\r\nimport { DataService } from '../providers/data.service';\r\n\r\nexport const AUTH_REDIRECT_PARAM = 'redirectTo';\r\n\r\n/**\r\n * The default interceptor examines all HTTP requests & responses and automatically updates the requesting state\r\n * and shows error notifications.\r\n */\r\n@Injectable()\r\nexport class DefaultInterceptor implements HttpInterceptor {\r\n    private readonly tokenMethod: AdminUiConfig['tokenMethod'] = 'cookie';\r\n    private readonly authTokenHeaderKey: string;\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private injector: Injector,\r\n        private authService: AuthService,\r\n        private router: Router,\r\n        private localStorageService: LocalStorageService,\r\n    ) {\r\n        this.tokenMethod = getAppConfig().tokenMethod;\r\n        this.authTokenHeaderKey = getAppConfig().authTokenHeaderKey || DEFAULT_AUTH_TOKEN_HEADER_KEY;\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        this.dataService.client.startRequest().subscribe();\r\n        return this.dataService.client.uiState().single$.pipe(\r\n            switchMap(({ uiState }) => {\r\n                const request = req.clone({\r\n                    setParams: {\r\n                        languageCode: uiState?.contentLanguage ?? '',\r\n                    },\r\n                });\r\n                return next.handle(request);\r\n            }),\r\n            tap(\r\n                event => {\r\n                    if (event instanceof HttpResponse) {\r\n                        this.checkForAuthToken(event);\r\n                        this.notifyOnError(event);\r\n                        this.dataService.client.completeRequest().subscribe();\r\n                    }\r\n                },\r\n                err => {\r\n                    if (err instanceof HttpErrorResponse) {\r\n                        this.notifyOnError(err);\r\n                        this.dataService.client.completeRequest().subscribe();\r\n                    } else {\r\n                        this.displayErrorNotification(err.message);\r\n                    }\r\n                },\r\n            ),\r\n        );\r\n    }\r\n\r\n    private notifyOnError(response: HttpResponse<any> | HttpErrorResponse) {\r\n        if (response instanceof HttpErrorResponse) {\r\n            if (response.status === 0) {\r\n                const { apiHost, apiPort } = getAppConfig();\r\n                this.displayErrorNotification(_(`error.could-not-connect-to-server`), {\r\n                    url: `${apiHost}:${apiPort}`,\r\n                });\r\n            } else if (response.status === 503 && response.url?.endsWith('/health')) {\r\n                this.displayErrorNotification(_(`error.health-check-failed`));\r\n            } else {\r\n                this.displayErrorNotification(this.extractErrorFromHttpResponse(response));\r\n            }\r\n        } else {\r\n            // GraphQL errors still return 200 OK responses, but have the actual error message\r\n            // inside the body of the response.\r\n            const graqhQLErrors = response.body.errors;\r\n            if (graqhQLErrors && Array.isArray(graqhQLErrors)) {\r\n                const firstCode: string = graqhQLErrors[0]?.extensions?.code;\r\n                if (firstCode === 'FORBIDDEN') {\r\n                    this.authService.logOut().subscribe(() => {\r\n                        if (!window.location.pathname.includes('login')) {\r\n                            const path = graqhQLErrors[0].path.join(' > ');\r\n                            this.displayErrorNotification(_(`error.403-forbidden`), { path });\r\n                        }\r\n                        this.router.navigate(['/login'], {\r\n                            queryParams: {\r\n                                [AUTH_REDIRECT_PARAM]: btoa(this.router.url),\r\n                            },\r\n                        });\r\n                    });\r\n                } else if (firstCode === 'CHANNEL_NOT_FOUND') {\r\n                    const message = graqhQLErrors.map(err => err.message).join('\\n');\r\n                    this.displayErrorNotification(message);\r\n                    this.localStorageService.remove('activeChannelToken');\r\n                } else {\r\n                    const message = graqhQLErrors.map(err => err.message).join('\\n');\r\n                    this.displayErrorNotification(message);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private extractErrorFromHttpResponse(response: HttpErrorResponse): string {\r\n        const errors = response.error.errors;\r\n        if (Array.isArray(errors)) {\r\n            return errors.map(e => e.message).join('\\n');\r\n        } else {\r\n            return response.message;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * We need to lazily inject the NotificationService since it depends on the I18nService which\r\n     * eventually depends on the HttpClient (used to load messages from json files). If we were to\r\n     * directly inject NotificationService into the constructor, we get a cyclic dependency.\r\n     */\r\n    private displayErrorNotification(message: string, vars?: Record<string, any>): void {\r\n        const notificationService = this.injector.get<NotificationService>(NotificationService);\r\n        notificationService.error(message, vars);\r\n    }\r\n\r\n    /**\r\n     * If the server is configured to use the \"bearer\" tokenMethod, each response should be checked\r\n     * for the existence of an auth token.\r\n     */\r\n    private checkForAuthToken(response: HttpResponse<any>) {\r\n        if (this.tokenMethod === 'bearer') {\r\n            const authToken = response.headers.get(this.authTokenHeaderKey);\r\n            if (authToken) {\r\n                this.localStorageService.set('authToken', authToken);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { ApolloClientOptions, InMemoryCache } from '@apollo/client/core';\nimport { setContext } from '@apollo/client/link/context';\nimport { ApolloLink } from '@apollo/client/link/core';\nimport { APOLLO_OPTIONS } from 'apollo-angular';\nimport { createUploadLink } from 'apollo-upload-client';\n\nimport { getAppConfig } from '../app.config';\nimport { introspectionResult } from '../common/introspection-result-wrapper';\nimport { LocalStorageService } from '../providers/local-storage/local-storage.service';\n\nimport { CheckJobsLink } from './check-jobs-link';\nimport { getClientDefaults } from './client-state/client-defaults';\nimport { clientResolvers } from './client-state/client-resolvers';\nimport { GET_CLIENT_STATE } from './definitions/client-definitions';\nimport { OmitTypenameLink } from './omit-typename-link';\nimport { BaseDataService } from './providers/base-data.service';\nimport { DataService } from './providers/data.service';\nimport { FetchAdapter } from './providers/fetch-adapter';\nimport { DefaultInterceptor } from './providers/interceptor';\nimport { initializeServerConfigService, ServerConfigService } from './server-config';\nimport { getServerLocation } from './utils/get-server-location';\n\nexport function createApollo(\n    localStorageService: LocalStorageService,\n    fetchAdapter: FetchAdapter,\n    injector: Injector,\n): ApolloClientOptions<any> {\n    const { adminApiPath, tokenMethod } = getAppConfig();\n    const serverLocation = getServerLocation();\n    const apolloCache = new InMemoryCache({\n        possibleTypes: introspectionResult.possibleTypes,\n        typePolicies: {\n            GlobalSettings: {\n                fields: {\n                    serverConfig: {\n                        merge: (existing, incoming) => ({ ...existing, ...incoming }),\n                    },\n                },\n            },\n        },\n    });\n    apolloCache.writeQuery({\n        query: GET_CLIENT_STATE,\n        data: getClientDefaults(localStorageService),\n    });\n\n    if (!false) {\n        // TODO: enable only for dev mode\n        // make the Apollo Cache inspectable in the console for debug purposes\n        (window as any)['apolloCache'] = apolloCache;\n    }\n    return {\n        link: ApolloLink.from([\n            new OmitTypenameLink(),\n            new CheckJobsLink(injector),\n            setContext(() => {\n                const headers: Record<string, string> = {};\n                const channelToken = localStorageService.get('activeChannelToken');\n                if (channelToken) {\n                    headers['vendure-token'] = channelToken;\n                }\n                if (tokenMethod === 'bearer') {\n                    const authToken = localStorageService.get('authToken');\n                    if (authToken) {\n                        headers.authorization = `Bearer ${authToken}`;\n                    }\n                }\n                return { headers };\n            }),\n            createUploadLink({\n                uri: `${serverLocation}/${adminApiPath}`,\n                fetch: fetchAdapter.fetch,\n            }),\n        ]),\n        cache: apolloCache,\n        resolvers: clientResolvers,\n    };\n}\n\n/**\n * The DataModule is responsible for all API calls *and* serves as the source of truth for global app\n * state via the apollo-link-state package.\n */\n@NgModule({\n    imports: [HttpClientModule],\n    exports: [],\n    declarations: [],\n    providers: [\n        BaseDataService,\n        DataService,\n        FetchAdapter,\n        ServerConfigService,\n        {\n            provide: APOLLO_OPTIONS,\n            useFactory: createApollo,\n            deps: [LocalStorageService, FetchAdapter, Injector],\n        },\n        { provide: HTTP_INTERCEPTORS, useClass: DefaultInterceptor, multi: true },\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: initializeServerConfigService,\n            deps: [ServerConfigService],\n        },\n    ],\n})\nexport class DataModule {}\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport type Dictionary = {\r\n    [key: string]: string | Dictionary;\r\n};\r\n\r\n/**\r\n * A loader for ngx-translate which extends the HttpLoader functionality by stripping out any\r\n * values which are empty strings. This means that during development, translation keys which have\r\n * been extracted but not yet defined will fall back to the raw key text rather than displaying nothing.\r\n *\r\n * Originally from https://github.com/ngx-translate/core/issues/662#issuecomment-377010232\r\n */\r\nexport class CustomHttpTranslationLoader implements TranslateLoader {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private prefix: string = '/assets/i18n/',\r\n        private suffix: string = '.json',\r\n    ) {}\r\n\r\n    public getTranslation(lang: string): Observable<any> {\r\n        return this.http\r\n            .get(`${this.prefix}${lang}${this.suffix}`)\r\n            .pipe(map((res: any) => this.process(res)));\r\n    }\r\n\r\n    private process(object: Dictionary): Dictionary {\r\n        const newObject: Dictionary = {};\r\n\r\n        for (const key in object) {\r\n            if (object.hasOwnProperty(key)) {\r\n                const value = object[key];\r\n                if (typeof value !== 'string') {\r\n                    newObject[key] = this.process(value);\r\n                } else if (typeof value === 'string' && value === '') {\r\n                    // do not copy empty strings\r\n                } else {\r\n                    newObject[key] = object[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return newObject;\r\n    }\r\n}\r\n","/* tslint:disable:no-console */\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n    TranslateMessageFormatCompiler,\r\n    TranslateMessageFormatDebugCompiler,\r\n} from 'ngx-translate-messageformat-compiler';\r\n\r\n/**\r\n * Work-around for Angular 9 compat.\r\n * See https://github.com/lephyrus/ngx-translate-messageformat-compiler/issues/53#issuecomment-583677994\r\n *\r\n * Also logs errors which would otherwise get swallowed by ngx-translate. This is important\r\n * because it is quite easy to make errors in messageformat syntax, and without clear\r\n * error messages it's very hard to debug.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class InjectableTranslateMessageFormatCompiler extends TranslateMessageFormatCompiler {\r\n    compileTranslations(value: any, lang: string): any {\r\n        try {\r\n            return super.compileTranslations(value, lang);\r\n        } catch (e) {\r\n            console.error(`There was an error with the ${lang} translations:`);\r\n            console.log(e);\r\n            console.log(\r\n                `Check the messageformat docs: https://messageformat.github.io/messageformat/page-guide`,\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../common/component-registry-types';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ComponentRegistryService {\r\n    private inputComponentMap = new Map<string, Type<FormInputComponent<any>>>();\r\n\r\n    registerInputComponent(id: string, component: Type<FormInputComponent<any>>) {\r\n        if (this.inputComponentMap.has(id)) {\r\n            throw new Error(\r\n                `Cannot register an InputComponent with the id \"${id}\", as one with that id already exists`,\r\n            );\r\n        }\r\n        this.inputComponentMap.set(id, component);\r\n    }\r\n\r\n    getInputComponent(id: string): Type<FormInputComponent<any>> | undefined {\r\n        return this.inputComponentMap.get(id);\r\n    }\r\n}\r\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\r\nimport { Type } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent } from '../../common/component-registry-types';\r\nimport { CustomFields, CustomFieldsFragment } from '../../common/generated-types';\r\nimport { ComponentRegistryService } from '../component-registry/component-registry.service';\r\n\r\nexport type CustomFieldConfigType = CustomFieldsFragment;\r\n\r\nexport interface CustomFieldControl extends FormInputComponent<CustomFieldConfigType> {}\r\n\r\nexport type CustomFieldEntityName = Exclude<keyof CustomFields, '__typename'>;\r\n\r\n/**\r\n * This service allows the registration of custom controls for customFields.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CustomFieldComponentService {\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private componentRegistryService: ComponentRegistryService,\r\n    ) {}\r\n\r\n    /**\r\n     * Register a CustomFieldControl component to be used with the specified customField and entity.\r\n     */\r\n    registerCustomFieldComponent(\r\n        entity: CustomFieldEntityName,\r\n        fieldName: string,\r\n        component: Type<CustomFieldControl>,\r\n    ) {\r\n        const id = this.generateId(entity, fieldName, true);\r\n        this.componentRegistryService.registerInputComponent(id, component);\r\n    }\r\n\r\n    /**\r\n     * Checks whether a custom component is registered for the given entity custom field,\r\n     * and if so returns the ID of that component.\r\n     */\r\n    customFieldComponentExists(entity: CustomFieldEntityName, fieldName: string): string | undefined {\r\n        const id = this.generateId(entity, fieldName, true);\r\n        return this.componentRegistryService.getInputComponent(id) ? id : undefined;\r\n    }\r\n\r\n    private generateId(entity: CustomFieldEntityName, fieldName: string, isCustomField: boolean) {\r\n        let id = entity;\r\n        if (isCustomField) {\r\n            id += '-customFields';\r\n        }\r\n        id += '-' + fieldName;\r\n        return id;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\n\r\n@Component({\r\n    selector: 'vdr-boolean-form-input',\r\n    templateUrl: './boolean-form-input.component.html',\r\n    styleUrls: ['./boolean-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BooleanFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'boolean-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'boolean-form-input'>;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\nimport { CurrencyCode } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n@Component({\r\n    selector: 'vdr-currency-form-input',\r\n    templateUrl: './currency-form-input.component.html',\r\n    styleUrls: ['./currency-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CurrencyFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'currency-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    currencyCode$: Observable<CurrencyCode>;\r\n    config: DefaultFormComponentConfig<'currency-form-input'>;\r\n\r\n    constructor(private dataService: DataService) {\r\n        this.currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .mapStream(data => data.activeChannel.currencyCode);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\nimport { GetCustomerGroups } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n@Component({\r\n    selector: 'vdr-customer-group-form-input',\r\n    templateUrl: './customer-group-form-input.component.html',\r\n    styleUrls: ['./customer-group-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CustomerGroupFormInputComponent implements FormInputComponent, OnInit {\r\n    static readonly id: DefaultFormComponentId = 'customer-group-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    customerGroups$: Observable<GetCustomerGroups.Items[]>;\r\n    config: DefaultFormComponentConfig<'customer-group-form-input'>;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.customerGroups$ = this.dataService.customer\r\n            .getCustomerGroupList({\r\n                take: 1000,\r\n            })\r\n            .mapSingle(res => res.customerGroups.items)\r\n            .pipe(startWith([]));\r\n    }\r\n\r\n    selectGroup(group: GetCustomerGroups.Items) {\r\n        this.formControl.setValue(group.id);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\n\r\n@Component({\r\n    selector: 'vdr-date-form-input',\r\n    templateUrl: './date-form-input.component.html',\r\n    styleUrls: ['./date-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DateFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'date-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'date-form-input'>;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { Observable } from 'rxjs';\r\nimport { shareReplay } from 'rxjs/operators';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\nimport { FacetWithValues } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n@Component({\r\n    selector: 'vdr-facet-value-form-input',\r\n    templateUrl: './facet-value-form-input.component.html',\r\n    styleUrls: ['./facet-value-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetValueFormInputComponent implements FormInputComponent, OnInit {\r\n    static readonly id: DefaultFormComponentId = 'facet-value-form-input';\r\n    readonly isListInput = true;\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    facets$: Observable<FacetWithValues.Fragment[]>;\r\n    config: InputComponentConfig;\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.facets$ = this.dataService.facet\r\n            .getAllFacets()\r\n            .mapSingle(data => data.facets.items)\r\n            .pipe(shareReplay(1));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\n\r\n@Component({\r\n    selector: 'vdr-number-form-input',\r\n    templateUrl: './number-form-input.component.html',\r\n    styleUrls: ['./number-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NumberFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'number-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'number-form-input'>;\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\n\r\n@Component({\r\n    selector: 'vdr-password-form-input',\r\n    templateUrl: './password-form-input.component.html',\r\n    styleUrls: ['./password-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PasswordFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'password-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: InputComponentConfig;\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\nimport { GetProductVariant, ProductSelectorSearch } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n@Component({\r\n    selector: 'vdr-product-selector-form-input',\r\n    templateUrl: './product-selector-form-input.component.html',\r\n    styleUrls: ['./product-selector-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductSelectorFormInputComponent implements FormInputComponent, OnInit {\r\n    static readonly id: DefaultFormComponentId = 'product-selector-form-input';\r\n    readonly isListInput = true;\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: InputComponentConfig;\r\n    selection$: Observable<GetProductVariant.ProductVariant[]>;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.formControl.setValidators([\r\n            control => {\r\n                if (!control.value || !control.value.length) {\r\n                    return {\r\n                        atLeastOne: { length: control.value.length },\r\n                    };\r\n                }\r\n                return null;\r\n            },\r\n        ]);\r\n\r\n        this.selection$ = this.formControl.valueChanges.pipe(\r\n            startWith(this.formControl.value),\r\n            switchMap(value => {\r\n                if (Array.isArray(value) && 0 < value.length) {\r\n                    return forkJoin(\r\n                        value.map(id =>\r\n                            this.dataService.product\r\n                                .getProductVariant(id)\r\n                                .mapSingle(data => data.productVariant),\r\n                        ),\r\n                    );\r\n                }\r\n                return of([]);\r\n            }),\r\n            map(variants => variants.filter(notNullOrUndefined)),\r\n        );\r\n    }\r\n\r\n    addProductVariant(product: ProductSelectorSearch.Items) {\r\n        const value = this.formControl.value as string[];\r\n        this.formControl.setValue([...new Set([...value, product.productVariantId])]);\r\n    }\r\n\r\n    removeProductVariant(id: string) {\r\n        const value = this.formControl.value as string[];\r\n        this.formControl.setValue(value.filter(_id => _id !== id));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\nimport { RelationCustomFieldConfig } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-form-input',\r\n    templateUrl: './relation-form-input.component.html',\r\n    styleUrls: ['./relation-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'relation-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    config: RelationCustomFieldConfig;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\n\r\n@Component({\r\n    selector: 'vdr-select-form-input',\r\n    templateUrl: './select-form-input.component.html',\r\n    styleUrls: ['./select-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'select-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'select-form-input'>;\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\n\r\n@Component({\r\n    selector: 'vdr-text-form-input',\r\n    templateUrl: './text-form-input.component.html',\r\n    styleUrls: ['./text-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'text-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: InputComponentConfig;\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\n\r\n@Component({\r\n    selector: 'vdr-textarea-form-input',\r\n    templateUrl: './textarea-form-input.component.html',\r\n    styleUrls: ['./textarea-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextareaFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'textarea-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'textarea-form-input'>;\r\n\r\n    get spellcheck(): boolean {\r\n        return this.config.spellcheck === true;\r\n    }\r\n}\r\n","import { APP_INITIALIZER, FactoryProvider, Provider, Type } from '@angular/core';\r\n\r\nimport { FormInputComponent } from '../../common/component-registry-types';\r\nimport { ComponentRegistryService } from '../../providers/component-registry/component-registry.service';\r\nimport {\r\n    CustomFieldComponentService,\r\n    CustomFieldControl,\r\n    CustomFieldEntityName,\r\n} from '../../providers/custom-field-component/custom-field-component.service';\r\n\r\nimport { BooleanFormInputComponent } from './boolean-form-input/boolean-form-input.component';\r\nimport { CurrencyFormInputComponent } from './currency-form-input/currency-form-input.component';\r\nimport { CustomerGroupFormInputComponent } from './customer-group-form-input/customer-group-form-input.component';\r\nimport { DateFormInputComponent } from './date-form-input/date-form-input.component';\r\nimport { FacetValueFormInputComponent } from './facet-value-form-input/facet-value-form-input.component';\r\nimport { NumberFormInputComponent } from './number-form-input/number-form-input.component';\r\nimport { PasswordFormInputComponent } from './password-form-input/password-form-input.component';\r\nimport { ProductSelectorFormInputComponent } from './product-selector-form-input/product-selector-form-input.component';\r\nimport { RelationFormInputComponent } from './relation-form-input/relation-form-input.component';\r\nimport { SelectFormInputComponent } from './select-form-input/select-form-input.component';\r\nimport { TextFormInputComponent } from './text-form-input/text-form-input.component';\r\nimport { TextareaFormInputComponent } from './textarea-form-input/textarea-form-input.component';\r\n\r\nexport const defaultFormInputs = [\r\n    BooleanFormInputComponent,\r\n    CurrencyFormInputComponent,\r\n    DateFormInputComponent,\r\n    FacetValueFormInputComponent,\r\n    NumberFormInputComponent,\r\n    SelectFormInputComponent,\r\n    TextFormInputComponent,\r\n    ProductSelectorFormInputComponent,\r\n    CustomerGroupFormInputComponent,\r\n    PasswordFormInputComponent,\r\n    RelationFormInputComponent,\r\n    TextareaFormInputComponent,\r\n];\r\n\r\n/**\r\n * @description\r\n * Registers a custom FormInputComponent which can be used to control the argument inputs\r\n * of a {@link ConfigurableOperationDef} (e.g. CollectionFilter, ShippingMethod etc)\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@NgModule({\r\n *   imports: [SharedModule],\r\n *   declarations: [MyCustomFieldControl],\r\n *   providers: [\r\n *       registerFormInputComponent('my-custom-input', MyCustomFieldControl),\r\n *   ],\r\n * })\r\n * export class MyUiExtensionModule {}\r\n * ```\r\n */\r\nexport function registerFormInputComponent(id: string, component: Type<FormInputComponent>): FactoryProvider {\r\n    return {\r\n        provide: APP_INITIALIZER,\r\n        multi: true,\r\n        useFactory: (registry: ComponentRegistryService) => () => {\r\n            registry.registerInputComponent(id, component);\r\n        },\r\n        deps: [ComponentRegistryService],\r\n    };\r\n}\r\n\r\n/**\r\n * @description\r\n * Registers a custom component to act as the form input control for the given custom field.\r\n * This should be used in the NgModule `providers` array of your ui extension module.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@NgModule({\r\n *   imports: [SharedModule],\r\n *   declarations: [MyCustomFieldControl],\r\n *   providers: [\r\n *       registerCustomFieldComponent('Product', 'someCustomField', MyCustomFieldControl),\r\n *   ],\r\n * })\r\n * export class MyUiExtensionModule {}\r\n * ```\r\n */\r\nexport function registerCustomFieldComponent(\r\n    entity: CustomFieldEntityName,\r\n    fieldName: string,\r\n    component: Type<CustomFieldControl>,\r\n): FactoryProvider {\r\n    return {\r\n        provide: APP_INITIALIZER,\r\n        multi: true,\r\n        useFactory: (customFieldComponentService: CustomFieldComponentService) => () => {\r\n            customFieldComponentService.registerCustomFieldComponent(entity, fieldName, component);\r\n        },\r\n        deps: [CustomFieldComponentService],\r\n    };\r\n}\r\n\r\n/**\r\n * Registers the default form input components.\r\n */\r\nexport function registerDefaultFormInputs(): FactoryProvider[] {\r\n    return defaultFormInputs.map(cmp => registerFormInputComponent(cmp.id, cmp));\r\n}\r\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DataService } from '../../../data/providers/data.service';\nimport { ActionBarItem } from '../../../providers/nav-builder/nav-builder-types';\nimport { NavBuilderService } from '../../../providers/nav-builder/nav-builder.service';\nimport { NotificationService } from '../../../providers/notification/notification.service';\n\n@Component({\n    selector: 'vdr-action-bar-items',\n    templateUrl: './action-bar-items.component.html',\n    styleUrls: ['./action-bar-items.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionBarItemsComponent implements OnInit, OnChanges {\n    @HostBinding('attr.data-location-id')\n    @Input()\n    locationId: string;\n\n    items$: Observable<ActionBarItem[]>;\n    private locationId$ = new BehaviorSubject<string>('');\n\n    constructor(\n        private navBuilderService: NavBuilderService,\n        private route: ActivatedRoute,\n        private dataService: DataService,\n        private notificationService: NotificationService,\n    ) {}\n\n    ngOnInit() {\n        this.items$ = combineLatest(this.navBuilderService.actionBarConfig$, this.locationId$).pipe(\n            map(([items, locationId]) => items.filter(config => config.locationId === locationId)),\n        );\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('locationId' in changes) {\n            this.locationId$.next(changes['locationId'].currentValue);\n        }\n    }\n\n    handleClick(event: MouseEvent, item: ActionBarItem) {\n        if (typeof item.onClick === 'function') {\n            item.onClick(event, {\n                route: this.route,\n                dataService: this.dataService,\n                notificationService: this.notificationService,\n            });\n        }\n    }\n\n    getRouterLink(item: ActionBarItem): any[] | null {\n        return this.navBuilderService.getRouterLink(item, this.route);\n    }\n\n    getButtonStyles(item: ActionBarItem): string[] {\n        const styles = ['btn'];\n        if (item.buttonStyle && item.buttonStyle === 'link') {\n            styles.push('btn-link');\n            return styles;\n        }\n        styles.push(this.getButtonColorClass(item));\n        return styles;\n    }\n\n    private getButtonColorClass(item: ActionBarItem): string {\n        switch (item.buttonColor) {\n            case undefined:\n            case 'primary':\n                return item.buttonStyle === 'outline' ? 'btn-outline' : 'btn-primary';\n            case 'success':\n                return item.buttonStyle === 'outline' ? 'btn-success-outline' : 'btn-success';\n            case 'warning':\n                return item.buttonStyle === 'outline' ? 'btn-warning-outline' : 'btn-warning';\n            default:\n                assertNever(item.buttonColor);\n                return '';\n        }\n    }\n}\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-ab-left',\r\n    template: `\r\n        <ng-content></ng-content>\r\n    `,\r\n})\r\nexport class ActionBarLeftComponent {\r\n    @Input() grow = false;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-ab-right',\r\n    template: `\r\n        <ng-content></ng-content>\r\n    `,\r\n})\r\nexport class ActionBarRightComponent {\r\n    @Input() grow = false;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-action-bar',\r\n    templateUrl: './action-bar.component.html',\r\n    styleUrls: ['./action-bar.component.scss'],\r\n})\r\nexport class ActionBarComponent {\r\n    @ContentChild(ActionBarLeftComponent) left: ActionBarLeftComponent;\r\n    @ContentChild(ActionBarRightComponent) right: ActionBarRightComponent;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { CustomFieldConfig, GetAvailableCountries } from '../../../common/generated-types';\n\n@Component({\n    selector: 'vdr-address-form',\n    templateUrl: './address-form.component.html',\n    styleUrls: ['./address-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent {\n    @Input() customFields: CustomFieldConfig;\n    @Input() formGroup: FormGroup;\n    @Input() availableCountries: GetAvailableCountries.Items[];\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n/**\r\n * A wrapper around an <input> element which adds a prefix and/or a suffix element.\r\n */\r\n@Component({\r\n    selector: 'vdr-affixed-input',\r\n    templateUrl: './affixed-input.component.html',\r\n    styleUrls: ['./affixed-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AffixedInputComponent {\r\n    @Input() prefix: string;\r\n    @Input() suffix: string;\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n/**\r\n * A form input control which displays a number input with a percentage sign suffix.\r\n */\r\n@Component({\r\n    selector: 'vdr-percentage-suffix-input',\r\n    styles: [\r\n        `\r\n            :host {\r\n                padding: 0;\r\n            }\r\n        `,\r\n    ],\r\n    template: `\r\n        <vdr-affixed-input suffix=\"%\">\r\n            <input\r\n                type=\"number\"\r\n                step=\"1\"\r\n                [value]=\"_value\"\r\n                [disabled]=\"disabled\"\r\n                [readonly]=\"readonly\"\r\n                (input)=\"onInput($event.target.value)\"\r\n                (focus)=\"onTouch()\"\r\n            />\r\n        </vdr-affixed-input>\r\n    `,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: PercentageSuffixInputComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class PercentageSuffixInputComponent implements ControlValueAccessor, OnChanges {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() value: number;\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    _value: number;\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if ('value' in changes) {\r\n            this.writeValue(changes['value'].currentValue);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    onInput(value: string | number) {\r\n        this.onChange(value);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        const numericValue = +value;\r\n        if (!Number.isNaN(numericValue)) {\r\n            this._value = numericValue;\r\n        }\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\n\r\nimport { ServerConfigService } from '../../../data/server-config';\r\n\r\n/**\r\n * A component for selecting files to upload as new Assets.\r\n */\r\n@Component({\r\n    selector: 'vdr-asset-file-input',\r\n    templateUrl: './asset-file-input.component.html',\r\n    styleUrls: ['./asset-file-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetFileInputComponent implements OnInit {\r\n    /**\r\n     * CSS selector of the DOM element which will be masked by the file\r\n     * drop zone. Defaults to `body`.\r\n     */\r\n    @Input() dropZoneTarget = 'body';\r\n    @Input() uploading = false;\r\n    @Output() selectFiles = new EventEmitter<File[]>();\r\n    dragging = false;\r\n    overDropZone = false;\r\n    dropZoneStyle = {\r\n        'width.px': 0,\r\n        'height.px': 0,\r\n        'top.px': 0,\r\n        'left.px': 0,\r\n    };\r\n    accept: string;\r\n\r\n    constructor(private serverConfig: ServerConfigService) {}\r\n\r\n    ngOnInit() {\r\n        this.accept = this.serverConfig.serverConfig.permittedAssetTypes.join(',');\r\n        this.fitDropZoneToTarget();\r\n    }\r\n\r\n    @HostListener('document:dragenter')\r\n    onDragEnter() {\r\n        this.dragging = true;\r\n        this.fitDropZoneToTarget();\r\n    }\r\n\r\n    // DragEvent is not supported in Safari, see https://github.com/vendure-ecommerce/vendure/pull/284\r\n    @HostListener('document:dragleave', ['$event'])\r\n    onDragLeave(event: any) {\r\n        if (!event.clientX && !event.clientY) {\r\n            this.dragging = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Preventing this event is required to make dropping work.\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API#Define_a_drop_zone\r\n     */\r\n    onDragOver(event: any) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    // DragEvent is not supported in Safari, see https://github.com/vendure-ecommerce/vendure/pull/284\r\n    onDrop(event: any) {\r\n        event.preventDefault();\r\n        this.dragging = false;\r\n        this.overDropZone = false;\r\n        const files = Array.from<DataTransferItem>(event.dataTransfer ? event.dataTransfer.items : [])\r\n            .map(i => i.getAsFile())\r\n            .filter(notNullOrUndefined);\r\n        this.selectFiles.emit(files);\r\n    }\r\n\r\n    select(event: Event) {\r\n        const files = (event.target as HTMLInputElement).files;\r\n        if (files) {\r\n            this.selectFiles.emit(Array.from(files));\r\n        }\r\n    }\r\n\r\n    private fitDropZoneToTarget() {\r\n        const target = document.querySelector(this.dropZoneTarget) as HTMLElement;\r\n        if (target) {\r\n            const rect = target.getBoundingClientRect();\r\n            this.dropZoneStyle['width.px'] = rect.width;\r\n            this.dropZoneStyle['height.px'] = rect.height;\r\n            this.dropZoneStyle['top.px'] = rect.top;\r\n            this.dropZoneStyle['left.px'] = rect.left;\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { AssetFragment, GetAsset, GetAssetList, UpdateAssetInput } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { Dialog } from '../../../providers/modal/modal.service';\r\n\r\ntype AssetLike = GetAssetList.Items | AssetFragment;\r\n\r\n@Component({\r\n    selector: 'vdr-asset-preview-dialog',\r\n    templateUrl: './asset-preview-dialog.component.html',\r\n    styleUrls: ['./asset-preview-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetPreviewDialogComponent implements Dialog<void>, OnInit {\r\n    constructor(private dataService: DataService) {}\r\n    asset: AssetLike;\r\n    assetChanges?: UpdateAssetInput;\r\n    resolveWith: (result?: void) => void;\r\n    assetWithTags$: Observable<GetAsset.Asset>;\r\n\r\n    ngOnInit() {\r\n        this.assetWithTags$ = of(this.asset).pipe(\r\n            mergeMap(asset => {\r\n                if (this.hasTags(asset)) {\r\n                    return of(asset);\r\n                } else {\r\n                    // tslint:disable-next-line:no-non-null-assertion\r\n                    return this.dataService.product.getAsset(asset.id).mapSingle(data => data.asset!);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    private hasTags(asset: AssetLike): asset is GetAssetList.Items {\r\n        return asset.hasOwnProperty('tags');\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\n\r\nimport { Asset, GetAssetList } from '../../../common/generated-types';\r\nimport { ModalService } from '../../../providers/modal/modal.service';\r\nimport { AssetPreviewDialogComponent } from '../asset-preview-dialog/asset-preview-dialog.component';\r\n\r\nexport type AssetLike = GetAssetList.Items;\r\n\r\n@Component({\r\n    selector: 'vdr-asset-gallery',\r\n    templateUrl: './asset-gallery.component.html',\r\n    styleUrls: ['./asset-gallery.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetGalleryComponent implements OnChanges {\r\n    @Input() assets: AssetLike[];\r\n    /**\r\n     * If true, allows multiple assets to be selected by ctrl+clicking.\r\n     */\r\n    @Input() multiSelect = false;\r\n    @Input() canDelete = false;\r\n    @Output() selectionChange = new EventEmitter<AssetLike[]>();\r\n    @Output() deleteAssets = new EventEmitter<AssetLike[]>();\r\n\r\n    selection: AssetLike[] = [];\r\n\r\n    constructor(private modalService: ModalService) {}\r\n\r\n    ngOnChanges() {\r\n        if (this.assets) {\r\n            for (const asset of this.selection) {\r\n                // Update and selected assets with any changes\r\n                const match = this.assets.find(a => a.id === asset.id);\r\n                if (match) {\r\n                    Object.assign(asset, match);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleSelection(event: MouseEvent, asset: Asset) {\r\n        const index = this.selection.findIndex(a => a.id === asset.id);\r\n        if (this.multiSelect && event.shiftKey && 1 <= this.selection.length) {\r\n            const lastSelection = this.selection[this.selection.length - 1];\r\n            const lastSelectionIndex = this.assets.findIndex(a => a.id === lastSelection.id);\r\n            const currentIndex = this.assets.findIndex(a => a.id === asset.id);\r\n            const start = currentIndex < lastSelectionIndex ? currentIndex : lastSelectionIndex;\r\n            const end = currentIndex > lastSelectionIndex ? currentIndex + 1 : lastSelectionIndex;\r\n            this.selection.push(\r\n                ...this.assets.slice(start, end).filter(a => !this.selection.find(s => s.id === a.id)),\r\n            );\r\n        } else if (index === -1) {\r\n            if (this.multiSelect && (event.ctrlKey || event.shiftKey)) {\r\n                this.selection.push(asset);\r\n            } else {\r\n                this.selection = [asset];\r\n            }\r\n        } else {\r\n            if (this.multiSelect && event.ctrlKey) {\r\n                this.selection.splice(index, 1);\r\n            } else if (1 < this.selection.length) {\r\n                this.selection = [asset];\r\n            } else {\r\n                this.selection.splice(index, 1);\r\n            }\r\n        }\r\n        // Make the selection mutable\r\n        this.selection = this.selection.map(x => ({ ...x }));\r\n        this.selectionChange.emit(this.selection);\r\n    }\r\n\r\n    isSelected(asset: AssetLike): boolean {\r\n        return !!this.selection.find(a => a.id === asset.id);\r\n    }\r\n\r\n    lastSelected(): AssetLike {\r\n        return this.selection[this.selection.length - 1];\r\n    }\r\n\r\n    previewAsset(asset: AssetLike) {\r\n        this.modalService\r\n            .fromComponent(AssetPreviewDialogComponent, {\r\n                size: 'xl',\r\n                closable: true,\r\n                locals: { asset },\r\n            })\r\n            .subscribe();\r\n    }\r\n\r\n    entityInfoClick(event: MouseEvent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n}\r\n","import { NgOption, SelectionModel } from '@ng-select/ng-select';\r\n\r\n/**\r\n * A custom SelectionModel for the NgSelect component which only allows a single\r\n * search term at a time.\r\n */\r\nexport class SingleSearchSelectionModel implements SelectionModel {\r\n    private _selected: NgOption[] = [];\r\n\r\n    get value(): NgOption[] {\r\n        return this._selected;\r\n    }\r\n\r\n    select(item: NgOption, multiple: boolean, groupAsModel: boolean) {\r\n        item.selected = true;\r\n        if (groupAsModel || !item.children) {\r\n            if ((item.value as any).label) {\r\n                const isSearchTerm = (i: any) => !!i.value.label;\r\n                const searchTerms = this._selected.filter(isSearchTerm);\r\n                if (searchTerms.length > 0) {\r\n                    // there is already a search term, so replace it with this new one.\r\n                    this._selected = this._selected.filter(i => !isSearchTerm(i)).concat(item);\r\n                } else {\r\n                    this._selected.push(item);\r\n                }\r\n            } else {\r\n                this._selected.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    unselect(item: NgOption, multiple: boolean) {\r\n        this._selected = this._selected.filter(x => x !== item);\r\n        item.selected = false;\r\n    }\r\n\r\n    clear(keepDisabled: boolean) {\r\n        this._selected = keepDisabled ? this._selected.filter(x => x.disabled) : [];\r\n    }\r\n\r\n    private _setChildrenSelectedState(children: NgOption[], selected: boolean) {\r\n        children.forEach(x => (x.selected = selected));\r\n    }\r\n\r\n    private _removeChildren(parent: NgOption) {\r\n        this._selected = this._selected.filter(x => x.parent !== parent);\r\n    }\r\n\r\n    private _removeParent(parent: NgOption) {\r\n        this._selected = this._selected.filter(x => x !== parent);\r\n    }\r\n}\r\n\r\nexport function SingleSearchSelectionModelFactory() {\r\n    return new SingleSearchSelectionModel();\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { NgSelectComponent, SELECTION_MODEL_FACTORY } from '@ng-select/ng-select';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\n\r\nimport { SearchProducts, TagFragment } from '../../../common/generated-types';\r\nimport { SingleSearchSelectionModelFactory } from '../../../common/single-search-selection-model';\r\n\r\n@Component({\r\n    selector: 'vdr-asset-search-input',\r\n    templateUrl: './asset-search-input.component.html',\r\n    styleUrls: ['./asset-search-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{ provide: SELECTION_MODEL_FACTORY, useValue: SingleSearchSelectionModelFactory }],\r\n})\r\nexport class AssetSearchInputComponent {\r\n    @Input() tags: TagFragment[];\r\n    @Output() searchTermChange = new EventEmitter<string>();\r\n    @Output() tagsChange = new EventEmitter<TagFragment[]>();\r\n    @ViewChild('selectComponent', { static: true }) private selectComponent: NgSelectComponent;\r\n    private lastTerm = '';\r\n    private lastTagIds: string[] = [];\r\n\r\n    setSearchTerm(term: string | null) {\r\n        if (term) {\r\n            this.selectComponent.select({ label: term, value: { label: term } });\r\n        } else {\r\n            const currentTerm = this.selectComponent.selectedItems.find(i => !this.isTag(i.value));\r\n            if (currentTerm) {\r\n                this.selectComponent.unselect(currentTerm);\r\n            }\r\n        }\r\n    }\r\n\r\n    setTags(tags: TagFragment[]) {\r\n        const items = this.selectComponent.items;\r\n\r\n        this.selectComponent.selectedItems.forEach(item => {\r\n            if (this.isTag(item.value) && !tags.map(t => t.id).includes(item.id)) {\r\n                this.selectComponent.unselect(item);\r\n            }\r\n        });\r\n\r\n        tags.map(tag => {\r\n            return items.find(item => this.isTag(item) && item.id === tag.id);\r\n        })\r\n            .filter(notNullOrUndefined)\r\n            .forEach(item => {\r\n                const isSelected = this.selectComponent.selectedItems.find(i => {\r\n                    const val = i.value;\r\n                    if (this.isTag(val)) {\r\n                        return val.id === item.id;\r\n                    }\r\n                    return false;\r\n                });\r\n                if (!isSelected) {\r\n                    this.selectComponent.select({ label: '', value: item });\r\n                }\r\n            });\r\n    }\r\n\r\n    filterTagResults = (term: string, item: SearchProducts.FacetValues | { label: string }) => {\r\n        if (!this.isTag(item)) {\r\n            return false;\r\n        }\r\n        return item.value.toLowerCase().startsWith(term.toLowerCase());\r\n    };\r\n\r\n    onSelectChange(selectedItems: Array<TagFragment | { label: string }>) {\r\n        if (!Array.isArray(selectedItems)) {\r\n            selectedItems = [selectedItems];\r\n        }\r\n\r\n        const searchTermItems = selectedItems.filter(item => !this.isTag(item));\r\n        if (1 < searchTermItems.length) {\r\n            for (let i = 0; i < searchTermItems.length - 1; i++) {\r\n                // this.selectComponent.unselect(searchTermItems[i] as any);\r\n            }\r\n        }\r\n\r\n        const searchTermItem = searchTermItems[searchTermItems.length - 1] as\r\n            | { label: string }\r\n            | undefined;\r\n\r\n        const searchTerm = searchTermItem ? searchTermItem.label : '';\r\n\r\n        const tags = selectedItems.filter(this.isTag);\r\n\r\n        if (searchTerm !== this.lastTerm) {\r\n            this.searchTermChange.emit(searchTerm);\r\n            this.lastTerm = searchTerm;\r\n        }\r\n        if (this.lastTagIds.join(',') !== tags.map(t => t.id).join(',')) {\r\n            this.tagsChange.emit(tags);\r\n            this.lastTagIds = tags.map(t => t.id);\r\n        }\r\n    }\r\n\r\n    isSearchHeaderSelected(): boolean {\r\n        return this.selectComponent.itemsList.markedIndex === -1;\r\n    }\r\n\r\n    addTagFn(item: any) {\r\n        return { label: item };\r\n    }\r\n\r\n    private isTag = (input: unknown): input is TagFragment => {\r\n        return typeof input === 'object' && !!input && input.hasOwnProperty('value');\r\n    };\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, delay, finalize, map, take as rxjsTake, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport {\r\n    Asset,\r\n    GetAssetList,\r\n    LogicalOperator,\r\n    SortOrder,\r\n    TagFragment,\r\n} from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { QueryResult } from '../../../data/query-result';\r\nimport { Dialog } from '../../../providers/modal/modal.service';\r\nimport { NotificationService } from '../../../providers/notification/notification.service';\r\nimport { AssetSearchInputComponent } from '../asset-search-input/asset-search-input.component';\r\n\r\n/**\r\n * A dialog which allows the creation and selection of assets.\r\n */\r\n@Component({\r\n    selector: 'vdr-asset-picker-dialog',\r\n    templateUrl: './asset-picker-dialog.component.html',\r\n    styleUrls: ['./asset-picker-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetPickerDialogComponent implements OnInit, AfterViewInit, OnDestroy, Dialog<Asset[]> {\r\n    assets$: Observable<GetAssetList.Items[]>;\r\n    allTags$: Observable<TagFragment[]>;\r\n    paginationConfig: PaginationInstance = {\r\n        currentPage: 1,\r\n        itemsPerPage: 25,\r\n        totalItems: 1,\r\n    };\r\n    @ViewChild('assetSearchInputComponent')\r\n    private assetSearchInputComponent: AssetSearchInputComponent;\r\n\r\n    multiSelect = true;\r\n    initialTags: string[] = [];\r\n\r\n    resolveWith: (result?: Asset[]) => void;\r\n    selection: Asset[] = [];\r\n    searchTerm$ = new BehaviorSubject<string | undefined>(undefined);\r\n    filterByTags$ = new BehaviorSubject<TagFragment[] | undefined>(undefined);\r\n    uploading = false;\r\n    private listQuery: QueryResult<GetAssetList.Query, GetAssetList.Variables>;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(private dataService: DataService, private notificationService: NotificationService) {}\r\n\r\n    ngOnInit() {\r\n        this.listQuery = this.dataService.product.getAssetList(this.paginationConfig.itemsPerPage, 0);\r\n        this.allTags$ = this.dataService.product.getTagList().mapSingle(data => data.tags.items);\r\n        this.assets$ = this.listQuery.stream$.pipe(\r\n            tap(result => (this.paginationConfig.totalItems = result.assets.totalItems)),\r\n            map(result => result.assets.items),\r\n        );\r\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => {\r\n            this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n        });\r\n        this.filterByTags$.pipe(debounceTime(100), takeUntil(this.destroy$)).subscribe(() => {\r\n            this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (0 < this.initialTags.length) {\r\n            this.allTags$\r\n                .pipe(\r\n                    rxjsTake(1),\r\n                    map(allTags => allTags.filter(tag => this.initialTags.includes(tag.value))),\r\n                    tap(tags => this.filterByTags$.next(tags)),\r\n                    delay(1),\r\n                )\r\n                .subscribe(tags => this.assetSearchInputComponent.setTags(tags));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    pageChange(page: number) {\r\n        this.paginationConfig.currentPage = page;\r\n        this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n    }\r\n\r\n    itemsPerPageChange(itemsPerPage: number) {\r\n        this.paginationConfig.itemsPerPage = itemsPerPage;\r\n        this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    select() {\r\n        this.resolveWith(this.selection);\r\n    }\r\n\r\n    createAssets(files: File[]) {\r\n        if (files.length) {\r\n            this.uploading = true;\r\n            this.dataService.product\r\n                .createAssets(files)\r\n                .pipe(finalize(() => (this.uploading = false)))\r\n                .subscribe(res => {\r\n                    this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n                    this.notificationService.success(_('asset.notify-create-assets-success'), {\r\n                        count: files.length,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    private fetchPage(currentPage: number, itemsPerPage: number) {\r\n        const take = +itemsPerPage;\r\n        const skip = (currentPage - 1) * +itemsPerPage;\r\n        const searchTerm = this.searchTerm$.value;\r\n        const tags = this.filterByTags$.value?.map(t => t.value);\r\n        this.listQuery.ref.refetch({\r\n            options: {\r\n                skip,\r\n                take,\r\n                filter: {\r\n                    name: {\r\n                        contains: searchTerm,\r\n                    },\r\n                },\r\n                sort: {\r\n                    createdAt: SortOrder.DESC,\r\n                },\r\n                tags,\r\n                tagsOperator: LogicalOperator.AND,\r\n            },\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\nimport { GetTagList } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { Dialog } from '../../../providers/modal/modal.service';\r\n\r\n@Component({\r\n    selector: 'vdr-manage-tags-dialog',\r\n    templateUrl: './manage-tags-dialog.component.html',\r\n    styleUrls: ['./manage-tags-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ManageTagsDialogComponent implements Dialog<boolean>, OnInit {\r\n    resolveWith: (result: boolean | undefined) => void;\r\n    allTags$: Observable<GetTagList.Items[]>;\r\n    toDelete: string[] = [];\r\n    toUpdate: Array<{ id: string; value: string }> = [];\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\r\n    }\r\n\r\n    toggleDelete(id: string) {\r\n        const marked = this.markedAsDeleted(id);\r\n        if (marked) {\r\n            this.toDelete = this.toDelete.filter(_id => _id !== id);\r\n        } else {\r\n            this.toDelete.push(id);\r\n        }\r\n    }\r\n\r\n    markedAsDeleted(id: string): boolean {\r\n        return this.toDelete.includes(id);\r\n    }\r\n\r\n    updateTagValue(id: string, value: string) {\r\n        const exists = this.toUpdate.find(i => i.id === id);\r\n        if (exists) {\r\n            exists.value = value;\r\n        } else {\r\n            this.toUpdate.push({ id, value });\r\n        }\r\n    }\r\n\r\n    saveChanges() {\r\n        const operations: Array<Observable<any>> = [];\r\n        for (const id of this.toDelete) {\r\n            operations.push(this.dataService.product.deleteTag(id));\r\n        }\r\n        for (const item of this.toUpdate) {\r\n            if (!this.toDelete.includes(item.id)) {\r\n                operations.push(this.dataService.product.updateTag(item));\r\n            }\r\n        }\r\n        return forkJoin(operations).subscribe(() => this.resolveWith(true));\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { CustomFieldConfig, GetAsset, GetAssetList, UpdateAssetInput } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { ModalService } from '../../../providers/modal/modal.service';\r\nimport { NotificationService } from '../../../providers/notification/notification.service';\r\nimport { Point } from '../focal-point-control/focal-point-control.component';\r\nimport { ManageTagsDialogComponent } from '../manage-tags-dialog/manage-tags-dialog.component';\r\n\r\nexport type PreviewPreset = 'tiny' | 'thumb' | 'small' | 'medium' | 'large' | '';\r\ntype AssetLike = GetAssetList.Items | GetAsset.Asset;\r\n\r\n@Component({\r\n    selector: 'vdr-asset-preview',\r\n    templateUrl: './asset-preview.component.html',\r\n    styleUrls: ['./asset-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetPreviewComponent implements OnInit, OnDestroy {\r\n    @Input() asset: AssetLike;\r\n    @Input() editable = false;\r\n    @Input() customFields: CustomFieldConfig[] = [];\r\n    @Input() customFieldsForm: FormGroup | undefined;\r\n    @Output() assetChange = new EventEmitter<Omit<UpdateAssetInput, 'focalPoint'>>();\r\n    @Output() editClick = new EventEmitter();\r\n\r\n    form: FormGroup;\r\n\r\n    size: PreviewPreset = 'medium';\r\n    width = 0;\r\n    height = 0;\r\n    centered = true;\r\n    settingFocalPoint = false;\r\n    lastFocalPoint?: Point;\r\n    @ViewChild('imageElement', { static: true }) private imageElementRef: ElementRef<HTMLImageElement>;\r\n    @ViewChild('previewDiv', { static: true }) private previewDivRef: ElementRef<HTMLDivElement>;\r\n    private subscription: Subscription;\r\n    private sizePriorToSettingFocalPoint: PreviewPreset;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private dataService: DataService,\r\n        private notificationService: NotificationService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        private modalService: ModalService,\r\n    ) {}\r\n\r\n    get fpx(): number | null {\r\n        return this.asset.focalPoint ? this.asset.focalPoint.x : null;\r\n    }\r\n\r\n    get fpy(): number | null {\r\n        return this.asset.focalPoint ? this.asset.focalPoint.y : null;\r\n    }\r\n\r\n    ngOnInit() {\r\n        const { focalPoint } = this.asset;\r\n        this.form = this.formBuilder.group({\r\n            name: [this.asset.name],\r\n            tags: [this.asset.tags?.map(t => t.value)],\r\n        });\r\n        this.subscription = this.form.valueChanges.subscribe(value => {\r\n            this.assetChange.emit({\r\n                id: this.asset.id,\r\n                name: value.name,\r\n                tags: value.tags,\r\n            });\r\n        });\r\n\r\n        this.subscription.add(\r\n            fromEvent(window, 'resize')\r\n                .pipe(debounceTime(50))\r\n                .subscribe(() => {\r\n                    this.updateDimensions();\r\n                    this.changeDetector.markForCheck();\r\n                }),\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    customFieldIsSet(name: string): boolean {\r\n        return !!this.customFieldsForm?.get([name]);\r\n    }\r\n\r\n    getSourceFileName(): string {\r\n        const parts = this.asset.source.split('/');\r\n        return parts[parts.length - 1];\r\n    }\r\n\r\n    onImageLoad() {\r\n        this.updateDimensions();\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    updateDimensions() {\r\n        const img = this.imageElementRef.nativeElement;\r\n        const container = this.previewDivRef.nativeElement;\r\n        const imgWidth = img.naturalWidth;\r\n        const imgHeight = img.naturalHeight;\r\n        const containerWidth = container.offsetWidth;\r\n        const containerHeight = container.offsetHeight;\r\n\r\n        const constrainToContainer = this.settingFocalPoint;\r\n        if (constrainToContainer) {\r\n            const controlsMarginPx = 48 * 2;\r\n            const availableHeight = containerHeight - controlsMarginPx;\r\n            const availableWidth = containerWidth;\r\n            const hRatio = imgHeight / availableHeight;\r\n            const wRatio = imgWidth / availableWidth;\r\n\r\n            const imageExceedsAvailableDimensions = 1 < hRatio || 1 < wRatio;\r\n            if (imageExceedsAvailableDimensions) {\r\n                const factor = hRatio < wRatio ? wRatio : hRatio;\r\n                this.width = Math.round(imgWidth / factor);\r\n                this.height = Math.round(imgHeight / factor);\r\n                this.centered = true;\r\n                return;\r\n            }\r\n        }\r\n        this.width = imgWidth;\r\n        this.height = imgHeight;\r\n        this.centered = imgWidth <= containerWidth && imgHeight <= containerHeight;\r\n    }\r\n\r\n    setFocalPointStart() {\r\n        this.sizePriorToSettingFocalPoint = this.size;\r\n        this.size = 'medium';\r\n        this.settingFocalPoint = true;\r\n        this.lastFocalPoint = this.asset.focalPoint || { x: 0.5, y: 0.5 };\r\n        this.updateDimensions();\r\n    }\r\n\r\n    removeFocalPoint() {\r\n        this.dataService.product\r\n            .updateAsset({\r\n                id: this.asset.id,\r\n                focalPoint: null,\r\n            })\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('asset.update-focal-point-success'));\r\n                    this.asset = { ...this.asset, focalPoint: null };\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                () => this.notificationService.error(_('asset.update-focal-point-error')),\r\n            );\r\n    }\r\n\r\n    onFocalPointChange(point: Point) {\r\n        this.lastFocalPoint = point;\r\n    }\r\n\r\n    setFocalPointCancel() {\r\n        this.settingFocalPoint = false;\r\n        this.lastFocalPoint = undefined;\r\n        this.size = this.sizePriorToSettingFocalPoint;\r\n    }\r\n\r\n    setFocalPointEnd() {\r\n        this.settingFocalPoint = false;\r\n        this.size = this.sizePriorToSettingFocalPoint;\r\n        if (this.lastFocalPoint) {\r\n            const { x, y } = this.lastFocalPoint;\r\n            this.lastFocalPoint = undefined;\r\n            this.dataService.product\r\n                .updateAsset({\r\n                    id: this.asset.id,\r\n                    focalPoint: { x, y },\r\n                })\r\n                .subscribe(\r\n                    () => {\r\n                        this.notificationService.success(_('asset.update-focal-point-success'));\r\n                        this.asset = { ...this.asset, focalPoint: { x, y } };\r\n                        this.changeDetector.markForCheck();\r\n                    },\r\n                    () => this.notificationService.error(_('asset.update-focal-point-error')),\r\n                );\r\n        }\r\n    }\r\n\r\n    manageTags() {\r\n        this.modalService\r\n            .fromComponent(ManageTagsDialogComponent, {\r\n                size: 'sm',\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.notificationService.success(_('common.notify-updated-tags-success'));\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { Channel, CurrentUserChannel } from '../../../common/generated-types';\nimport { DataService } from '../../../data/providers/data.service';\n\n@Component({\n    selector: 'vdr-channel-assignment-control',\n    templateUrl: './channel-assignment-control.component.html',\n    styleUrls: ['./channel-assignment-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.Default,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: ChannelAssignmentControlComponent,\n            multi: true,\n        },\n    ],\n})\nexport class ChannelAssignmentControlComponent implements OnInit, ControlValueAccessor {\n    @Input() multiple = true;\n    @Input() includeDefaultChannel = true;\n    @Input() disableChannelIds: string[] = [];\n\n    channels$: Observable<CurrentUserChannel[]>;\n    value: CurrentUserChannel[] = [];\n    disabled = false;\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private channels: CurrentUserChannel[];\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit() {\n        this.channels$ = this.dataService.client.userStatus().single$.pipe(\n            map(({ userStatus }) =>\n                userStatus.channels.filter(c =>\n                    this.includeDefaultChannel ? true : c.code !== DEFAULT_CHANNEL_CODE,\n                ),\n            ),\n            tap(channels => (this.channels = channels)),\n        );\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(obj: unknown): void {\n        if (Array.isArray(obj)) {\n            if (typeof obj[0] === 'string') {\n                this.value = obj.map(id => this.channels?.find(c => c.id === id)).filter(notNullOrUndefined);\n            } else {\n                this.value = obj;\n            }\n        } else {\n            if (typeof obj === 'string') {\n                const channel = this.channels?.find(c => c.id === obj);\n                if (channel) {\n                    this.value = [channel];\n                }\n            } else if (obj && (obj as any).id) {\n                this.value = [obj as any];\n            }\n        }\n    }\n\n    focussed() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    channelIsDisabled(id: string) {\n        return this.disableChannelIds.includes(id);\n    }\n\n    valueChanged(value: CurrentUserChannel[] | CurrentUserChannel | undefined) {\n        if (Array.isArray(value)) {\n            this.onChange(value.map(c => c.id));\n        } else {\n            this.onChange([value ? value.id : undefined]);\n        }\n    }\n\n    compareFn(c1: Channel | string, c2: Channel | string): boolean {\n        const c1id = typeof c1 === 'string' ? c1 : c1.id;\n        const c2id = typeof c2 === 'string' ? c2 : c2.id;\n        return c1id === c2id;\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\n\r\n@Component({\r\n    selector: 'vdr-channel-badge',\r\n    templateUrl: './channel-badge.component.html',\r\n    styleUrls: ['./channel-badge.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChannelBadgeComponent {\r\n    @Input() channelCode: string;\r\n    get isDefaultChannel(): boolean {\r\n        return this.channelCode === DEFAULT_CHANNEL_CODE;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n/**\r\n * A chip component for displaying a label with an optional action icon.\r\n */\r\n@Component({\r\n    selector: 'vdr-chip',\r\n    templateUrl: './chip.component.html',\r\n    styleUrls: ['./chip.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChipComponent {\r\n    @Input() icon: string;\r\n    @Input() invert = false;\r\n    /**\r\n     * If set, the chip will have an auto-generated background\r\n     * color based on the string value passed in.\r\n     */\r\n    @Input() colorFrom = '';\r\n    @Input() colorType: 'error' | 'success' | 'warning';\r\n    @Output() iconClick = new EventEmitter<MouseEvent>();\r\n}\r\n","import { ConfigArgType, CustomFieldType } from '@vendure/common/lib/shared-types';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\n\nimport {\n    ConfigArgDefinition,\n    ConfigurableOperation,\n    ConfigurableOperationDefinition,\n    ConfigurableOperationInput,\n} from '../generated-types';\n\n/**\n * ConfigArg values are always stored as strings. If they are not primitives, then\n * they are JSON-encoded. This function unwraps them back into their original\n * data type.\n */\nexport function getConfigArgValue(value: any) {\n    try {\n        return value ? JSON.parse(value) : undefined;\n    } catch (e) {\n        return value;\n    }\n}\n\nexport function encodeConfigArgValue(value: any): string {\n    return Array.isArray(value) ? JSON.stringify(value) : (value ?? '').toString();\n}\n\n/**\n * Creates an empty ConfigurableOperation object based on the definition.\n */\nexport function configurableDefinitionToInstance(\n    def: ConfigurableOperationDefinition,\n): ConfigurableOperation {\n    return {\n        ...def,\n        args: def.args.map(arg => {\n            return {\n                ...arg,\n                value: getDefaultConfigArgValue(arg),\n            };\n        }),\n    } as ConfigurableOperation;\n}\n\n/**\n * Converts an object of the type:\n * ```\n * {\n *     code: 'my-operation',\n *     args: {\n *         someProperty: 'foo'\n *     }\n * }\n * ```\n * to the format defined by the ConfigurableOperationInput GraphQL input type:\n * ```\n * {\n *     code: 'my-operation',\n *     args: [\n *         { name: 'someProperty', value: 'foo' }\n *     ]\n * }\n * ```\n */\nexport function toConfigurableOperationInput(\n    operation: ConfigurableOperation,\n    formValueOperations: any,\n): ConfigurableOperationInput {\n    return {\n        code: operation.code,\n        arguments: Object.values<any>(formValueOperations.args || {}).map((value, j) => ({\n            name: operation.args[j].name,\n            value: value.hasOwnProperty('value')\n                ? encodeConfigArgValue((value as any).value)\n                : encodeConfigArgValue(value),\n        })),\n    };\n}\n\nexport function configurableOperationValueIsValid(\n    def?: ConfigurableOperationDefinition,\n    value?: { code: string; args: { [key: string]: string } },\n) {\n    if (!def || !value) {\n        return false;\n    }\n    if (def.code !== value.code) {\n        return false;\n    }\n    for (const argDef of def.args) {\n        const argVal = value.args[argDef.name];\n        if (argDef.required && (argVal == null || argVal === '' || argVal === '0')) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Returns a default value based on the type of the config arg.\n */\nexport function getDefaultConfigArgValue(arg: ConfigArgDefinition): any {\n    return arg.list ? [] : arg.defaultValue ?? null;\n}\n","import { ConfigurableOperationDefinition } from '../generated-types';\r\n\r\n/**\r\n * Interpolates the description of an ConfigurableOperation with the given values.\r\n */\r\nexport function interpolateDescription(\r\n    operation: ConfigurableOperationDefinition,\r\n    values: { [name: string]: any },\r\n): string {\r\n    if (!operation) {\r\n        return '';\r\n    }\r\n    const templateString = operation.description;\r\n    const interpolated = templateString.replace(/{\\s*([a-zA-Z0-9]+)\\s*}/gi, (substring, argName: string) => {\r\n        const normalizedArgName = argName.toLowerCase();\r\n        const value = values[normalizedArgName];\r\n        if (value == null) {\r\n            return '_';\r\n        }\r\n        let formatted = value;\r\n        const argDef = operation.args.find(arg => arg.name === normalizedArgName);\r\n        if (argDef && argDef.type === 'int' && argDef.ui && argDef.ui.component === 'currency-form-input') {\r\n            formatted = value / 100;\r\n        }\r\n        if (argDef && argDef.type === 'datetime' && value instanceof Date) {\r\n            formatted = value.toLocaleDateString();\r\n        }\r\n        return formatted;\r\n    });\r\n    return interpolated;\r\n}\r\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    Validators,\n} from '@angular/forms';\nimport { ConfigArgType } from '@vendure/common/lib/shared-types';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\nimport { Subscription } from 'rxjs';\n\nimport { InputComponentConfig } from '../../../common/component-registry-types';\nimport {\n    ConfigArg,\n    ConfigArgDefinition,\n    ConfigurableOperation,\n    ConfigurableOperationDefinition,\n} from '../../../common/generated-types';\nimport { getDefaultConfigArgValue } from '../../../common/utilities/configurable-operation-utils';\nimport { interpolateDescription } from '../../../common/utilities/interpolate-description';\n\n/**\n * A form input which renders a card with the internal form fields of the given ConfigurableOperation.\n */\n@Component({\n    selector: 'vdr-configurable-input',\n    templateUrl: './configurable-input.component.html',\n    styleUrls: ['./configurable-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: ConfigurableInputComponent,\n            multi: true,\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => ConfigurableInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ConfigurableInputComponent implements OnChanges, OnDestroy, ControlValueAccessor, Validator {\n    @Input() operation?: ConfigurableOperation;\n    @Input() operationDefinition?: ConfigurableOperationDefinition;\n    @Input() readonly = false;\n    @Input() removable = true;\n    @Output() remove = new EventEmitter<ConfigurableOperation>();\n    argValues: { [name: string]: any } = {};\n    onChange: (val: any) => void;\n    onTouch: () => void;\n    form = new FormGroup({});\n    private subscription: Subscription;\n\n    interpolateDescription(): string {\n        if (this.operationDefinition) {\n            return interpolateDescription(this.operationDefinition, this.form.value);\n        } else {\n            return '';\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('operation' in changes || 'operationDefinition' in changes) {\n            this.createForm();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouch = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        if (isDisabled) {\n            this.form.disable();\n        } else {\n            this.form.enable();\n        }\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            this.form.patchValue(value);\n        }\n    }\n\n    trackByName(index: number, arg: ConfigArg): string {\n        return arg.name;\n    }\n\n    getArgDef(arg: ConfigArg): ConfigArgDefinition | undefined {\n        return this.operationDefinition?.args.find(a => a.name === arg.name);\n    }\n\n    private createForm() {\n        if (!this.operation) {\n            return;\n        }\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        this.form = new FormGroup({});\n        (this.form as any).__id = Math.random().toString(36).substr(10);\n\n        if (this.operation.args) {\n            for (const arg of this.operationDefinition?.args || []) {\n                let value: any = this.operation.args.find(a => a.name === arg.name)?.value;\n                if (value === undefined) {\n                    value = getDefaultConfigArgValue(arg);\n                }\n                const validators = arg.list ? undefined : arg.required ? Validators.required : undefined;\n                this.form.addControl(arg.name, new FormControl(value, validators));\n            }\n        }\n\n        this.subscription = this.form.valueChanges.subscribe(value => {\n            if (this.onChange) {\n                this.onChange({\n                    code: this.operation && this.operation.code,\n                    args: value,\n                });\n            }\n            if (this.onTouch) {\n                this.onTouch();\n            }\n        });\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null {\n        if (this.form.invalid) {\n            return {\n                required: true,\n            };\n        }\n        return null;\n    }\n}\n","import {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n/**\r\n * A form input control which displays currency in decimal format, whilst working\r\n * with the integer cent value in the background.\r\n */\r\n@Component({\r\n    selector: 'vdr-currency-input',\r\n    templateUrl: './currency-input.component.html',\r\n    styleUrls: ['./currency-input.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: CurrencyInputComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class CurrencyInputComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() value: number;\r\n    @Input() currencyCode = '';\r\n    @Output() valueChange = new EventEmitter();\r\n    prefix$: Observable<string>;\r\n    suffix$: Observable<string>;\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    _decimalValue: string;\r\n    private currencyCode$ = new BehaviorSubject<string>('');\r\n\r\n    constructor(private dataService: DataService, private changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n    ngOnInit() {\r\n        const languageCode$ = this.dataService.client.uiState().mapStream(data => data.uiState.language);\r\n        const shouldPrefix$ = combineLatest(languageCode$, this.currencyCode$).pipe(\r\n            map(([languageCode, currencyCode]) => {\r\n                if (!currencyCode) {\r\n                    return '';\r\n                }\r\n                const locale = languageCode.replace(/_/g, '-');\r\n                const parts = (new Intl.NumberFormat(locale, {\r\n                    style: 'currency',\r\n                    currency: currencyCode,\r\n                    currencyDisplay: 'symbol',\r\n                }) as any).formatToParts();\r\n                const NaNString = parts.find(p => p.type === 'nan')?.value ?? 'NaN';\r\n                const localised = new Intl.NumberFormat(locale, {\r\n                    style: 'currency',\r\n                    currency: currencyCode,\r\n                    currencyDisplay: 'symbol',\r\n                }).format(undefined as any);\r\n                return localised.indexOf(NaNString) > 0;\r\n            }),\r\n        );\r\n        this.prefix$ = shouldPrefix$.pipe(map(shouldPrefix => (shouldPrefix ? this.currencyCode : '')));\r\n        this.suffix$ = shouldPrefix$.pipe(map(shouldPrefix => (shouldPrefix ? '' : this.currencyCode)));\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if ('value' in changes) {\r\n            this.writeValue(changes['value'].currentValue);\r\n        }\r\n        if ('currencyCode' in changes) {\r\n            this.currencyCode$.next(this.currencyCode);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    onInput(value: string) {\r\n        const integerValue = Math.round(+value * 100);\r\n        if (typeof this.onChange === 'function') {\r\n            this.onChange(integerValue);\r\n        }\r\n        this.valueChange.emit(integerValue);\r\n        const delta = Math.abs(Number(this._decimalValue) - Number(value));\r\n        if (0.009 < delta && delta < 0.011) {\r\n            this._decimalValue = this.toNumericString(value);\r\n        } else {\r\n            this._decimalValue = value;\r\n        }\r\n    }\r\n\r\n    onFocus() {\r\n        if (typeof this.onTouch === 'function') {\r\n            this.onTouch();\r\n        }\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        const numericValue = +value;\r\n        if (!Number.isNaN(numericValue)) {\r\n            this._decimalValue = this.toNumericString(Math.floor(value) / 100);\r\n        }\r\n    }\r\n\r\n    private toNumericString(value: number | string): string {\r\n        return Number(value).toFixed(2);\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    ComponentFactory,\r\n    Input,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { InputComponentConfig } from '../../../common/component-registry-types';\r\nimport { CustomFieldConfig, CustomFieldsFragment } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport {\r\n    CustomFieldComponentService,\r\n    CustomFieldControl,\r\n    CustomFieldEntityName,\r\n} from '../../../providers/custom-field-component/custom-field-component.service';\r\n\r\n/**\r\n * This component renders the appropriate type of form input control based\r\n * on the \"type\" property of the provided CustomFieldConfig.\r\n */\r\n@Component({\r\n    selector: 'vdr-custom-field-control',\r\n    templateUrl: './custom-field-control.component.html',\r\n    styleUrls: ['./custom-field-control.component.scss'],\r\n})\r\nexport class CustomFieldControlComponent {\r\n    @Input() entityName: CustomFieldEntityName;\r\n    @Input('customFieldsFormGroup') formGroup: FormGroup;\r\n    @Input() customField: CustomFieldsFragment;\r\n    @Input() compact = false;\r\n    @Input() showLabel = true;\r\n    @Input() readonly = false;\r\n    hasCustomControl = false;\r\n    @ViewChild('customComponentPlaceholder', { read: ViewContainerRef })\r\n    private customComponentPlaceholder: ViewContainerRef;\r\n    private customComponentFactory: ComponentFactory<CustomFieldControl> | undefined;\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private customFieldComponentService: CustomFieldComponentService,\r\n    ) {}\r\n\r\n    getFieldDefinition(): CustomFieldConfig & { ui?: InputComponentConfig } {\r\n        const config: CustomFieldsFragment & { ui?: InputComponentConfig } = {\r\n            ...this.customField,\r\n        };\r\n        const id = this.customFieldComponentService.customFieldComponentExists(\r\n            this.entityName,\r\n            this.customField.name,\r\n        );\r\n        if (id) {\r\n            config.ui = { component: id };\r\n        }\r\n        switch (config.__typename) {\r\n            case 'IntCustomFieldConfig':\r\n                return {\r\n                    ...config,\r\n                    min: config.intMin,\r\n                    max: config.intMax,\r\n                    step: config.intStep,\r\n                };\r\n            case 'FloatCustomFieldConfig':\r\n                return {\r\n                    ...config,\r\n                    min: config.floatMin,\r\n                    max: config.floatMax,\r\n                    step: config.floatStep,\r\n                };\r\n            case 'DateTimeCustomFieldConfig':\r\n                return {\r\n                    ...config,\r\n                    min: config.datetimeMin,\r\n                    max: config.datetimeMax,\r\n                    step: config.datetimeStep,\r\n                };\r\n            default:\r\n                return {\r\n                    ...config,\r\n                };\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { Customer } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-customer-label',\r\n    templateUrl: './customer-label.component.html',\r\n    styleUrls: ['./customer-label.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CustomerLabelComponent {\r\n    @Input() customer: Customer.Fragment;\r\n}\r\n","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-dt-column',\r\n    template: `\r\n        <ng-template><ng-content></ng-content></ng-template>\r\n    `,\r\n})\r\nexport class DataTableColumnComponent {\r\n    /**\r\n     * When set to true, this column will expand to use avaiable width\r\n     */\r\n    @Input() expand = false;\r\n    @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\r\n}\r\n","import {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    ContentChildren,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    QueryList,\r\n    TemplateRef,\r\n} from '@angular/core';\r\nimport { PaginationService } from 'ngx-pagination';\r\n\r\nimport { DataTableColumnComponent } from './data-table-column.component';\r\n\r\n@Component({\r\n    selector: 'vdr-data-table',\r\n    templateUrl: 'data-table.component.html',\r\n    styleUrls: ['data-table.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [PaginationService],\r\n})\r\nexport class DataTableComponent<T> implements AfterContentInit {\r\n    @Input() items: T[];\r\n    @Input() itemsPerPage: number;\r\n    @Input() currentPage: number;\r\n    @Input() totalItems: number;\r\n    @Input() allSelected: boolean;\r\n    @Input() isRowSelectedFn: (item: T) => boolean;\r\n    @Input() emptyStateLabel: string;\r\n    @Output() allSelectChange = new EventEmitter<void>();\r\n    @Output() rowSelectChange = new EventEmitter<T>();\r\n    @Output() pageChange = new EventEmitter<number>();\r\n    @Output() itemsPerPageChange = new EventEmitter<number>();\r\n    @ContentChildren(DataTableColumnComponent) columns: QueryList<DataTableColumnComponent>;\r\n    @ContentChildren(TemplateRef) templateRefs: QueryList<TemplateRef<any>>;\r\n    rowTemplate: TemplateRef<any>;\r\n\r\n    ngAfterContentInit(): void {\r\n        this.rowTemplate = this.templateRefs.last;\r\n    }\r\n\r\n    trackByFn(index: number, item: any) {\r\n        if ((item as any).id != null) {\r\n            return (item as any).id;\r\n        } else {\r\n            return index;\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-dropdown',\r\n    templateUrl: './dropdown.component.html',\r\n    styleUrls: ['./dropdown.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DropdownComponent {\r\n    private isOpen = false;\r\n    private onOpenChangeCallbacks: Array<(isOpen: boolean) => void> = [];\r\n    public trigger: ElementRef;\r\n    @Input() manualToggle = false;\r\n\r\n    onClick() {\r\n        if (!this.manualToggle) {\r\n            this.toggleOpen();\r\n        }\r\n    }\r\n\r\n    toggleOpen() {\r\n        this.isOpen = !this.isOpen;\r\n        this.onOpenChangeCallbacks.forEach(fn => fn(this.isOpen));\r\n    }\r\n\r\n    onOpenChange(callback: (isOpen: boolean) => void) {\r\n        this.onOpenChangeCallbacks.push(callback);\r\n    }\r\n\r\n    setTriggerElement(elementRef: ElementRef) {\r\n        this.trigger = elementRef;\r\n    }\r\n}\r\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nimport { DayOfWeek } from './types';\r\n\r\nexport const dayOfWeekIndex: { [day in DayOfWeek]: number } = {\r\n    sun: 0,\r\n    mon: 1,\r\n    tue: 2,\r\n    wed: 3,\r\n    thu: 4,\r\n    fri: 5,\r\n    sat: 6,\r\n};\r\n\r\nexport const weekDayNames = [\r\n    _('datetime.weekday-su'),\r\n    _('datetime.weekday-mo'),\r\n    _('datetime.weekday-tu'),\r\n    _('datetime.weekday-we'),\r\n    _('datetime.weekday-th'),\r\n    _('datetime.weekday-fr'),\r\n    _('datetime.weekday-sa'),\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport dayjs from 'dayjs';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { dayOfWeekIndex } from './constants';\r\nimport { CalendarView, DayCell, DayOfWeek } from './types';\r\n\r\n@Injectable()\r\nexport class DatetimePickerService {\r\n    calendarView$: Observable<CalendarView>;\r\n    selected$: Observable<Date | null>;\r\n    viewing$: Observable<Date>;\r\n    private selectedDatetime$ = new BehaviorSubject<dayjs.Dayjs | null>(null);\r\n    private viewingDatetime$ = new BehaviorSubject<dayjs.Dayjs>(dayjs());\r\n    private weekStartDayIndex: number;\r\n    private min: dayjs.Dayjs | null = null;\r\n    private max: dayjs.Dayjs | null = null;\r\n    private jumping = false;\r\n\r\n    constructor() {\r\n        this.selected$ = this.selectedDatetime$.pipe(map(value => value && value.toDate()));\r\n        this.viewing$ = this.viewingDatetime$.pipe(map(value => value.toDate()));\r\n        this.weekStartDayIndex = dayOfWeekIndex['mon'];\r\n        this.calendarView$ = combineLatest(this.viewingDatetime$, this.selectedDatetime$).pipe(\r\n            map(([viewing, selected]) => this.generateCalendarView(viewing, selected)),\r\n        );\r\n    }\r\n\r\n    setWeekStartingDay(weekStartDay: DayOfWeek) {\r\n        this.weekStartDayIndex = dayOfWeekIndex[weekStartDay];\r\n    }\r\n\r\n    setMin(min?: string | null) {\r\n        if (typeof min === 'string') {\r\n            this.min = dayjs(min);\r\n        }\r\n    }\r\n\r\n    setMax(max?: string | null) {\r\n        if (typeof max === 'string') {\r\n            this.max = dayjs(max);\r\n        }\r\n    }\r\n\r\n    selectDatetime(date: Date | string | dayjs.Dayjs | null) {\r\n        let viewingValue: dayjs.Dayjs;\r\n        let selectedValue: dayjs.Dayjs | null = null;\r\n        if (date == null || date === '') {\r\n            viewingValue = dayjs();\r\n        } else {\r\n            viewingValue = dayjs(date);\r\n            selectedValue = dayjs(date);\r\n        }\r\n\r\n        this.selectedDatetime$.next(selectedValue);\r\n        this.viewingDatetime$.next(viewingValue);\r\n    }\r\n\r\n    selectHour(hourOfDay: number) {\r\n        const current = this.selectedDatetime$.value || dayjs();\r\n        const next = current.hour(hourOfDay);\r\n        this.selectedDatetime$.next(next);\r\n        this.viewingDatetime$.next(next);\r\n    }\r\n\r\n    selectMinute(minutePastHour: number) {\r\n        const current = this.selectedDatetime$.value || dayjs();\r\n        const next = current.minute(minutePastHour);\r\n        this.selectedDatetime$.next(next);\r\n        this.viewingDatetime$.next(next);\r\n    }\r\n\r\n    viewNextMonth() {\r\n        this.jumping = false;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.add(1, 'month'));\r\n    }\r\n\r\n    viewPrevMonth() {\r\n        this.jumping = false;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.subtract(1, 'month'));\r\n    }\r\n\r\n    viewToday() {\r\n        this.jumping = false;\r\n        this.viewingDatetime$.next(dayjs());\r\n    }\r\n\r\n    viewJumpDown() {\r\n        this.jumping = true;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.add(1, 'week'));\r\n    }\r\n\r\n    viewJumpUp() {\r\n        this.jumping = true;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.subtract(1, 'week'));\r\n    }\r\n\r\n    viewJumpRight() {\r\n        this.jumping = true;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.add(1, 'day'));\r\n    }\r\n\r\n    viewJumpLeft() {\r\n        this.jumping = true;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.subtract(1, 'day'));\r\n    }\r\n\r\n    selectToday() {\r\n        this.jumping = false;\r\n        this.selectDatetime(dayjs());\r\n    }\r\n\r\n    selectViewed() {\r\n        this.jumping = false;\r\n        this.selectDatetime(this.viewingDatetime$.value);\r\n    }\r\n\r\n    viewMonth(month: number) {\r\n        this.jumping = false;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.month(month - 1));\r\n    }\r\n\r\n    viewYear(year: number) {\r\n        this.jumping = false;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.year(year));\r\n    }\r\n\r\n    private generateCalendarView(viewing: dayjs.Dayjs, selected: dayjs.Dayjs | null): CalendarView {\r\n        if (!viewing.isValid() || (selected && !selected.isValid())) {\r\n            return [];\r\n        }\r\n        const start = viewing.startOf('month');\r\n        const end = viewing.endOf('month');\r\n        const today = dayjs();\r\n        const daysInMonth = viewing.daysInMonth();\r\n        const selectedDayOfMonth = selected && selected.get('date');\r\n\r\n        const startDayOfWeek = start.day();\r\n        const startIndex = (7 + (startDayOfWeek - this.weekStartDayIndex)) % 7;\r\n\r\n        const calendarView: CalendarView = [];\r\n        let week: DayCell[] = [];\r\n\r\n        // Add the days at the tail of the previous month\r\n        if (0 < startIndex) {\r\n            const prevMonth = viewing.subtract(1, 'month');\r\n            const daysInPrevMonth = prevMonth.daysInMonth();\r\n            const prevIsCurrentMonth = prevMonth.isSame(today, 'month');\r\n            for (let i = daysInPrevMonth - startIndex + 1; i <= daysInPrevMonth; i++) {\r\n                const thisDay = viewing.subtract(1, 'month').date(i);\r\n                week.push({\r\n                    dayOfMonth: i,\r\n                    selected: false,\r\n                    inCurrentMonth: false,\r\n                    isToday: prevIsCurrentMonth && today.get('date') === i,\r\n                    isViewing: false,\r\n                    disabled: !this.isInBounds(thisDay),\r\n                    select: () => {\r\n                        this.selectDatetime(thisDay);\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        // Add this month's days\r\n        const isCurrentMonth = viewing.isSame(today, 'month');\r\n        for (let i = 1; i <= daysInMonth; i++) {\r\n            if ((i + startIndex - 1) % 7 === 0) {\r\n                calendarView.push(week);\r\n                week = [];\r\n            }\r\n            const thisDay = start.add(i - 1, 'day');\r\n            const isViewingThisMonth =\r\n                !!selected && selected.isSame(viewing, 'month') && selected.isSame(viewing, 'year');\r\n            week.push({\r\n                dayOfMonth: i,\r\n                selected: i === selectedDayOfMonth && isViewingThisMonth,\r\n                inCurrentMonth: true,\r\n                isToday: isCurrentMonth && today.get('date') === i,\r\n                isViewing: this.jumping && viewing.date() === i,\r\n                disabled: !this.isInBounds(thisDay),\r\n                select: () => {\r\n                    this.selectDatetime(thisDay);\r\n                },\r\n            });\r\n        }\r\n\r\n        // Add the days at the start of the next month\r\n        const emptyCellsEnd = 7 - ((startIndex + daysInMonth) % 7);\r\n        if (emptyCellsEnd !== 7) {\r\n            const nextMonth = viewing.add(1, 'month');\r\n            const nextIsCurrentMonth = nextMonth.isSame(today, 'month');\r\n\r\n            for (let i = 1; i <= emptyCellsEnd; i++) {\r\n                const thisDay = end.add(i, 'day');\r\n                week.push({\r\n                    dayOfMonth: i,\r\n                    selected: false,\r\n                    inCurrentMonth: false,\r\n                    isToday: nextIsCurrentMonth && today.get('date') === i,\r\n                    isViewing: false,\r\n                    disabled: !this.isInBounds(thisDay),\r\n                    select: () => {\r\n                        this.selectDatetime(thisDay);\r\n                    },\r\n                });\r\n            }\r\n        }\r\n        calendarView.push(week);\r\n        return calendarView;\r\n    }\r\n\r\n    private isInBounds(date: dayjs.Dayjs): boolean {\r\n        if (this.min && this.min.isAfter(date)) {\r\n            return false;\r\n        }\r\n        if (this.max && this.max.isBefore(date)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { DropdownComponent } from '../dropdown/dropdown.component';\r\n\r\nimport { dayOfWeekIndex, weekDayNames } from './constants';\r\nimport { DatetimePickerService } from './datetime-picker.service';\r\nimport { CalendarView, DayCell, DayOfWeek } from './types';\r\n\r\nexport type CurrentView = {\r\n    date: Date;\r\n    month: number;\r\n    year: number;\r\n};\r\n\r\n@Component({\r\n    selector: 'vdr-datetime-picker',\r\n    templateUrl: './datetime-picker.component.html',\r\n    styleUrls: ['./datetime-picker.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        DatetimePickerService,\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: DatetimePickerComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class DatetimePickerComponent implements ControlValueAccessor, AfterViewInit, OnInit, OnDestroy {\r\n    /**\r\n     * The range above and below the current year which is selectable from\r\n     * the year select control. If a min or max value is set, these will\r\n     * override the yearRange.\r\n     */\r\n    @Input() yearRange;\r\n    /**\r\n     * The day that the week should start with in the calendar view.\r\n     */\r\n    @Input() weekStartDay: DayOfWeek = 'mon';\r\n    /**\r\n     * The granularity of the minutes time picker\r\n     */\r\n    @Input() timeGranularityInterval = 5;\r\n    /**\r\n     * The minimum date as an ISO string\r\n     */\r\n    @Input() min: string | null = null;\r\n    /**\r\n     * The maximum date as an ISO string\r\n     */\r\n    @Input() max: string | null = null;\r\n    /**\r\n     * Sets the readonly state\r\n     */\r\n    @Input() readonly = false;\r\n\r\n    @ViewChild('dropdownComponent', { static: true }) dropdownComponent: DropdownComponent;\r\n    @ViewChild('datetimeInput', { static: true }) datetimeInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild('calendarTable') calendarTable: ElementRef<HTMLTableElement>;\r\n\r\n    disabled = false;\r\n    calendarView$: Observable<CalendarView>;\r\n    current$: Observable<CurrentView>;\r\n    selected$: Observable<Date | null>;\r\n    selectedHours$: Observable<number | null>;\r\n    selectedMinutes$: Observable<number | null>;\r\n    years: number[];\r\n    weekdays: string[] = [];\r\n    hours: number[];\r\n    minutes: number[];\r\n    private onChange: (val: any) => void;\r\n    private onTouch: () => void;\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        private datetimePickerService: DatetimePickerService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.datetimePickerService.setWeekStartingDay(this.weekStartDay);\r\n        this.datetimePickerService.setMin(this.min);\r\n        this.datetimePickerService.setMax(this.max);\r\n        this.populateYearsSelection();\r\n        this.populateWeekdays();\r\n        this.populateHours();\r\n        this.populateMinutes();\r\n        this.calendarView$ = this.datetimePickerService.calendarView$;\r\n        this.current$ = this.datetimePickerService.viewing$.pipe(\r\n            map(date => ({\r\n                date,\r\n                month: date.getMonth() + 1,\r\n                year: date.getFullYear(),\r\n            })),\r\n        );\r\n        this.selected$ = this.datetimePickerService.selected$;\r\n        this.selectedHours$ = this.selected$.pipe(map(date => date && date.getHours()));\r\n        this.selectedMinutes$ = this.selected$.pipe(map(date => date && date.getMinutes()));\r\n        this.subscription = this.datetimePickerService.selected$.subscribe(val => {\r\n            if (this.onChange) {\r\n                this.onChange(val == null ? val : val.toISOString());\r\n            }\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dropdownComponent.onOpenChange(isOpen => {\r\n            if (isOpen) {\r\n                this.calendarTable.nativeElement.focus();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    writeValue(value: string | null) {\r\n        this.datetimePickerService.selectDatetime(value);\r\n    }\r\n\r\n    prevMonth() {\r\n        this.datetimePickerService.viewPrevMonth();\r\n    }\r\n\r\n    nextMonth() {\r\n        this.datetimePickerService.viewNextMonth();\r\n    }\r\n\r\n    selectToday() {\r\n        this.datetimePickerService.selectToday();\r\n    }\r\n\r\n    setYear(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this.datetimePickerService.viewYear(parseInt(target.value, 10));\r\n    }\r\n\r\n    setMonth(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this.datetimePickerService.viewMonth(parseInt(target.value, 10));\r\n    }\r\n\r\n    selectDay(day: DayCell) {\r\n        if (day.disabled) {\r\n            return;\r\n        }\r\n        day.select();\r\n    }\r\n\r\n    clearValue() {\r\n        this.datetimePickerService.selectDatetime(null);\r\n    }\r\n\r\n    handleCalendarKeydown(event: KeyboardEvent) {\r\n        switch (event.key) {\r\n            case 'ArrowDown':\r\n                return this.datetimePickerService.viewJumpDown();\r\n            case 'ArrowUp':\r\n                return this.datetimePickerService.viewJumpUp();\r\n            case 'ArrowRight':\r\n                return this.datetimePickerService.viewJumpRight();\r\n            case 'ArrowLeft':\r\n                return this.datetimePickerService.viewJumpLeft();\r\n            case 'Enter':\r\n                return this.datetimePickerService.selectViewed();\r\n        }\r\n    }\r\n\r\n    setHour(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this.datetimePickerService.selectHour(parseInt(target.value, 10));\r\n    }\r\n\r\n    setMinute(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this.datetimePickerService.selectMinute(parseInt(target.value, 10));\r\n    }\r\n\r\n    closeDatepicker() {\r\n        this.dropdownComponent.toggleOpen();\r\n        this.datetimeInput.nativeElement.focus();\r\n    }\r\n\r\n    private populateYearsSelection() {\r\n        const yearRange = this.yearRange ?? 10;\r\n        const currentYear = new Date().getFullYear();\r\n        const min = (this.min && new Date(this.min).getFullYear()) || currentYear - yearRange;\r\n        const max = (this.max && new Date(this.max).getFullYear()) || currentYear + yearRange;\r\n        const spread = max - min + 1;\r\n        this.years = Array.from({ length: spread }).map((_, i) => min + i);\r\n    }\r\n\r\n    private populateWeekdays() {\r\n        const weekStartDayIndex = dayOfWeekIndex[this.weekStartDay];\r\n        for (let i = 0; i < 7; i++) {\r\n            this.weekdays.push(weekDayNames[(i + weekStartDayIndex + 0) % 7]);\r\n        }\r\n    }\r\n\r\n    private populateHours() {\r\n        this.hours = Array.from({ length: 24 }).map((_, i) => i);\r\n    }\r\n\r\n    private populateMinutes() {\r\n        const minutes: number[] = [];\r\n        for (let i = 0; i < 60; i += this.timeGranularityInterval) {\r\n            minutes.push(i);\r\n        }\r\n        this.minutes = minutes;\r\n    }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\nimport { DropdownComponent } from './dropdown.component';\r\n\r\n@Directive({\r\n    selector: '[vdrDropdownItem]',\r\n    // tslint:disable-next-line\r\n    host: { '[class.dropdown-item]': 'true' },\r\n})\r\nexport class DropdownItemDirective {\r\n    constructor(private dropdown: DropdownComponent) {}\r\n\r\n    @HostListener('click', ['$event'])\r\n    onDropdownItemClick(event: any): void {\r\n        this.dropdown.onClick();\r\n    }\r\n}\r\n","import {\n    ConnectedPosition,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayRef,\n    PositionStrategy,\n    VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ElementRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DropdownTriggerDirective } from './dropdown-trigger.directive';\nimport { DropdownComponent } from './dropdown.component';\n\nexport type DropdownPosition = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\n/**\n * A dropdown menu modelled on the Clarity Dropdown component (https://v1.clarity.design/dropdowns).\n *\n * This was created because the Clarity implementation (at this time) does not handle edge detection. Instead\n * we make use of the Angular CDK's Overlay module to manage the positioning.\n *\n * The API of this component (and its related Components & Directives) are based on the Clarity version,\n * albeit only a subset which is currently used in this application.\n */\n@Component({\n    selector: 'vdr-dropdown-menu',\n    template: `\n        <ng-template #menu>\n            <div class=\"dropdown open\">\n                <div class=\"dropdown-menu\">\n                    <div class=\"dropdown-content-wrapper\">\n                        <ng-content></ng-content>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styleUrls: ['./dropdown-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DropdownMenuComponent implements AfterViewInit, OnInit, OnDestroy {\n    @Input('vdrPosition') private position: DropdownPosition = 'bottom-left';\n    @ViewChild('menu', { static: true }) private menuTemplate: TemplateRef<any>;\n    private menuPortal: TemplatePortal<any>;\n    private overlayRef: OverlayRef;\n    private backdropClickSub: Subscription;\n\n    constructor(\n        private overlay: Overlay,\n        private viewContainerRef: ViewContainerRef,\n        private dropdown: DropdownComponent,\n    ) {}\n\n    ngOnInit(): void {\n        this.dropdown.onOpenChange(isOpen => {\n            if (isOpen) {\n                this.overlayRef.attach(this.menuPortal);\n            } else {\n                this.overlayRef.detach();\n            }\n        });\n    }\n\n    ngAfterViewInit() {\n        this.overlayRef = this.overlay.create({\n            hasBackdrop: true,\n            backdropClass: 'clear-backdrop',\n            positionStrategy: this.getPositionStrategy(),\n            maxHeight: '70vh',\n        });\n        this.menuPortal = new TemplatePortal(this.menuTemplate, this.viewContainerRef);\n        this.backdropClickSub = this.overlayRef.backdropClick().subscribe(() => {\n            this.dropdown.toggleOpen();\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        if (this.backdropClickSub) {\n            this.backdropClickSub.unsubscribe();\n        }\n    }\n\n    private getPositionStrategy(): PositionStrategy {\n        const position: { [K in DropdownPosition]: ConnectedPosition } = {\n            ['top-left']: {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n            ['top-right']: {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom',\n            },\n            ['bottom-left']: {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            ['bottom-right']: {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top',\n            },\n        };\n\n        const pos = position[this.position];\n\n        return this.overlay\n            .position()\n            .flexibleConnectedTo(this.dropdown.trigger)\n            .withPositions([pos, this.invertPosition(pos)])\n            .withViewportMargin(12)\n            .withPush(true);\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(pos: ConnectedPosition): ConnectedPosition {\n        const inverted = { ...pos };\n        inverted.originY = pos.originY === 'top' ? 'bottom' : 'top';\n        inverted.overlayY = pos.overlayY === 'top' ? 'bottom' : 'top';\n\n        return inverted;\n    }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\nimport { DropdownComponent } from './dropdown.component';\r\n\r\n@Directive({\r\n    selector: '[vdrDropdownTrigger]',\r\n})\r\nexport class DropdownTriggerDirective {\r\n    constructor(private dropdown: DropdownComponent, private elementRef: ElementRef) {\r\n        dropdown.setTriggerElement(this.elementRef);\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onDropdownTriggerClick(event: any): void {\r\n        this.dropdown.toggleOpen();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\nimport { Dialog } from '../../../providers/modal/modal.service';\r\n\r\n@Component({\r\n    selector: 'vdr-edit-note-dialog',\r\n    templateUrl: './edit-note-dialog.component.html',\r\n    styleUrls: ['./edit-note-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EditNoteDialogComponent implements Dialog<{ note: string; isPrivate?: boolean }> {\r\n    displayPrivacyControls = true;\r\n    noteIsPrivate = true;\r\n    note = '';\r\n    resolveWith: (result?: { note: string; isPrivate?: boolean }) => void;\r\n\r\n    confirm() {\r\n        this.resolveWith({\r\n            note: this.note,\r\n            isPrivate: this.noteIsPrivate,\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-empty-placeholder',\r\n    templateUrl: './empty-placeholder.component.html',\r\n    styleUrls: ['./empty-placeholder.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EmptyPlaceholderComponent {\r\n    @Input() emptyStateLabel: string;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-entity-info',\r\n    templateUrl: './entity-info.component.html',\r\n    styleUrls: ['./entity-info.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EntityInfoComponent {\r\n    @Input() small = false;\r\n    @Input() entity: { id: string; createdAt?: string; updatedAt?: string };\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { ExtensionMesssage, MessageResponse } from '@vendure/common/lib/extension-host-types';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\nimport { parse } from 'graphql';\r\nimport { merge, Observer, Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { NotificationService } from '../../../providers/notification/notification.service';\r\n\r\n@Injectable()\r\nexport class ExtensionHostService implements OnDestroy {\r\n    private extensionWindow: Window;\r\n    private cancellationMessage$ = new Subject<string>();\r\n    private destroyMessage$ = new Subject<void>();\r\n\r\n    constructor(private dataService: DataService, private notificationService: NotificationService) {}\r\n\r\n    init(extensionWindow: Window) {\r\n        this.extensionWindow = extensionWindow;\r\n        window.addEventListener('message', this.handleMessage);\r\n    }\r\n\r\n    destroy() {\r\n        window.removeEventListener('message', this.handleMessage);\r\n        this.destroyMessage$.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    private handleMessage = (message: MessageEvent) => {\r\n        const { data, origin } = message;\r\n        if (this.isExtensionMessage(data)) {\r\n            const cancellation$ = this.cancellationMessage$.pipe(\r\n                filter(requestId => requestId === data.requestId),\r\n            );\r\n            const end$ = merge(cancellation$, this.destroyMessage$);\r\n            switch (data.type) {\r\n                case 'cancellation': {\r\n                    this.cancellationMessage$.next(data.requestId);\r\n                    break;\r\n                }\r\n                case 'destroy': {\r\n                    this.destroyMessage$.next();\r\n                    break;\r\n                }\r\n                case 'graphql-query': {\r\n                    const { document, variables, fetchPolicy } = data.data;\r\n                    this.dataService\r\n                        .query(parse(document), variables, fetchPolicy)\r\n                        .stream$.pipe(takeUntil(end$))\r\n                        .subscribe(this.createObserver(data.requestId, origin));\r\n                    break;\r\n                }\r\n                case 'graphql-mutation': {\r\n                    const { document, variables } = data.data;\r\n                    this.dataService\r\n                        .mutate(parse(document), variables)\r\n                        .pipe(takeUntil(end$))\r\n                        .subscribe(this.createObserver(data.requestId, origin));\r\n                    break;\r\n                }\r\n                case 'notification': {\r\n                    this.notificationService.notify(data.data);\r\n                    break;\r\n                }\r\n                default:\r\n                    assertNever(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    private createObserver(requestId: string, origin: string): Observer<any> {\r\n        return {\r\n            next: data => this.sendMessage({ data, error: false, complete: false, requestId }, origin),\r\n            error: err => this.sendMessage({ data: err, error: true, complete: false, requestId }, origin),\r\n            complete: () => this.sendMessage({ data: null, error: false, complete: true, requestId }, origin),\r\n        };\r\n    }\r\n\r\n    private sendMessage(response: MessageResponse, origin: string) {\r\n        this.extensionWindow.postMessage(response, origin);\r\n    }\r\n\r\n    private isExtensionMessage(input: any): input is ExtensionMesssage {\r\n        return (\r\n            input.hasOwnProperty('type') && input.hasOwnProperty('data') && input.hasOwnProperty('requestId')\r\n        );\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ExtensionHostConfig } from './extension-host-config';\r\nimport { ExtensionHostService } from './extension-host.service';\r\n\r\n/**\r\n * This component uses an iframe to embed an external url into the Admin UI, and uses the PostMessage\r\n * protocol to allow cross-frame communication between the two frames.\r\n */\r\n@Component({\r\n    selector: 'vdr-extension-host',\r\n    templateUrl: './extension-host.component.html',\r\n    styleUrls: ['./extension-host.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    providers: [ExtensionHostService],\r\n})\r\nexport class ExtensionHostComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    extensionUrl: SafeResourceUrl;\r\n    openInIframe = true;\r\n    extensionWindowIsOpen = false;\r\n    private config: ExtensionHostConfig;\r\n    private extensionWindow?: Window;\r\n    @ViewChild('extensionFrame') private extensionFrame: ElementRef<HTMLIFrameElement>;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private sanitizer: DomSanitizer,\r\n        private extensionHostService: ExtensionHostService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        const { data } = this.route.snapshot;\r\n        if (!this.isExtensionHostConfig(data.extensionHostConfig)) {\r\n            throw new Error(\r\n                `Expected an ExtensionHostConfig object, got ${JSON.stringify(data.extensionHostConfig)}`,\r\n            );\r\n        }\r\n        this.config = data.extensionHostConfig;\r\n        this.openInIframe = !this.config.openInNewTab;\r\n        this.extensionUrl = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            this.config.extensionUrl || 'about:blank',\r\n        );\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.openInIframe) {\r\n            const extensionWindow = this.extensionFrame.nativeElement.contentWindow;\r\n            if (extensionWindow) {\r\n                this.extensionHostService.init(extensionWindow);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.extensionWindow) {\r\n            this.extensionWindow.close();\r\n        }\r\n    }\r\n\r\n    launchExtensionWindow() {\r\n        const extensionWindow = window.open(this.config.extensionUrl);\r\n        if (!extensionWindow) {\r\n            return;\r\n        }\r\n        this.extensionHostService.init(extensionWindow);\r\n        this.extensionWindowIsOpen = true;\r\n        this.extensionWindow = extensionWindow;\r\n\r\n        let timer: number;\r\n        function pollWindowState(extwindow: Window, onClosed: () => void) {\r\n            if (extwindow.closed) {\r\n                window.clearTimeout(timer);\r\n                onClosed();\r\n            } else {\r\n                timer = window.setTimeout(() => pollWindowState(extwindow, onClosed), 250);\r\n            }\r\n        }\r\n\r\n        pollWindowState(extensionWindow, () => {\r\n            this.extensionWindowIsOpen = false;\r\n            this.extensionHostService.destroy();\r\n        });\r\n    }\r\n\r\n    private isExtensionHostConfig(input: any): input is ExtensionHostConfig {\r\n        return input.hasOwnProperty('extensionUrl');\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { FacetValue } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-facet-value-chip',\r\n    templateUrl: './facet-value-chip.component.html',\r\n    styleUrls: ['./facet-value-chip.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetValueChipComponent {\r\n    @Input() facetValue: FacetValue.Fragment;\r\n    @Input() removable = true;\r\n    @Input() displayFacetName = true;\r\n    @Output() remove = new EventEmitter<void>();\r\n}\r\n","import { FacetValue, FacetWithValues } from '../generated-types';\r\n\r\nexport function flattenFacetValues(facetsWithValues: FacetWithValues.Fragment[]): FacetValue.Fragment[] {\r\n    return facetsWithValues.reduce(\r\n        (flattened, facet) => flattened.concat(facet.values),\r\n        [] as FacetValue.Fragment[],\r\n    );\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\n\r\nimport { FacetValue, FacetWithValues } from '../../../common/generated-types';\r\nimport { flattenFacetValues } from '../../../common/utilities/flatten-facet-values';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\nexport type FacetValueSeletorItem = {\r\n    name: string;\r\n    facetName: string;\r\n    id: string;\r\n    value: FacetValue.Fragment;\r\n};\r\n\r\n@Component({\r\n    selector: 'vdr-facet-value-selector',\r\n    templateUrl: './facet-value-selector.component.html',\r\n    styleUrls: ['./facet-value-selector.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: FacetValueSelectorComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class FacetValueSelectorComponent implements OnInit, ControlValueAccessor {\r\n    @Output() selectedValuesChange = new EventEmitter<FacetValue.Fragment[]>();\r\n    @Input() facets: FacetWithValues.Fragment[];\r\n    @Input() readonly = false;\r\n\r\n    @ViewChild(NgSelectComponent) private ngSelect: NgSelectComponent;\r\n\r\n    facetValues: FacetValueSeletorItem[] = [];\r\n    onChangeFn: (val: any) => void;\r\n    onTouchFn: () => void;\r\n    disabled = false;\r\n    value: string[];\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.facetValues = flattenFacetValues(this.facets).map(this.toSelectorItem);\r\n    }\r\n\r\n    onChange(selected: FacetValueSeletorItem[]) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n        this.selectedValuesChange.emit(selected.map(s => s.value));\r\n        if (this.onChangeFn) {\r\n            this.onChangeFn(JSON.stringify(selected.map(s => s.id)));\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChangeFn = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchFn = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    focus() {\r\n        this.ngSelect.focus();\r\n    }\r\n\r\n    writeValue(obj: string | FacetValue.Fragment[] | Array<string | number> | null): void {\r\n        if (typeof obj === 'string') {\r\n            try {\r\n                const facetIds = JSON.parse(obj) as string[];\r\n                this.value = facetIds;\r\n            } catch (err) {\r\n                // TODO: log error\r\n                throw err;\r\n            }\r\n        } else if (Array.isArray(obj)) {\r\n            const isIdArray = (input: unknown[]): input is Array<string | number> =>\r\n                input.every(i => typeof i === 'number' || typeof i === 'string');\r\n            if (isIdArray(obj)) {\r\n                this.value = obj.map(fv => fv.toString());\r\n            } else {\r\n                this.value = obj.map(fv => fv.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    private toSelectorItem = (facetValue: FacetValue.Fragment): FacetValueSeletorItem => {\r\n        return {\r\n            name: facetValue.name,\r\n            facetName: facetValue.facet.name,\r\n            id: facetValue.id,\r\n            value: facetValue,\r\n        };\r\n    };\r\n}\r\n","import { CdkDragEnd } from '@angular/cdk/drag-drop';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\n\r\nexport type Point = { x: number; y: number };\r\n\r\n@Component({\r\n    selector: 'vdr-focal-point-control',\r\n    templateUrl: './focal-point-control.component.html',\r\n    styleUrls: ['./focal-point-control.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FocalPointControlComponent {\r\n    @Input() visible = false;\r\n    @Input() editable = false;\r\n    @HostBinding('style.width.px')\r\n    @Input()\r\n    width: number;\r\n    @HostBinding('style.height.px')\r\n    @Input()\r\n    height: number;\r\n    @Input() fpx = 0.5;\r\n    @Input() fpy = 0.5;\r\n    @Output() focalPointChange = new EventEmitter<Point>();\r\n\r\n    @ViewChild('frame', { static: true }) frame: ElementRef<HTMLDivElement>;\r\n    @ViewChild('dot', { static: true }) dot: ElementRef<HTMLDivElement>;\r\n\r\n    get initialPosition(): Point {\r\n        return this.focalPointToOffset(this.fpx == null ? 0.5 : this.fpx, this.fpy == null ? 0.5 : this.fpy);\r\n    }\r\n\r\n    onDragEnded(event: CdkDragEnd) {\r\n        const { x, y } = this.getCurrentFocalPoint();\r\n        this.fpx = x;\r\n        this.fpy = y;\r\n        this.focalPointChange.emit({ x, y });\r\n    }\r\n\r\n    private getCurrentFocalPoint(): Point {\r\n        const { left: dotLeft, top: dotTop, width, height } = this.dot.nativeElement.getBoundingClientRect();\r\n        const { left: frameLeft, top: frameTop } = this.frame.nativeElement.getBoundingClientRect();\r\n        const xInPx = dotLeft - frameLeft + width / 2;\r\n        const yInPx = dotTop - frameTop + height / 2;\r\n        return {\r\n            x: xInPx / this.width,\r\n            y: yInPx / this.height,\r\n        };\r\n    }\r\n\r\n    private focalPointToOffset(x: number, y: number): Point {\r\n        const { width, height } = this.dot.nativeElement.getBoundingClientRect();\r\n        return {\r\n            x: x * this.width - width / 2,\r\n            y: y * this.height - height / 2,\r\n        };\r\n    }\r\n}\r\n","import { Directive, ElementRef, Optional } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\ntype InputElement = HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n\r\n// tslint:disable:directive-selector\r\n@Directive({ selector: 'input, textarea, select' })\r\nexport class FormFieldControlDirective {\r\n    constructor(\r\n        private elementRef: ElementRef<InputElement>,\r\n        @Optional() public formControlName: NgControl,\r\n    ) {}\r\n\r\n    get valid(): boolean {\r\n        return !!this.formControlName && !!this.formControlName.valid;\r\n    }\r\n\r\n    get touched(): boolean {\r\n        return !!this.formControlName && !!this.formControlName.touched;\r\n    }\r\n\r\n    setReadOnly(value: boolean) {\r\n        const input = this.elementRef.nativeElement;\r\n        if (isSelectElement(input)) {\r\n            input.disabled = value;\r\n        } else {\r\n            input.readOnly = value;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isSelectElement(value: InputElement): value is HTMLSelectElement {\r\n    return value.hasOwnProperty('selectedIndex');\r\n}\r\n","import {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    Input,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { FormFieldControlDirective } from './form-field-control.directive';\r\n\r\n/**\r\n * A form field wrapper which handles the correct layout and validation error display for\r\n * a form control.\r\n */\r\n@Component({\r\n    selector: 'vdr-form-field',\r\n    templateUrl: './form-field.component.html',\r\n    styleUrls: ['./form-field.component.scss'],\r\n})\r\nexport class FormFieldComponent implements OnInit {\r\n    @Input() label: string;\r\n    @Input() for: string;\r\n    @Input() tooltip: string;\r\n    /**\r\n     * A map of error message codes (required, pattern etc.) to messages to display\r\n     * when those errors are present.\r\n     */\r\n    @Input() errors: { [key: string]: string } = {};\r\n    /**\r\n     * If set to true, the input will be initially set to \"readOnly\", and an \"edit\" button\r\n     * will be displayed which allows the field to be edited.\r\n     */\r\n    @Input() readOnlyToggle = false;\r\n    @ContentChild(FormFieldControlDirective, { static: true }) formFieldControl: FormFieldControlDirective;\r\n    isReadOnly = false;\r\n\r\n    ngOnInit() {\r\n        if (this.readOnlyToggle) {\r\n            this.isReadOnly = true;\r\n            this.setReadOnly(true);\r\n        }\r\n        this.isReadOnly = this.readOnlyToggle;\r\n    }\r\n\r\n    setReadOnly(value: boolean) {\r\n        this.formFieldControl.setReadOnly(value);\r\n        this.isReadOnly = value;\r\n    }\r\n\r\n    getErrorMessage(): string | undefined {\r\n        if (!this.formFieldControl || !this.formFieldControl.formControlName) {\r\n            return;\r\n        }\r\n        const errors = this.formFieldControl.formControlName.errors;\r\n        if (errors) {\r\n            for (const errorKey of Object.keys(errors)) {\r\n                if (this.errors[errorKey]) {\r\n                    return this.errors[errorKey];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n/**\r\n * Like the {@link FormFieldComponent} but for content which is not a form control. Used\r\n * to keep a consistent layout with other form fields in the form.\r\n */\r\n@Component({\r\n    selector: 'vdr-form-item',\r\n    templateUrl: './form-item.component.html',\r\n    styleUrls: ['./form-item.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormItemComponent {\r\n    @Input() label: string;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { AddressFragment, OrderAddress } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-formatted-address',\r\n    templateUrl: './formatted-address.component.html',\r\n    styleUrls: ['./formatted-address.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormattedAddressComponent {\r\n    @Input() address: AddressFragment | OrderAddress;\r\n\r\n    getCountryName(): string {\r\n        if (this.isAddressFragment(this.address)) {\r\n            return this.address.country.name;\r\n        } else {\r\n            return this.address.country || '';\r\n        }\r\n    }\r\n\r\n    getCustomFields(): Array<{ key: string; value: any }> {\r\n        const customFields = (this.address as any).customFields;\r\n        if (customFields) {\r\n            return Object.entries(customFields)\r\n                .filter(([key]) => key !== '__typename')\r\n                .map(([key, value]) => ({ key, value: (value as any)?.toString() ?? '-' }));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    private isAddressFragment(input: AddressFragment | OrderAddress): input is AddressFragment {\r\n        return typeof input.country !== 'string';\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'vdr-help-tooltip',\n    templateUrl: './help-tooltip.component.html',\n    styleUrls: ['./help-tooltip.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HelpTooltipComponent {\n    @Input() content: string;\n    @Input() position: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left' | 'right' | 'left';\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-history-entry-detail',\r\n    templateUrl: './history-entry-detail.component.html',\r\n    styleUrls: ['./history-entry-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HistoryEntryDetailComponent {}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n/**\r\n * A control for setting the number of items per page in a paginated list.\r\n */\r\n@Component({\r\n    selector: 'vdr-items-per-page-controls',\r\n    templateUrl: './items-per-page-controls.component.html',\r\n    styleUrls: ['./items-per-page-controls.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ItemsPerPageControlsComponent {\r\n    @Input() itemsPerPage = 10;\r\n    @Output() itemsPerPageChange = new EventEmitter<number>();\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-labeled-data',\r\n    templateUrl: './labeled-data.component.html',\r\n    styleUrls: ['./labeled-data.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LabeledDataComponent {\r\n    @Input() label: string;\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { LanguageCode } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-language-selector',\r\n    templateUrl: './language-selector.component.html',\r\n    styleUrls: ['./language-selector.component.scss'],\r\n})\r\nexport class LanguageSelectorComponent {\r\n    @Input() currentLanguageCode: LanguageCode;\r\n    @Input() availableLanguageCodes: LanguageCode[];\r\n    @Input() disabled = false;\r\n    @Output() languageCodeChange = new EventEmitter<LanguageCode>();\r\n}\r\n","import { Directive, OnInit, TemplateRef } from '@angular/core';\r\n\r\nimport { ModalDialogComponent } from './modal-dialog.component';\r\n\r\n/**\r\n * A helper directive used to correctly embed the modal buttons in the {@link ModalDialogComponent}.\r\n */\r\n@Directive({ selector: '[vdrDialogButtons]' })\r\nexport class DialogButtonsDirective implements OnInit {\r\n    constructor(private modal: ModalDialogComponent<any>, private templateRef: TemplateRef<any>) {}\r\n\r\n    ngOnInit() {\r\n        // setTimeout due to https://github.com/angular/angular/issues/15634\r\n        setTimeout(() => this.modal.registerButtonsTemplate(this.templateRef));\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    Type,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\n/**\r\n * A helper component used to embed a component instance into the {@link ModalDialogComponent}\r\n */\r\n@Component({\r\n    selector: 'vdr-dialog-component-outlet',\r\n    template: ``,\r\n})\r\nexport class DialogComponentOutletComponent implements OnInit {\r\n    @Input() component: Type<any>;\r\n    @Output() create = new EventEmitter<any>();\r\n\r\n    constructor(\r\n        private viewContainerRef: ViewContainerRef,\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(this.component);\r\n        const componentRef = this.viewContainerRef.createComponent(factory);\r\n        this.create.emit(componentRef.instance);\r\n    }\r\n}\r\n","import { Directive, OnInit, TemplateRef } from '@angular/core';\r\n\r\nimport { ModalDialogComponent } from './modal-dialog.component';\r\n\r\n/**\r\n * A helper directive used to correctly embed the modal title in the {@link ModalDialogComponent}.\r\n */\r\n@Directive({ selector: '[vdrDialogTitle]' })\r\nexport class DialogTitleDirective implements OnInit {\r\n    constructor(private modal: ModalDialogComponent<any>, private templateRef: TemplateRef<any>) {}\r\n\r\n    ngOnInit() {\r\n        // setTimeout due to https://github.com/angular/angular/issues/15634\r\n        setTimeout(() => this.modal.registerTitleTemplate(this.templateRef));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, Optional, SkipSelf } from '@angular/core';\r\n\r\n/**\r\n * This component displays a plain JavaScript object as an expandable tree.\r\n */\r\n@Component({\r\n    selector: 'vdr-object-tree',\r\n    templateUrl: './object-tree.component.html',\r\n    styleUrls: ['./object-tree.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ObjectTreeComponent implements OnInit {\r\n    @Input() value: { [key: string]: any } | string;\r\n    @Input() isArrayItem = false;\r\n    depth: number;\r\n    expanded: boolean;\r\n    valueIsArray: boolean;\r\n    entries: Array<{ key: string; value: any }>;\r\n    constructor(@Optional() @SkipSelf() parent: ObjectTreeComponent) {\r\n        if (parent) {\r\n            this.depth = parent.depth + 1;\r\n        } else {\r\n            this.depth = 0;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.entries = this.getEntries(this.value);\r\n        this.expanded = this.depth === 0 || this.isArrayItem;\r\n        this.valueIsArray = Object.keys(this.value).every(v => Number.isInteger(+v));\r\n    }\r\n\r\n    isObject(value: any): boolean {\r\n        return typeof value === 'object' && value !== null;\r\n    }\r\n\r\n    private getEntries(inputValue: { [key: string]: any } | string): Array<{ key: string; value: any }> {\r\n        if (typeof inputValue === 'string') {\r\n            return [{ key: '', value: inputValue }];\r\n        }\r\n        return Object.entries(inputValue).map(([key, value]) => ({ key, value }));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-order-state-label',\r\n    templateUrl: './order-state-label.component.html',\r\n    styleUrls: ['./order-state-label.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderStateLabelComponent {\r\n    @Input() state: string;\r\n\r\n    get chipColorType() {\r\n        switch (this.state) {\r\n            case 'AddingItems':\r\n            case 'ArrangingPayment':\r\n                return '';\r\n            case 'Delivered':\r\n                return 'success';\r\n            case 'Cancelled':\r\n                return 'error';\r\n            case 'PaymentAuthorized':\r\n            case 'PaymentSettled':\r\n            case 'PartiallyDelivered':\r\n            case 'PartiallyShipped':\r\n            case 'Shipped':\r\n            default:\r\n                return 'warning';\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-pagination-controls',\r\n    templateUrl: './pagination-controls.component.html',\r\n    styleUrls: ['./pagination-controls.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationControlsComponent {\r\n    @Input() currentPage: number;\r\n    @Input() itemsPerPage: number;\r\n    @Input() totalItems: number;\r\n    @Output() pageChange = new EventEmitter<number>();\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\nimport { concat, merge, Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, mapTo, switchMap, tap, throttleTime } from 'rxjs/operators';\r\n\r\nimport { ProductSelectorSearch } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n@Component({\r\n    selector: 'vdr-product-selector',\r\n    templateUrl: './product-selector.component.html',\r\n    styleUrls: ['./product-selector.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductSelectorComponent implements OnInit {\r\n    searchInput$ = new Subject<string>();\r\n    searchLoading = false;\r\n    searchResults$: Observable<ProductSelectorSearch.Items[]>;\r\n    @Output() productSelected = new EventEmitter<ProductSelectorSearch.Items>();\r\n\r\n    @ViewChild('autoComplete', { static: true })\r\n    private ngSelect: NgSelectComponent;\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.initSearchResults();\r\n    }\r\n\r\n    private initSearchResults() {\r\n        const searchItems$ = this.searchInput$.pipe(\r\n            debounceTime(200),\r\n            distinctUntilChanged(),\r\n            tap(() => (this.searchLoading = true)),\r\n            switchMap(term => {\r\n                if (!term) {\r\n                    return of([]);\r\n                }\r\n                return this.dataService.product\r\n                    .productSelectorSearch(term, 10)\r\n                    .mapSingle(result => result.search.items);\r\n            }),\r\n            tap(() => (this.searchLoading = false)),\r\n        );\r\n\r\n        const clear$ = this.productSelected.pipe(mapTo([]));\r\n        this.searchResults$ = concat(of([]), merge(searchItems$, clear$));\r\n    }\r\n\r\n    selectResult(product?: ProductSelectorSearch.Items) {\r\n        if (product) {\r\n            this.productSelected.emit(product);\r\n            this.ngSelect.clearModel();\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Dialog } from '../../../../providers/modal/modal.service';\r\n\r\nexport interface ExternalImageAttrs {\r\n    src: string;\r\n    title: string;\r\n    alt: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-external-image-dialog',\r\n    templateUrl: './external-image-dialog.component.html',\r\n    styleUrls: ['./external-image-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ExternalImageDialogComponent implements OnInit, Dialog<ExternalImageAttrs> {\r\n    form: FormGroup;\r\n\r\n    resolveWith: (result?: ExternalImageAttrs) => void;\r\n    previewLoaded = false;\r\n    existing?: ExternalImageAttrs;\r\n\r\n    ngOnInit(): void {\r\n        this.form = new FormGroup({\r\n            src: new FormControl(this.existing ? this.existing.src : '', Validators.required),\r\n            title: new FormControl(this.existing ? this.existing.title : ''),\r\n            alt: new FormControl(this.existing ? this.existing.alt : ''),\r\n        });\r\n    }\r\n\r\n    select() {\r\n        this.resolveWith(this.form.value);\r\n    }\r\n\r\n    onImageLoad(event: Event) {\r\n        this.previewLoaded = true;\r\n    }\r\n\r\n    onImageError(event: Event) {\r\n        this.previewLoaded = false;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Dialog } from '../../../../providers/modal/modal.service';\r\n\r\nexport interface LinkAttrs {\r\n    href: string;\r\n    title: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-link-dialog',\r\n    templateUrl: './link-dialog.component.html',\r\n    styleUrls: ['./link-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LinkDialogComponent implements OnInit, Dialog<LinkAttrs> {\r\n    form: FormGroup;\r\n\r\n    resolveWith: (result?: LinkAttrs) => void;\r\n    existing?: LinkAttrs;\r\n\r\n    ngOnInit(): void {\r\n        this.form = new FormGroup({\r\n            href: new FormControl(this.existing ? this.existing.href : '', Validators.required),\r\n            title: new FormControl(this.existing ? this.existing.title : ''),\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        this.resolveWith({\r\n            title: '',\r\n            href: '',\r\n        });\r\n    }\r\n\r\n    select() {\r\n        this.resolveWith(this.form.value);\r\n    }\r\n}\r\n","import {\r\n    ellipsis,\r\n    emDash,\r\n    inputRules,\r\n    smartQuotes,\r\n    textblockTypeInputRule,\r\n    wrappingInputRule,\r\n} from 'prosemirror-inputrules';\r\nimport { NodeType, Schema } from 'prosemirror-model';\r\nimport { Plugin } from 'prosemirror-state';\r\n\r\n// : (NodeType) → InputRule\r\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\r\n// at the start of a textblock into a blockquote.\r\nexport function blockQuoteRule(nodeType) {\r\n    return wrappingInputRule(/^\\s*>\\s$/, nodeType);\r\n}\r\n\r\n// : (NodeType) → InputRule\r\n// Given a list node type, returns an input rule that turns a number\r\n// followed by a dot at the start of a textblock into an ordered list.\r\nexport function orderedListRule(nodeType) {\r\n    return wrappingInputRule(\r\n        /^(\\d+)\\.\\s$/,\r\n        nodeType,\r\n        match => ({ order: +match[1] }),\r\n        (match, node) => node.childCount + node.attrs.order === +match[1],\r\n    );\r\n}\r\n\r\n// : (NodeType) → InputRule\r\n// Given a list node type, returns an input rule that turns a bullet\r\n// (dash, plush, or asterisk) at the start of a textblock into a\r\n// bullet list.\r\nexport function bulletListRule(nodeType) {\r\n    return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\r\n}\r\n\r\n// : (NodeType) → InputRule\r\n// Given a code block node type, returns an input rule that turns a\r\n// textblock starting with three backticks into a code block.\r\nexport function codeBlockRule(nodeType) {\r\n    return textblockTypeInputRule(/^```$/, nodeType);\r\n}\r\n\r\n// : (NodeType, number) → InputRule\r\n// Given a node type and a maximum level, creates an input rule that\r\n// turns up to that number of `#` characters followed by a space at\r\n// the start of a textblock into a heading whose level corresponds to\r\n// the number of `#` signs.\r\nexport function headingRule(nodeType, maxLevel) {\r\n    return textblockTypeInputRule(new RegExp('^(#{1,' + maxLevel + '})\\\\s$'), nodeType, match => ({\r\n        level: match[1].length,\r\n    }));\r\n}\r\n\r\n// : (Schema) → Plugin\r\n// A set of input rules for creating the basic block quotes, lists,\r\n// code blocks, and heading.\r\nexport function buildInputRules(schema: Schema): Plugin {\r\n    const rules = smartQuotes.concat(ellipsis, emDash);\r\n    let type: NodeType;\r\n    // tslint:disable:no-conditional-assignment\r\n    if ((type = schema.nodes.blockquote)) {\r\n        rules.push(blockQuoteRule(type));\r\n    }\r\n    if ((type = schema.nodes.ordered_list)) {\r\n        rules.push(orderedListRule(type));\r\n    }\r\n    if ((type = schema.nodes.bullet_list)) {\r\n        rules.push(bulletListRule(type));\r\n    }\r\n    if ((type = schema.nodes.code_block)) {\r\n        rules.push(codeBlockRule(type));\r\n    }\r\n    if ((type = schema.nodes.heading)) {\r\n        rules.push(headingRule(type, 6));\r\n    }\r\n    return inputRules({ rules });\r\n}\r\n","import {\r\n    chainCommands,\r\n    exitCode,\r\n    joinDown,\r\n    joinUp,\r\n    lift,\r\n    selectParentNode,\r\n    setBlockType,\r\n    toggleMark,\r\n    wrapIn,\r\n} from 'prosemirror-commands';\r\nimport { redo, undo } from 'prosemirror-history';\r\nimport { undoInputRule } from 'prosemirror-inputrules';\r\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\r\nimport { liftListItem, sinkListItem, splitListItem, wrapInList } from 'prosemirror-schema-list';\r\n\r\nimport { Keymap } from './types';\r\n\r\nconst mac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\r\n\r\n// :: (Schema, ?Object) → Object\r\n// Inspect the given schema looking for marks and nodes from the\r\n// basic schema, and if found, add key bindings related to them.\r\n// This will add:\r\n//\r\n// * **Mod-b** for toggling [strong](#schema-basic.StrongMark)\r\n// * **Mod-i** for toggling [emphasis](#schema-basic.EmMark)\r\n// * **Mod-`** for toggling [code font](#schema-basic.CodeMark)\r\n// * **Ctrl-Shift-0** for making the current textblock a paragraph\r\n// * **Ctrl-Shift-1** to **Ctrl-Shift-Digit6** for making the current\r\n//   textblock a heading of the corresponding level\r\n// * **Ctrl-Shift-Backslash** to make the current textblock a code block\r\n// * **Ctrl-Shift-8** to wrap the selection in an ordered list\r\n// * **Ctrl-Shift-9** to wrap the selection in a bullet list\r\n// * **Ctrl->** to wrap the selection in a block quote\r\n// * **Enter** to split a non-empty textblock in a list item while at\r\n//   the same time splitting the list item\r\n// * **Mod-Enter** to insert a hard break\r\n// * **Mod-_** to insert a horizontal rule\r\n// * **Backspace** to undo an input rule\r\n// * **Alt-ArrowUp** to `joinUp`\r\n// * **Alt-ArrowDown** to `joinDown`\r\n// * **Mod-BracketLeft** to `lift`\r\n// * **Escape** to `selectParentNode`\r\n//\r\n// You can suppress or map these bindings by passing a `mapKeys`\r\n// argument, which maps key names (say `\"Mod-B\"` to either `false`, to\r\n// remove the binding, or a new key name string.\r\nexport function buildKeymap(schema: Schema, mapKeys?: Keymap) {\r\n    const keys = {};\r\n    let type: MarkType | NodeType;\r\n    function bind(key: string, cmd: (...args: any[]) => boolean) {\r\n        if (mapKeys) {\r\n            const mapped = mapKeys[key];\r\n            if (mapped === false) {\r\n                return;\r\n            }\r\n            if (mapped) {\r\n                key = mapped;\r\n            }\r\n        }\r\n        keys[key] = cmd;\r\n    }\r\n\r\n    bind('Mod-z', undo);\r\n    bind('Shift-Mod-z', redo);\r\n    bind('Backspace', undoInputRule);\r\n    if (!mac) {\r\n        bind('Mod-y', redo);\r\n    }\r\n\r\n    bind('Alt-ArrowUp', joinUp);\r\n    bind('Alt-ArrowDown', joinDown);\r\n    bind('Mod-BracketLeft', lift);\r\n    bind('Escape', selectParentNode);\r\n\r\n    // tslint:disable:no-conditional-assignment\r\n    if ((type = schema.marks.strong)) {\r\n        bind('Mod-b', toggleMark(type));\r\n        bind('Mod-B', toggleMark(type));\r\n    }\r\n    if ((type = schema.marks.em)) {\r\n        bind('Mod-i', toggleMark(type));\r\n        bind('Mod-I', toggleMark(type));\r\n    }\r\n    if ((type = schema.marks.code)) {\r\n        bind('Mod-`', toggleMark(type));\r\n    }\r\n\r\n    if ((type = schema.nodes.bullet_list)) {\r\n        bind('Shift-Ctrl-8', wrapInList(type));\r\n    }\r\n    if ((type = schema.nodes.ordered_list)) {\r\n        bind('Shift-Ctrl-9', wrapInList(type));\r\n    }\r\n    if ((type = schema.nodes.blockquote)) {\r\n        bind('Ctrl->', wrapIn(type));\r\n    }\r\n    if ((type = schema.nodes.hard_break)) {\r\n        const br = type;\r\n        const cmd = chainCommands(exitCode, (state, dispatch) => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            dispatch!(state.tr.replaceSelectionWith(br.create()).scrollIntoView());\r\n            return true;\r\n        });\r\n        bind('Mod-Enter', cmd);\r\n        bind('Shift-Enter', cmd);\r\n        if (mac) {\r\n            bind('Ctrl-Enter', cmd);\r\n        }\r\n    }\r\n    if ((type = schema.nodes.list_item)) {\r\n        bind('Enter', splitListItem(type));\r\n        bind('Mod-[', liftListItem(type));\r\n        bind('Mod-]', sinkListItem(type));\r\n    }\r\n    if ((type = schema.nodes.paragraph)) {\r\n        bind('Shift-Ctrl-0', setBlockType(type));\r\n    }\r\n    if ((type = schema.nodes.code_block)) {\r\n        bind('Shift-Ctrl-\\\\', setBlockType(type));\r\n    }\r\n    if ((type = schema.nodes.heading)) {\r\n        for (let i = 1; i <= 6; i++) {\r\n            bind('Shift-Ctrl-' + i, setBlockType(type, { level: i }));\r\n        }\r\n    }\r\n    if ((type = schema.nodes.horizontal_rule)) {\r\n        const hr = type;\r\n        bind('Mod-_', (state, dispatch) => {\r\n            dispatch(state.tr.replaceSelectionWith(hr.create()).scrollIntoView());\r\n            return true;\r\n        });\r\n    }\r\n\r\n    return keys;\r\n}\r\n","import { NodeType } from 'prosemirror-model';\r\nimport { EditorState } from 'prosemirror-state';\r\n\r\nexport function markActive(state, type) {\r\n    const { from, $from, to, empty } = state.selection;\r\n    if (empty) {\r\n        return type.isInSet(state.storedMarks || $from.marks());\r\n    } else {\r\n        return state.doc.rangeHasMark(from, to, type);\r\n    }\r\n}\r\n\r\nexport function canInsert(state: EditorState, nodeType: NodeType): boolean {\r\n    const $from = state.selection.$from;\r\n    for (let d = $from.depth; d >= 0; d--) {\r\n        const index = $from.index(d);\r\n        if ($from.node(d).canReplaceWith(index, index, nodeType)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","import { MenuItem } from 'prosemirror-menu';\r\nimport { NodeType } from 'prosemirror-model';\r\nimport { EditorState, NodeSelection } from 'prosemirror-state';\r\nimport { EditorView } from 'prosemirror-view';\r\n\r\nimport { ModalService } from '../../../../../providers/modal/modal.service';\r\nimport {\r\n    ExternalImageAttrs,\r\n    ExternalImageDialogComponent,\r\n} from '../../external-image-dialog/external-image-dialog.component';\r\n\r\nimport { canInsert } from './menu-common';\r\n\r\nexport function insertImageItem(nodeType: NodeType, modalService: ModalService) {\r\n    return new MenuItem({\r\n        title: 'Insert image',\r\n        label: 'Image',\r\n        class: '',\r\n        css: '',\r\n        enable(state: EditorState) {\r\n            return canInsert(state, nodeType);\r\n        },\r\n        run(state: EditorState, _, view: EditorView) {\r\n            let attrs: ExternalImageAttrs | undefined;\r\n            if (state.selection instanceof NodeSelection && state.selection.node.type === nodeType) {\r\n                attrs = state.selection.node.attrs as ExternalImageAttrs;\r\n            }\r\n            modalService\r\n                .fromComponent(ExternalImageDialogComponent, {\r\n                    closable: true,\r\n                    locals: {\r\n                        existing: attrs,\r\n                    },\r\n                })\r\n                .subscribe(result => {\r\n                    if (result) {\r\n                        // tslint:disable-next-line:no-non-null-assertion\r\n                        view.dispatch(view.state.tr.replaceSelectionWith(nodeType.createAndFill(result)!));\r\n                    }\r\n                    view.focus();\r\n                });\r\n        },\r\n    });\r\n}\r\n","import { toggleMark } from 'prosemirror-commands';\r\nimport { icons, MenuItem } from 'prosemirror-menu';\r\nimport { MarkType } from 'prosemirror-model';\r\nimport { EditorState, TextSelection } from 'prosemirror-state';\r\n\r\nimport { ModalService } from '../../../../../providers/modal/modal.service';\r\nimport { LinkAttrs, LinkDialogComponent } from '../../link-dialog/link-dialog.component';\r\n\r\nimport { markActive } from './menu-common';\r\n\r\nfunction selectionIsWithinLink(state: EditorState, anchor: number, head: number): boolean {\r\n    const { doc } = state;\r\n    const headLink = doc\r\n        .resolve(head)\r\n        .marks()\r\n        .find(m => m.type.name === 'link');\r\n    const anchorLink = doc\r\n        .resolve(anchor)\r\n        .marks()\r\n        .find(m => m.type.name === 'link');\r\n    if (headLink && anchorLink && headLink.eq(anchorLink)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function linkItem(linkMark: MarkType, modalService: ModalService) {\r\n    return new MenuItem({\r\n        title: 'Add or remove link',\r\n        icon: icons.link,\r\n        class: '',\r\n        css: '',\r\n        active(state) {\r\n            return markActive(state, linkMark);\r\n        },\r\n        enable(state) {\r\n            const { selection } = state;\r\n            return !selection.empty || selectionIsWithinLink(state, selection.anchor, selection.head);\r\n        },\r\n        run(state: EditorState, dispatch, view) {\r\n            let attrs: LinkAttrs | undefined;\r\n            const { selection, doc } = state;\r\n            if (\r\n                selection instanceof TextSelection &&\r\n                selectionIsWithinLink(state, selection.anchor + 1, selection.head - 1)\r\n            ) {\r\n                const mark = doc\r\n                    .resolve(selection.anchor + 1)\r\n                    .marks()\r\n                    .find(m => m.type.name === 'link');\r\n                if (mark) {\r\n                    attrs = mark.attrs as LinkAttrs;\r\n                }\r\n            }\r\n            modalService\r\n                .fromComponent(LinkDialogComponent, {\r\n                    closable: true,\r\n                    locals: {\r\n                        existing: attrs,\r\n                    },\r\n                })\r\n                .subscribe(result => {\r\n                    let tr = state.tr;\r\n                    if (result) {\r\n                        const { $from, $to } = selection.ranges[0];\r\n                        tr = tr.removeMark($from.pos, $to.pos, linkMark);\r\n                        if (result.href !== '') {\r\n                            tr = tr.addMark($from.pos, $to.pos, linkMark.create(result));\r\n                        }\r\n                    }\r\n                    dispatch(tr.scrollIntoView());\r\n                    view.focus();\r\n                });\r\n            return true;\r\n        },\r\n    });\r\n}\r\n","import { toggleMark } from 'prosemirror-commands';\r\nimport {\r\n    blockTypeItem,\r\n    Dropdown,\r\n    DropdownSubmenu,\r\n    icons,\r\n    joinUpItem,\r\n    liftItem,\r\n    MenuItem,\r\n    redoItem,\r\n    selectParentNodeItem,\r\n    undoItem,\r\n    wrapItem,\r\n} from 'prosemirror-menu';\r\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\r\nimport { wrapInList } from 'prosemirror-schema-list';\r\nimport { EditorState } from 'prosemirror-state';\r\n\r\nimport { ModalService } from '../../../../../providers/modal/modal.service';\r\n\r\nimport { insertImageItem } from './images';\r\nimport { linkItem } from './links';\r\nimport { canInsert, markActive } from './menu-common';\r\n\r\n// Helpers to create specific types of items\r\n\r\nfunction cmdItem(cmd: (...args: any[]) => void, options: Record<string, any>) {\r\n    const passedOptions = {\r\n        label: options.title,\r\n        run: cmd,\r\n    };\r\n    // tslint:disable-next-line:forin\r\n    for (const prop in options) {\r\n        passedOptions[prop] = options[prop];\r\n    }\r\n    if ((!options.enable || options.enable === true) && !options.select) {\r\n        passedOptions[options.enable ? 'enable' : 'select'] = state => cmd(state);\r\n    }\r\n\r\n    return new MenuItem(passedOptions as any);\r\n}\r\n\r\nfunction markItem(markType, options) {\r\n    const passedOptions = {\r\n        active(state) {\r\n            return markActive(state, markType);\r\n        },\r\n        enable: true,\r\n    };\r\n    // tslint:disable-next-line:forin\r\n    for (const prop in options) {\r\n        passedOptions[prop] = options[prop];\r\n    }\r\n    return cmdItem(toggleMark(markType), passedOptions);\r\n}\r\n\r\nfunction wrapListItem(nodeType, options) {\r\n    return cmdItem(wrapInList(nodeType, options.attrs), options);\r\n}\r\n\r\n// :: (Schema) → Object\r\n// Given a schema, look for default mark and node types in it and\r\n// return an object with relevant menu items relating to those marks:\r\n//\r\n// **`toggleStrong`**`: MenuItem`\r\n//   : A menu item to toggle the [strong mark](#schema-basic.StrongMark).\r\n//\r\n// **`toggleEm`**`: MenuItem`\r\n//   : A menu item to toggle the [emphasis mark](#schema-basic.EmMark).\r\n//\r\n// **`toggleCode`**`: MenuItem`\r\n//   : A menu item to toggle the [code font mark](#schema-basic.CodeMark).\r\n//\r\n// **`toggleLink`**`: MenuItem`\r\n//   : A menu item to toggle the [link mark](#schema-basic.LinkMark).\r\n//\r\n// **`insertImage`**`: MenuItem`\r\n//   : A menu item to insert an [image](#schema-basic.Image).\r\n//\r\n// **`wrapBulletList`**`: MenuItem`\r\n//   : A menu item to wrap the selection in a [bullet list](#schema-list.BulletList).\r\n//\r\n// **`wrapOrderedList`**`: MenuItem`\r\n//   : A menu item to wrap the selection in an [ordered list](#schema-list.OrderedList).\r\n//\r\n// **`wrapBlockQuote`**`: MenuItem`\r\n//   : A menu item to wrap the selection in a [block quote](#schema-basic.BlockQuote).\r\n//\r\n// **`makeParagraph`**`: MenuItem`\r\n//   : A menu item to set the current textblock to be a normal\r\n//     [paragraph](#schema-basic.Paragraph).\r\n//\r\n// **`makeCodeBlock`**`: MenuItem`\r\n//   : A menu item to set the current textblock to be a\r\n//     [code block](#schema-basic.CodeBlock).\r\n//\r\n// **`makeHead[N]`**`: MenuItem`\r\n//   : Where _N_ is 1 to 6. Menu items to set the current textblock to\r\n//     be a [heading](#schema-basic.Heading) of level _N_.\r\n//\r\n// **`insertHorizontalRule`**`: MenuItem`\r\n//   : A menu item to insert a horizontal rule.\r\n//\r\n// The return value also contains some prefabricated menu elements and\r\n// menus, that you can use instead of composing your own menu from\r\n// scratch:\r\n//\r\n// **`insertMenu`**`: Dropdown`\r\n//   : A dropdown containing the `insertImage` and\r\n//     `insertHorizontalRule` items.\r\n//\r\n// **`typeMenu`**`: Dropdown`\r\n//   : A dropdown containing the items for making the current\r\n//     textblock a paragraph, code block, or heading.\r\n//\r\n// **`fullMenu`**`: [[MenuElement]]`\r\n//   : An array of arrays of menu elements for use as the full menu\r\n//     for, for example the [menu bar](https://github.com/prosemirror/prosemirror-menu#user-content-menubar).\r\nexport function buildMenuItems(schema: Schema, modalService: ModalService) {\r\n    const r: Record<string, any> = {};\r\n    let type: MarkType | NodeType;\r\n    // tslint:disable:no-conditional-assignment\r\n    if ((type = schema.marks.strong)) {\r\n        r.toggleStrong = markItem(type, { title: 'Toggle strong style', icon: icons.strong });\r\n    }\r\n    if ((type = schema.marks.em)) {\r\n        r.toggleEm = markItem(type, { title: 'Toggle emphasis', icon: icons.em });\r\n    }\r\n    if ((type = schema.marks.code)) {\r\n        r.toggleCode = markItem(type, { title: 'Toggle code font', icon: icons.code });\r\n    }\r\n    if ((type = schema.marks.link)) {\r\n        r.toggleLink = linkItem(type, modalService);\r\n    }\r\n\r\n    if ((type = schema.nodes.image)) {\r\n        r.insertImage = insertImageItem(type, modalService);\r\n    }\r\n    if ((type = schema.nodes.bullet_list)) {\r\n        r.wrapBulletList = wrapListItem(type, {\r\n            title: 'Wrap in bullet list',\r\n            icon: icons.bulletList,\r\n        });\r\n    }\r\n    if ((type = schema.nodes.ordered_list)) {\r\n        r.wrapOrderedList = wrapListItem(type, {\r\n            title: 'Wrap in ordered list',\r\n            icon: icons.orderedList,\r\n        });\r\n    }\r\n    if ((type = schema.nodes.blockquote)) {\r\n        r.wrapBlockQuote = wrapItem(type, {\r\n            title: 'Wrap in block quote',\r\n            icon: icons.blockquote,\r\n        });\r\n    }\r\n    if ((type = schema.nodes.paragraph)) {\r\n        r.makeParagraph = blockTypeItem(type, {\r\n            title: 'Change to paragraph',\r\n            label: 'Plain',\r\n        });\r\n    }\r\n    if ((type = schema.nodes.code_block)) {\r\n        r.makeCodeBlock = blockTypeItem(type, {\r\n            title: 'Change to code block',\r\n            label: 'Code',\r\n        });\r\n    }\r\n    if ((type = schema.nodes.heading)) {\r\n        for (let i = 1; i <= 10; i++) {\r\n            r['makeHead' + i] = blockTypeItem(type, {\r\n                title: 'Change to heading ' + i,\r\n                label: 'Level ' + i,\r\n                attrs: { level: i },\r\n            });\r\n        }\r\n    }\r\n    if ((type = schema.nodes.horizontal_rule)) {\r\n        const hr = type;\r\n        r.insertHorizontalRule = new MenuItem({\r\n            title: 'Insert horizontal rule',\r\n            label: 'Horizontal rule',\r\n            class: '',\r\n            css: '',\r\n            enable(state) {\r\n                return canInsert(state, hr);\r\n            },\r\n            run(state: EditorState, dispatch) {\r\n                dispatch(state.tr.replaceSelectionWith(hr.create()));\r\n            },\r\n        });\r\n    }\r\n\r\n    const cut = <T>(arr: T[]): T[] => arr.filter(x => x);\r\n    r.insertMenu = new Dropdown(cut([r.insertImage, r.insertHorizontalRule]), { label: 'Insert' });\r\n    r.typeMenu = new Dropdown(\r\n        cut([\r\n            r.makeParagraph,\r\n            r.makeCodeBlock,\r\n            r.makeHead1 &&\r\n                new DropdownSubmenu(\r\n                    cut([r.makeHead1, r.makeHead2, r.makeHead3, r.makeHead4, r.makeHead5, r.makeHead6]),\r\n                    { label: 'Heading' },\r\n                ),\r\n        ]),\r\n        { label: 'Type...' },\r\n    );\r\n\r\n    const inlineMenu = cut([r.toggleStrong, r.toggleEm, r.toggleLink]);\r\n    r.inlineMenu = [inlineMenu];\r\n    r.blockMenu = [\r\n        cut([\r\n            r.wrapBulletList,\r\n            r.wrapOrderedList,\r\n            r.wrapBlockQuote,\r\n            joinUpItem,\r\n            liftItem,\r\n            selectParentNodeItem,\r\n        ]),\r\n    ];\r\n    r.fullMenu = [inlineMenu].concat([[r.insertMenu, r.typeMenu]], [[undoItem, redoItem]], r.blockMenu);\r\n\r\n    return r;\r\n}\r\n","import { MarkType, ResolvedPos } from 'prosemirror-model';\r\n\r\n/**\r\n * Retrieve the start and end position of a mark\r\n * \"Borrowed\" from [tiptap](https://github.com/scrumpy/tiptap)\r\n */\r\nexport const getMarkRange = (\r\n    pmPosition: ResolvedPos | null = null,\r\n    type: MarkType | null | undefined = null,\r\n): { from: number; to: number } | false => {\r\n    if (!pmPosition || !type) {\r\n        return false;\r\n    }\r\n\r\n    const start = pmPosition.parent.childAfter(pmPosition.parentOffset);\r\n\r\n    if (!start.node) {\r\n        return false;\r\n    }\r\n\r\n    const mark = start.node.marks.find(({ type: markType }) => markType === type);\r\n    if (!mark) {\r\n        return false;\r\n    }\r\n\r\n    let startIndex = pmPosition.index();\r\n    let startPos = pmPosition.start() + start.offset;\r\n    while (startIndex > 0 && mark.isInSet(pmPosition.parent.child(startIndex - 1).marks)) {\r\n        startIndex -= 1;\r\n        startPos -= pmPosition.parent.child(startIndex).nodeSize;\r\n    }\r\n\r\n    const endPos = startPos + start.node.nodeSize;\r\n\r\n    return { from: startPos, to: endPos };\r\n};\r\n","import { Plugin, TextSelection } from 'prosemirror-state';\r\n\r\nimport { getMarkRange } from '../utils';\r\n\r\n/**\r\n * Causes the entire link to be selected when clicked.\r\n */\r\nexport const linkSelectPlugin = new Plugin({\r\n    props: {\r\n        handleClick(view, pos) {\r\n            const { doc, tr, schema } = view.state;\r\n            const range = getMarkRange(doc.resolve(pos), schema.marks.link);\r\n            if (!range) {\r\n                return false;\r\n            }\r\n\r\n            const $start = doc.resolve(range.from);\r\n            const $end = doc.resolve(range.to);\r\n            const transaction = tr.setSelection(new TextSelection($start, $end));\r\n\r\n            view.dispatch(transaction);\r\n            return true;\r\n        },\r\n    },\r\n});\r\n","import { Injectable } from '@angular/core';\r\nimport { baseKeymap } from 'prosemirror-commands';\r\nimport { dropCursor } from 'prosemirror-dropcursor';\r\nimport { gapCursor } from 'prosemirror-gapcursor';\r\nimport { history } from 'prosemirror-history';\r\nimport { keymap } from 'prosemirror-keymap';\r\nimport { menuBar } from 'prosemirror-menu';\r\nimport { DOMParser, DOMSerializer, Schema } from 'prosemirror-model';\r\nimport { schema } from 'prosemirror-schema-basic';\r\nimport { addListNodes } from 'prosemirror-schema-list';\r\nimport { EditorState, Plugin } from 'prosemirror-state';\r\nimport { EditorView } from 'prosemirror-view';\r\n\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\n\r\nimport { buildInputRules } from './inputrules';\r\nimport { buildKeymap } from './keymap';\r\nimport { buildMenuItems } from './menu/menu';\r\nimport { linkSelectPlugin } from './plugins/link-select-plugin';\r\nimport { SetupOptions } from './types';\r\n\r\nexport interface CreateEditorViewOptions {\r\n    onTextInput: (content: string) => void;\r\n    element: HTMLElement;\r\n    isReadOnly: () => boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class ProsemirrorService {\r\n    editorView: EditorView;\r\n\r\n    // Mix the nodes from prosemirror-schema-list into the basic schema to\r\n    // create a schema with list support.\r\n    private mySchema = new Schema({\r\n        nodes: addListNodes(schema.spec.nodes, 'paragraph block*', 'block'),\r\n        marks: schema.spec.marks,\r\n    });\r\n    private enabled = true;\r\n\r\n    constructor(private modalService: ModalService) {}\r\n\r\n    createEditorView(options: CreateEditorViewOptions) {\r\n        this.editorView = new EditorView<Schema>(options.element, {\r\n            state: this.getStateFromText(''),\r\n            dispatchTransaction: tr => {\r\n                if (!this.enabled) {\r\n                    return;\r\n                }\r\n                this.editorView.updateState(this.editorView.state.apply(tr));\r\n                if (tr.docChanged) {\r\n                    const content = this.getTextFromState(this.editorView.state);\r\n                    options.onTextInput(content);\r\n                }\r\n            },\r\n            editable: () => options.isReadOnly(),\r\n        });\r\n    }\r\n\r\n    update(text: string) {\r\n        if (this.editorView) {\r\n            const state = this.getStateFromText(text);\r\n            if (document.body.contains(this.editorView.dom)) {\r\n                this.editorView.updateState(state);\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this.editorView) {\r\n            this.editorView.destroy();\r\n        }\r\n    }\r\n\r\n    setEnabled(enabled: boolean) {\r\n        if (this.editorView) {\r\n            this.enabled = enabled;\r\n            // Updating the state causes ProseMirror to check the\r\n            // `editable()` function from the contructor config object\r\n            // newly.\r\n            this.editorView.updateState(this.editorView.state);\r\n        }\r\n    }\r\n\r\n    private getStateFromText(text: string): EditorState {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = text;\r\n        return EditorState.create({\r\n            doc: DOMParser.fromSchema(this.mySchema).parse(div),\r\n            plugins: this.configurePlugins({ schema: this.mySchema, floatingMenu: false }),\r\n        });\r\n    }\r\n\r\n    private getTextFromState(state: EditorState): string {\r\n        const div = document.createElement('div');\r\n        const fragment = DOMSerializer.fromSchema(this.mySchema).serializeFragment(state.doc.content);\r\n\r\n        div.appendChild(fragment);\r\n\r\n        return div.innerHTML;\r\n    }\r\n\r\n    private configurePlugins(options: SetupOptions) {\r\n        const plugins = [\r\n            buildInputRules(options.schema),\r\n            keymap(buildKeymap(options.schema, options.mapKeys)),\r\n            keymap(baseKeymap),\r\n            dropCursor(),\r\n            gapCursor(),\r\n            linkSelectPlugin,\r\n        ];\r\n        if (options.menuBar !== false) {\r\n            plugins.push(\r\n                menuBar({\r\n                    floating: options.floatingMenu !== false,\r\n                    content:\r\n                        options.menuContent || buildMenuItems(options.schema, this.modalService).fullMenu,\r\n                }),\r\n            );\r\n        }\r\n        if (options.history !== false) {\r\n            plugins.push(history());\r\n        }\r\n\r\n        return plugins.concat(\r\n            new Plugin({\r\n                props: {\r\n                    attributes: { class: 'vdr-prosemirror' },\r\n                },\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    HostBinding,\r\n    Input,\r\n    OnDestroy,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { ProsemirrorService } from './prosemirror/prosemirror.service';\r\n\r\n/**\r\n * A rich text (HTML) editor based on Trix (https://github.com/basecamp/trix)\r\n */\r\n@Component({\r\n    selector: 'vdr-rich-text-editor',\r\n    templateUrl: './rich-text-editor.component.html',\r\n    styleUrls: ['./rich-text-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: RichTextEditorComponent,\r\n            multi: true,\r\n        },\r\n        ProsemirrorService,\r\n    ],\r\n})\r\nexport class RichTextEditorComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\r\n    @Input() label: string;\r\n    @Input() set readonly(value: any) {\r\n        this._readonly = !!value;\r\n        this.prosemirrorService.setEnabled(!this._readonly);\r\n    }\r\n    @HostBinding('class.readonly')\r\n    _readonly = false;\r\n\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    private value: string;\r\n\r\n    @ViewChild('editor', { static: true }) private editorEl: ElementRef<HTMLDivElement>;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef, private prosemirrorService: ProsemirrorService) {}\r\n\r\n    ngAfterViewInit() {\r\n        this.prosemirrorService.createEditorView({\r\n            element: this.editorEl.nativeElement,\r\n            onTextInput: content => {\r\n                this.onChange(content);\r\n                this.changeDetector.markForCheck();\r\n            },\r\n            isReadOnly: () => !this._readonly,\r\n        });\r\n        if (this.value) {\r\n            this.prosemirrorService.update(this.value);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.prosemirrorService.destroy();\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.prosemirrorService.setEnabled(!isDisabled);\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n        if (this.prosemirrorService) {\r\n            this.prosemirrorService.update(value);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n/**\n * A simple, stateless toggle button for indicating selection.\n */\n@Component({\n    selector: 'vdr-select-toggle',\n    templateUrl: './select-toggle.component.html',\n    styleUrls: ['./select-toggle.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectToggleComponent {\n    @Input() size: 'small' | 'large' = 'large';\n    @Input() selected = false;\n    @Input() disabled = false;\n    @Input() label: string | undefined;\n    @Output() selectedChange = new EventEmitter<boolean>();\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n/**\r\n * A button link to be used as actions in rows of a table.\r\n */\r\n@Component({\r\n    selector: 'vdr-table-row-action',\r\n    templateUrl: './table-row-action.component.html',\r\n    styleUrls: ['./table-row-action.component.scss'],\r\n})\r\nexport class TableRowActionComponent {\r\n    @Input() linkTo: any[];\r\n    @Input() label: string;\r\n    @Input() iconShape: string;\r\n    @Input() disabled = false;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n@Component({\r\n    selector: 'vdr-tag-selector',\r\n    templateUrl: './tag-selector.component.html',\r\n    styleUrls: ['./tag-selector.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: TagSelectorComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class TagSelectorComponent implements OnInit, ControlValueAccessor {\r\n    @Input() placeholder: string | undefined;\r\n    allTags$: Observable<string[]>;\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    _value: string[];\r\n    disabled: boolean;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.allTags$ = this.dataService.product\r\n            .getTagList()\r\n            .mapStream(data => data.tags.items.map(i => i.value));\r\n    }\r\n\r\n    addTagFn(val: string) {\r\n        return val;\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    writeValue(obj: unknown): void {\r\n        if (Array.isArray(obj)) {\r\n            this._value = obj;\r\n        }\r\n    }\r\n\r\n    valueChanged(event: string[]) {\r\n        this.onChange(event);\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nexport type TimelineDisplayType = 'success' | 'error' | 'warning' | 'default' | 'muted';\r\n\r\n@Component({\r\n    selector: 'vdr-timeline-entry',\r\n    templateUrl: './timeline-entry.component.html',\r\n    styleUrls: ['./timeline-entry.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TimelineEntryComponent {\r\n    @Input() displayType: TimelineDisplayType;\r\n    @Input() createdAt: string;\r\n    @Input() name: string;\r\n    @Input() featured: boolean;\r\n    @Input() iconShape?: string | [string, string];\r\n    @Input() isLast?: boolean;\r\n    @HostBinding('class.collapsed')\r\n    @Input()\r\n    collapsed = false;\r\n    @Output() expandClick = new EventEmitter();\r\n\r\n    get timelineTitle(): string {\r\n        return this.collapsed ? _('common.expand-entries') : _('common.collapse-entries');\r\n    }\r\n\r\n    getIconShape() {\r\n        if (this.iconShape) {\r\n            return typeof this.iconShape === 'string' ? this.iconShape : this.iconShape[0];\r\n        }\r\n    }\r\n\r\n    getIconClass() {\r\n        if (this.iconShape) {\r\n            return typeof this.iconShape === 'string' ? '' : this.iconShape[1];\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-title-input',\r\n    templateUrl: './title-input.component.html',\r\n    styleUrls: ['./title-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TitleInputComponent {\r\n    @HostBinding('class.readonly')\r\n    @Input()\r\n    readonly = false;\r\n}\r\n","import { Directive, Input, Optional } from '@angular/core';\nimport { FormControl, FormControlDirective, FormControlName } from '@angular/forms';\n\n/**\n * Allows declarative binding to the \"disabled\" property of a reactive form\n * control.\n */\n@Directive({\n    selector: '[vdrDisabled]',\n})\nexport class DisabledDirective {\n    @Input('vdrDisabled') set disabled(val: boolean) {\n        const formControl = this.formControlName?.control ?? this.formControl?.form;\n        if (!formControl) {\n            return;\n        }\n        if (!!val === false) {\n            formControl.enable({ emitEvent: false });\n        } else {\n            formControl.disable({ emitEvent: false });\n        }\n    }\n\n    constructor(\n        @Optional() private formControlName: FormControlName,\n        @Optional() private formControl: FormControlDirective,\n    ) {}\n}\n","import { Directive, EmbeddedViewRef, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n/**\r\n * A base class for implementing custom *ngIf-style structural directives based on custom conditions.\r\n *\r\n * @dynamic\r\n */\r\n@Directive()\r\nexport class IfDirectiveBase<Args extends any[]> implements OnInit, OnDestroy {\r\n    protected updateArgs$ = new BehaviorSubject<Args>([] as any);\r\n    private readonly _thenTemplateRef: TemplateRef<any> | null = null;\r\n    private _elseTemplateRef: TemplateRef<any> | null = null;\r\n    private _thenViewRef: EmbeddedViewRef<any> | null = null;\r\n    private _elseViewRef: EmbeddedViewRef<any> | null = null;\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        private _viewContainer: ViewContainerRef,\r\n        templateRef: TemplateRef<any>,\r\n        private updateViewFn: (...args: Args) => Observable<boolean>,\r\n    ) {\r\n        this._thenTemplateRef = templateRef;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscription = this.updateArgs$\r\n            .pipe(switchMap(args => this.updateViewFn(...args)))\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.showThen();\r\n                } else {\r\n                    this.showElse();\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    protected setElseTemplate(templateRef: TemplateRef<any> | null) {\r\n        this.assertTemplate('vdrIfPermissionsElse', templateRef);\r\n        this._elseTemplateRef = templateRef;\r\n        this._elseViewRef = null; // clear previous view if any.\r\n    }\r\n\r\n    private showThen() {\r\n        if (!this._thenViewRef) {\r\n            this._viewContainer.clear();\r\n            this._elseViewRef = null;\r\n            if (this._thenTemplateRef) {\r\n                this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef);\r\n            }\r\n        }\r\n    }\r\n\r\n    private showElse() {\r\n        if (!this._elseViewRef) {\r\n            this._viewContainer.clear();\r\n            this._thenViewRef = null;\r\n            if (this._elseTemplateRef) {\r\n                this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef);\r\n            }\r\n        }\r\n    }\r\n\r\n    private assertTemplate(property: string, templateRef: TemplateRef<any> | null): void {\r\n        const isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\r\n        if (!isTemplateRefOrNull) {\r\n            throw new Error(`${property} must be a TemplateRef, but received '${templateRef}'.`);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { UserStatus } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { IfDirectiveBase } from './if-directive-base';\r\n\r\n@Directive({\r\n    selector: '[vdrIfDefaultChannelActive]',\r\n})\r\nexport class IfDefaultChannelActiveDirective extends IfDirectiveBase<[]> {\r\n    constructor(\r\n        _viewContainer: ViewContainerRef,\r\n        templateRef: TemplateRef<any>,\r\n        private dataService: DataService,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n    ) {\r\n        super(_viewContainer, templateRef, () => {\r\n            return this.dataService.client\r\n                .userStatus()\r\n                .mapStream(({ userStatus }) => this.defaultChannelIsActive(userStatus))\r\n                .pipe(tap(() => this.changeDetectorRef.markForCheck()));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A template to show if the current user does not have the speicified permission.\r\n     */\r\n    @Input()\r\n    set vdrIfMultichannelElse(templateRef: TemplateRef<any> | null) {\r\n        this.setElseTemplate(templateRef);\r\n    }\r\n\r\n    private defaultChannelIsActive(userStatus: UserStatus): boolean {\r\n        const defaultChannel = userStatus.channels.find(c => c.code === DEFAULT_CHANNEL_CODE);\r\n\r\n        return !!(defaultChannel && userStatus.activeChannelId === defaultChannel.id);\r\n    }\r\n}\r\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { IfDirectiveBase } from './if-directive-base';\r\n\r\n@Directive({\r\n    selector: '[vdrIfMultichannel]',\r\n})\r\nexport class IfMultichannelDirective extends IfDirectiveBase<[]> {\r\n    constructor(\r\n        _viewContainer: ViewContainerRef,\r\n        templateRef: TemplateRef<any>,\r\n        private dataService: DataService,\r\n    ) {\r\n        super(_viewContainer, templateRef, () => {\r\n            return this.dataService.client\r\n                .userStatus()\r\n                .mapStream(({ userStatus }) => 1 < userStatus.channels.length);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A template to show if the current user does not have the speicified permission.\r\n     */\r\n    @Input()\r\n    set vdrIfMultichannelElse(templateRef: TemplateRef<any> | null) {\r\n        this.setElseTemplate(templateRef);\r\n    }\r\n}\r\n","import {\n    ChangeDetectorRef,\n    Directive,\n    EmbeddedViewRef,\n    Input,\n    TemplateRef,\n    ViewContainerRef,\n} from '@angular/core';\nimport { of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Permission } from '../../common/generated-types';\nimport { DataService } from '../../data/providers/data.service';\n\nimport { IfDirectiveBase } from './if-directive-base';\n\n/**\n * Conditionally shows/hides templates based on the current active user having the specified permission.\n * Based on the ngIf source. Also support \"else\" templates:\n *\n * @example\n * ```html\n * <button *vdrIfPermissions=\"'DeleteCatalog'; else unauthorized\">Delete Product</button>\n * <ng-template #unauthorized>Not allowed!</ng-template>\n * ```\n *\n * The permission can be a single string, or an array. If an array is passed, then _all_ of the permissions\n * must match (logical AND)\n */\n@Directive({\n    selector: '[vdrIfPermissions]',\n})\nexport class IfPermissionsDirective extends IfDirectiveBase<Array<Permission[] | null>> {\n    private permissionToCheck: string[] | null = ['__initial_value__'];\n\n    constructor(\n        _viewContainer: ViewContainerRef,\n        templateRef: TemplateRef<any>,\n        private dataService: DataService,\n        private changeDetectorRef: ChangeDetectorRef,\n    ) {\n        super(_viewContainer, templateRef, permissions => {\n            if (permissions == null) {\n                return of(true);\n            } else if (!permissions) {\n                return of(false);\n            }\n            return this.dataService.client\n                .userStatus()\n                .mapStream(({ userStatus }) => {\n                    for (const permission of permissions) {\n                        if (userStatus.permissions.includes(permission)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                })\n                .pipe(tap(() => this.changeDetectorRef.markForCheck()));\n        });\n    }\n\n    /**\n     * The permission to check to determine whether to show the template.\n     */\n    @Input()\n    set vdrIfPermissions(permission: string | string[] | null) {\n        this.permissionToCheck =\n            (permission && (Array.isArray(permission) ? permission : [permission])) || null;\n        this.updateArgs$.next([this.permissionToCheck as Permission[]]);\n    }\n\n    /**\n     * A template to show if the current user does not have the specified permission.\n     */\n    @Input()\n    set vdrIfPermissionsElse(templateRef: TemplateRef<any> | null) {\n        this.setElseTemplate(templateRef);\n        this.updateArgs$.next([this.permissionToCheck as Permission[]]);\n    }\n}\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ComponentFactory,\r\n    ComponentFactoryResolver,\r\n    ComponentRef,\r\n    Injector,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    QueryList,\r\n    SimpleChanges,\r\n    Type,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, FormArray, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { StringCustomFieldConfig } from '@vendure/common/lib/generated-types';\r\nimport { ConfigArgType, CustomFieldType, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\nimport { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { switchMap, take, takeUntil } from 'rxjs/operators';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\nimport { ConfigArgDefinition, CustomFieldConfig } from '../../../common/generated-types';\r\nimport { getConfigArgValue } from '../../../common/utilities/configurable-operation-utils';\r\nimport { ComponentRegistryService } from '../../../providers/component-registry/component-registry.service';\r\n\r\ntype InputListItem = {\r\n    id: number;\r\n    componentRef?: ComponentRef<FormInputComponent>;\r\n    control: FormControl;\r\n};\r\n\r\n/**\r\n * A host component which delegates to an instance or list of FormInputComponent components.\r\n */\r\n@Component({\r\n    selector: 'vdr-dynamic-form-input',\r\n    templateUrl: './dynamic-form-input.component.html',\r\n    styleUrls: ['./dynamic-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: DynamicFormInputComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class DynamicFormInputComponent\r\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    @Input() def: ConfigArgDefinition | CustomFieldConfig;\r\n    @Input() readonly: boolean;\r\n    @Input() control: FormControl;\r\n    @ViewChild('single', { read: ViewContainerRef }) singleViewContainer: ViewContainerRef;\r\n    @ViewChildren('listItem', { read: ViewContainerRef }) listItemContainers: QueryList<ViewContainerRef>;\r\n    renderAsList = false;\r\n    listItems: InputListItem[] = [];\r\n    private singleComponentRef: ComponentRef<FormInputComponent>;\r\n    private listId = 1;\r\n    private listFormArray = new FormArray([]);\r\n    private componentType: Type<FormInputComponent>;\r\n    private onChange: (val: any) => void;\r\n    private onTouch: () => void;\r\n    private renderList$ = new Subject();\r\n    private destroy$ = new Subject();\r\n\r\n    constructor(\r\n        private componentRegistryService: ComponentRegistryService,\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        private injector: Injector,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        const componentId = this.getInputComponentConfig(this.def).component;\r\n        const componentType = this.componentRegistryService.getInputComponent(componentId);\r\n        if (componentType) {\r\n            this.componentType = componentType;\r\n        } else {\r\n            // tslint:disable-next-line:no-console\r\n            console.error(\r\n                `No form input component registered with the id \"${componentId}\". Using the default input instead.`,\r\n            );\r\n            const defaultComponentType = this.componentRegistryService.getInputComponent(\r\n                this.getInputComponentConfig({ ...this.def, ui: undefined } as any).component,\r\n            );\r\n            if (defaultComponentType) {\r\n                this.componentType = defaultComponentType;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.componentType) {\r\n            const factory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\r\n\r\n            // create a temp instance to check the value of `isListInput`\r\n            const cmpRef = factory.create(this.injector);\r\n            const isListInputComponent = cmpRef.instance.isListInput ?? false;\r\n            cmpRef.destroy();\r\n\r\n            if (this.def.list === false && isListInputComponent) {\r\n                throw new Error(\r\n                    `The ${this.componentType.name} component is a list input, but the definition for ${this.def.name} does not expect a list`,\r\n                );\r\n            }\r\n            this.renderAsList = this.def.list && !isListInputComponent;\r\n            if (!this.renderAsList) {\r\n                this.singleComponentRef = this.renderInputComponent(\r\n                    factory,\r\n                    this.singleViewContainer,\r\n                    this.control,\r\n                );\r\n            } else {\r\n                let formArraySub: Subscription | undefined;\r\n                const renderListInputs = (viewContainerRefs: QueryList<ViewContainerRef>) => {\r\n                    if (viewContainerRefs.length) {\r\n                        if (formArraySub) {\r\n                            formArraySub.unsubscribe();\r\n                        }\r\n                        this.listFormArray = new FormArray([]);\r\n                        this.listItems.forEach(i => i.componentRef?.destroy());\r\n                        viewContainerRefs.forEach((ref, i) => {\r\n                            const listItem = this.listItems?.[i];\r\n                            if (listItem) {\r\n                                this.listFormArray.push(listItem.control);\r\n                                listItem.componentRef = this.renderInputComponent(\r\n                                    factory,\r\n                                    ref,\r\n                                    listItem.control,\r\n                                );\r\n                            }\r\n                        });\r\n\r\n                        formArraySub = this.listFormArray.valueChanges\r\n                            .pipe(takeUntil(this.destroy$))\r\n                            .subscribe(val => {\r\n                                this.control.markAsTouched();\r\n                                this.control.markAsDirty();\r\n                                this.onChange(val);\r\n                                this.control.patchValue(val, { emitEvent: false });\r\n                            });\r\n                    }\r\n                };\r\n\r\n                // initial render\r\n                this.listItemContainers.changes\r\n                    .pipe(take(1))\r\n                    .subscribe(val => renderListInputs(this.listItemContainers));\r\n\r\n                // render on changes to the list\r\n                this.renderList$\r\n                    .pipe(\r\n                        switchMap(() => this.listItemContainers.changes.pipe(take(1))),\r\n                        takeUntil(this.destroy$),\r\n                    )\r\n                    .subscribe(() => {\r\n                        renderListInputs(this.listItemContainers);\r\n                    });\r\n            }\r\n        }\r\n        setTimeout(() => this.changeDetectorRef.markForCheck());\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (this.listItems) {\r\n            for (const item of this.listItems) {\r\n                if (item.componentRef) {\r\n                    this.updateBindings(changes, item.componentRef);\r\n                }\r\n            }\r\n        }\r\n        if (this.singleComponentRef) {\r\n            this.updateBindings(changes, this.singleComponentRef);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    private updateBindings(changes: SimpleChanges, componentRef: ComponentRef<FormInputComponent>) {\r\n        if ('def' in changes) {\r\n            componentRef.instance.config = this.isConfigArgDef(this.def) ? this.def.ui : this.def;\r\n        }\r\n        if ('readonly' in changes) {\r\n            componentRef.instance.readonly = this.readonly;\r\n        }\r\n        componentRef.injector.get(ChangeDetectorRef).markForCheck();\r\n    }\r\n\r\n    trackById(index: number, item: { id: number }) {\r\n        return item.id;\r\n    }\r\n\r\n    addListItem() {\r\n        if (!this.listItems) {\r\n            this.listItems = [];\r\n        }\r\n        this.listItems.push({\r\n            id: this.listId++,\r\n            control: new FormControl((this.def as ConfigArgDefinition).defaultValue ?? null),\r\n        });\r\n        this.renderList$.next();\r\n    }\r\n\r\n    moveListItem(event: CdkDragDrop<InputListItem>) {\r\n        if (this.listItems) {\r\n            moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\r\n            this.listFormArray.removeAt(event.previousIndex);\r\n            this.listFormArray.insert(event.currentIndex, event.item.data.control);\r\n            this.renderList$.next();\r\n        }\r\n    }\r\n\r\n    removeListItem(item: InputListItem) {\r\n        if (this.listItems) {\r\n            const index = this.listItems.findIndex(i => i === item);\r\n            item.componentRef?.destroy();\r\n            this.listFormArray.removeAt(index);\r\n            this.listItems = this.listItems.filter(i => i !== item);\r\n            this.renderList$.next();\r\n        }\r\n    }\r\n\r\n    private renderInputComponent(\r\n        factory: ComponentFactory<FormInputComponent>,\r\n        viewContainerRef: ViewContainerRef,\r\n        formControl: FormControl,\r\n    ) {\r\n        const componentRef = viewContainerRef.createComponent(factory);\r\n        const { instance } = componentRef;\r\n        instance.config = simpleDeepClone(this.isConfigArgDef(this.def) ? this.def.ui : this.def);\r\n        instance.formControl = formControl;\r\n        instance.readonly = this.readonly;\r\n        componentRef.injector.get(ChangeDetectorRef).markForCheck();\r\n        return componentRef;\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (Array.isArray(obj)) {\r\n            if (obj.length === this.listItems.length) {\r\n                obj.forEach((value, index) => {\r\n                    const control = this.listItems[index]?.control;\r\n                    control.patchValue(getConfigArgValue(value), { emitEvent: false });\r\n                });\r\n            } else {\r\n                this.listItems = obj.map(\r\n                    value =>\r\n                        ({\r\n                            id: this.listId++,\r\n                            control: new FormControl(getConfigArgValue(value)),\r\n                        } as InputListItem),\r\n                );\r\n                this.renderList$.next();\r\n            }\r\n        } else {\r\n            this.listItems = [];\r\n            this.renderList$.next();\r\n        }\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    private getInputComponentConfig(\r\n        argDef: ConfigArgDefinition | CustomFieldConfig,\r\n    ): { component: DefaultFormComponentId } {\r\n        if (this.hasUiConfig(argDef) && argDef.ui.component) {\r\n            return argDef.ui;\r\n        }\r\n        const type = argDef?.type as ConfigArgType | CustomFieldType;\r\n        switch (type) {\r\n            case 'string':\r\n            case 'localeString': {\r\n                const hasOptions =\r\n                    !!(this.isConfigArgDef(argDef) && argDef.ui?.options) ||\r\n                    !!(argDef as StringCustomFieldConfig).options;\r\n                if (hasOptions) {\r\n                    return { component: 'select-form-input' };\r\n                } else {\r\n                    return { component: 'text-form-input' };\r\n                }\r\n            }\r\n            case 'text': {\r\n                return { component: 'textarea-form-input' };\r\n            }\r\n            case 'int':\r\n            case 'float':\r\n                return { component: 'number-form-input' };\r\n            case 'boolean':\r\n                return { component: 'boolean-form-input' };\r\n            case 'datetime':\r\n                return { component: 'date-form-input' };\r\n            case 'ID':\r\n                return { component: 'text-form-input' };\r\n            case 'relation':\r\n                return { component: 'relation-form-input' };\r\n            default:\r\n                assertNever(type);\r\n        }\r\n    }\r\n\r\n    private isConfigArgDef(def: ConfigArgDefinition | CustomFieldConfig): def is ConfigArgDefinition {\r\n        return (def as ConfigArgDefinition)?.__typename === 'ConfigArgDefinition';\r\n    }\r\n\r\n    private hasUiConfig(def: unknown): def is { ui: { component: string } } {\r\n        return typeof def === 'object' && typeof (def as any)?.ui?.component === 'string';\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { GetAsset, RelationCustomFieldConfig } from '../../../../common/generated-types';\r\nimport { DataService } from '../../../../data/providers/data.service';\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\nimport { AssetPickerDialogComponent } from '../../../components/asset-picker-dialog/asset-picker-dialog.component';\r\nimport { AssetPreviewDialogComponent } from '../../../components/asset-preview-dialog/asset-preview-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-asset-input',\r\n    templateUrl: './relation-asset-input.component.html',\r\n    styleUrls: ['./relation-asset-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationAssetInputComponent implements OnInit {\r\n    @Input() readonly: boolean;\r\n    @Input() parentFormControl: FormControl;\r\n    @Input() config: RelationCustomFieldConfig;\r\n    asset$: Observable<GetAsset.Asset | undefined>;\r\n\r\n    constructor(private modalService: ModalService, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.asset$ = this.parentFormControl.valueChanges.pipe(\r\n            startWith(this.parentFormControl.value),\r\n            map(asset => asset?.id),\r\n            distinctUntilChanged(),\r\n            switchMap(id => {\r\n                if (id) {\r\n                    return this.dataService.product.getAsset(id).mapStream(data => data.asset || undefined);\r\n                } else {\r\n                    return of(undefined);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    selectAsset() {\r\n        this.modalService\r\n            .fromComponent(AssetPickerDialogComponent, {\r\n                size: 'xl',\r\n                locals: {\r\n                    multiSelect: false,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result && result.length) {\r\n                    this.parentFormControl.setValue(result[0]);\r\n                    this.parentFormControl.markAsDirty();\r\n                }\r\n            });\r\n    }\r\n\r\n    remove() {\r\n        this.parentFormControl.setValue(null);\r\n        this.parentFormControl.markAsDirty();\r\n    }\r\n\r\n    previewAsset(asset: GetAsset.Asset) {\r\n        this.modalService\r\n            .fromComponent(AssetPreviewDialogComponent, {\r\n                size: 'xl',\r\n                closable: true,\r\n                locals: { asset },\r\n            })\r\n            .subscribe();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, TemplateRef } from '@angular/core';\r\n\r\nimport { Dialog } from '../../../../providers/modal/modal.service';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-selector-dialog',\r\n    templateUrl: './relation-selector-dialog.component.html',\r\n    styleUrls: ['./relation-selector-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationSelectorDialogComponent implements Dialog<string[]> {\r\n    resolveWith: (result?: string[]) => void;\r\n    title: string;\r\n    selectorTemplate: TemplateRef<any>;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    CustomerFragment,\r\n    GetCustomerList,\r\n    GetProductList,\r\n    GetProductSimple,\r\n    RelationCustomFieldConfig,\r\n} from '../../../../common/generated-types';\r\nimport { DataService } from '../../../../data/providers/data.service';\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\nimport { RelationSelectorDialogComponent } from '../relation-selector-dialog/relation-selector-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-customer-input',\r\n    templateUrl: './relation-customer-input.component.html',\r\n    styleUrls: ['./relation-customer-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationCustomerInputComponent implements OnInit {\r\n    @Input() readonly: boolean;\r\n    @Input() parentFormControl: FormControl;\r\n    @Input() config: RelationCustomFieldConfig;\r\n\r\n    @ViewChild('selector') template: TemplateRef<any>;\r\n\r\n    searchControl = new FormControl('');\r\n    searchTerm$ = new Subject<string>();\r\n    results$: Observable<GetCustomerList.Items[]>;\r\n\r\n    get customer(): CustomerFragment | undefined {\r\n        return this.parentFormControl.value;\r\n    }\r\n\r\n    constructor(private modalService: ModalService, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.results$ = this.searchTerm$.pipe(\r\n            debounceTime(200),\r\n            switchMap(term => {\r\n                return this.dataService.customer\r\n                    .getCustomerList(10, 0, term)\r\n                    .mapSingle(data => data.customers.items);\r\n            }),\r\n        );\r\n    }\r\n\r\n    selectCustomer() {\r\n        this.modalService\r\n            .fromComponent(RelationSelectorDialogComponent, {\r\n                size: 'md',\r\n                closable: true,\r\n                locals: {\r\n                    title: _('customer.select-customer'),\r\n                    selectorTemplate: this.template,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.parentFormControl.setValue(result);\r\n                    this.parentFormControl.markAsDirty();\r\n                }\r\n            });\r\n    }\r\n\r\n    remove() {\r\n        this.parentFormControl.setValue(null);\r\n        this.parentFormControl.markAsDirty();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    GetProductVariant,\r\n    GetProductVariantList,\r\n    RelationCustomFieldConfig,\r\n} from '../../../../common/generated-types';\r\nimport { DataService } from '../../../../data/providers/data.service';\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\nimport { RelationSelectorDialogComponent } from '../relation-selector-dialog/relation-selector-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-product-variant-input',\r\n    templateUrl: './relation-product-variant-input.component.html',\r\n    styleUrls: ['./relation-product-variant-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationProductVariantInputComponent implements OnInit {\r\n    @Input() readonly: boolean;\r\n    @Input() parentFormControl: FormControl;\r\n    @Input() config: RelationCustomFieldConfig;\r\n\r\n    @ViewChild('selector') template: TemplateRef<any>;\r\n\r\n    searchControl = new FormControl('');\r\n    searchTerm$ = new Subject<string>();\r\n    results$: Observable<GetProductVariantList.Items[]>;\r\n    productVariant$: Observable<GetProductVariant.ProductVariant | undefined>;\r\n\r\n    constructor(private modalService: ModalService, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.productVariant$ = this.parentFormControl.valueChanges.pipe(\r\n            startWith(this.parentFormControl.value),\r\n            map(variant => variant?.id),\r\n            distinctUntilChanged(),\r\n            switchMap(id => {\r\n                if (id) {\r\n                    return this.dataService.product\r\n                        .getProductVariant(id)\r\n                        .mapStream(data => data.productVariant || undefined);\r\n                } else {\r\n                    return of(undefined);\r\n                }\r\n            }),\r\n        );\r\n\r\n        this.results$ = this.searchTerm$.pipe(\r\n            debounceTime(200),\r\n            switchMap(term => {\r\n                return this.dataService.product\r\n                    .getProductVariants({\r\n                        ...(term\r\n                            ? {\r\n                                  filter: {\r\n                                      name: {\r\n                                          contains: term,\r\n                                      },\r\n                                  },\r\n                              }\r\n                            : {}),\r\n                        take: 10,\r\n                    })\r\n                    .mapSingle(data => data.productVariants.items);\r\n            }),\r\n        );\r\n    }\r\n\r\n    selectProductVariant() {\r\n        this.modalService\r\n            .fromComponent(RelationSelectorDialogComponent, {\r\n                size: 'md',\r\n                closable: true,\r\n                locals: {\r\n                    title: _('catalog.select-product-variant'),\r\n                    selectorTemplate: this.template,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.parentFormControl.setValue(result);\r\n                    this.parentFormControl.markAsDirty();\r\n                }\r\n            });\r\n    }\r\n\r\n    remove() {\r\n        this.parentFormControl.setValue(null);\r\n        this.parentFormControl.markAsDirty();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    GetProductList,\r\n    GetProductSimple,\r\n    RelationCustomFieldConfig,\r\n} from '../../../../common/generated-types';\r\nimport { DataService } from '../../../../data/providers/data.service';\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\nimport { RelationSelectorDialogComponent } from '../relation-selector-dialog/relation-selector-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-product-input',\r\n    templateUrl: './relation-product-input.component.html',\r\n    styleUrls: ['./relation-product-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationProductInputComponent implements OnInit {\r\n    @Input() readonly: boolean;\r\n    @Input() parentFormControl: FormControl;\r\n    @Input() config: RelationCustomFieldConfig;\r\n\r\n    @ViewChild('selector') template: TemplateRef<any>;\r\n\r\n    searchControl = new FormControl('');\r\n    searchTerm$ = new Subject<string>();\r\n    results$: Observable<GetProductList.Items[]>;\r\n    product$: Observable<GetProductSimple.Product | undefined>;\r\n\r\n    constructor(private modalService: ModalService, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.product$ = this.parentFormControl.valueChanges.pipe(\r\n            startWith(this.parentFormControl.value),\r\n            map(product => product?.id),\r\n            distinctUntilChanged(),\r\n            switchMap(id => {\r\n                if (id) {\r\n                    return this.dataService.product\r\n                        .getProductSimple(id)\r\n                        .mapStream(data => data.product || undefined);\r\n                } else {\r\n                    return of(undefined);\r\n                }\r\n            }),\r\n        );\r\n\r\n        this.results$ = this.searchTerm$.pipe(\r\n            debounceTime(200),\r\n            switchMap(term => {\r\n                return this.dataService.product\r\n                    .getProducts({\r\n                        ...(term\r\n                            ? {\r\n                                  filter: {\r\n                                      name: {\r\n                                          contains: term,\r\n                                      },\r\n                                  },\r\n                              }\r\n                            : {}),\r\n                        take: 10,\r\n                    })\r\n                    .mapSingle(data => data.products.items);\r\n            }),\r\n        );\r\n    }\r\n\r\n    selectProduct() {\r\n        this.modalService\r\n            .fromComponent(RelationSelectorDialogComponent, {\r\n                size: 'md',\r\n                closable: true,\r\n                locals: {\r\n                    title: _('catalog.select-product'),\r\n                    selectorTemplate: this.template,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.parentFormControl.setValue(result);\r\n                    this.parentFormControl.markAsDirty();\r\n                }\r\n            });\r\n    }\r\n\r\n    remove() {\r\n        this.parentFormControl.setValue(null);\r\n        this.parentFormControl.markAsDirty();\r\n    }\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    Directive,\r\n    Input,\r\n    Output,\r\n    TemplateRef,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[vdrRelationCardPreview]',\r\n})\r\nexport class RelationCardPreviewDirective {}\r\n@Directive({\r\n    selector: '[vdrRelationCardDetail]',\r\n})\r\nexport class RelationCardDetailDirective {}\r\n\r\n@Component({\r\n    selector: 'vdr-relation-card',\r\n    templateUrl: './relation-card.component.html',\r\n    styleUrls: ['./relation-card.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationCardComponent {\r\n    @Input() entity: any;\r\n    @Input() placeholderIcon: string;\r\n    @Input() selectLabel: string;\r\n    @Input() readonly: boolean;\r\n    @Input() removable = true;\r\n    @Output() select = new EventEmitter();\r\n    @Output() remove = new EventEmitter();\r\n    @ContentChild(RelationCardPreviewDirective, { read: TemplateRef })\r\n    previewTemplate: TemplateRef<any>;\r\n    @ContentChild(RelationCardDetailDirective, { read: TemplateRef })\r\n    detailTemplate: TemplateRef<any>;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { AssetFragment } from '../../common/generated-types';\r\n\r\n@Pipe({\r\n    name: 'assetPreview',\r\n})\r\nexport class AssetPreviewPipe implements PipeTransform {\r\n    transform(asset?: AssetFragment, preset: string | number = 'thumb'): string {\r\n        if (!asset) {\r\n            return '';\r\n        }\r\n        if (!asset.preview || typeof asset.preview !== 'string') {\r\n            throw new Error(`Expected an Asset, got ${JSON.stringify(asset)}`);\r\n        }\r\n        const fp = asset.focalPoint ? `&fpx=${asset.focalPoint.x}&fpy=${asset.focalPoint.y}` : '';\r\n        if (Number.isNaN(Number(preset))) {\r\n            return `${asset.preview}?preset=${preset}${fp}`;\r\n        } else {\r\n            return `${asset.preview}?w=${preset}&h=${preset}${fp}`;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\n\r\n@Pipe({\r\n    name: 'channelCodeToLabel',\r\n})\r\nexport class ChannelLabelPipe implements PipeTransform {\r\n    transform(value: any, ...args: any[]): any {\r\n        if (value === DEFAULT_CHANNEL_CODE) {\r\n            return _('common.default-channel');\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","import { OnDestroy, Pipe, PipeTransform } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { CustomFieldConfig, LanguageCode, StringFieldOption } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\n/**\r\n * Displays a localized label for a CustomField or StringFieldOption, falling back to the\r\n * name/value if none are defined.\r\n */\r\n@Pipe({\r\n    name: 'customFieldLabel',\r\n    pure: false,\r\n})\r\nexport class CustomFieldLabelPipe implements PipeTransform, OnDestroy {\r\n    private readonly subscription: Subscription;\r\n    private uiLanguageCode: LanguageCode;\r\n\r\n    constructor(private dataService: DataService) {\r\n        this.subscription = dataService.client.uiState().stream$.subscribe(val => {\r\n            this.uiLanguageCode = val.uiState.language;\r\n        });\r\n    }\r\n\r\n    transform(value: CustomFieldConfig | StringFieldOption): string {\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        const { label } = value;\r\n        const name = this.isCustomFieldConfig(value) ? value.name : value.value;\r\n        if (label) {\r\n            const match = label.find(l => l.languageCode === this.uiLanguageCode);\r\n            return match ? match.value : label[0].value;\r\n        } else {\r\n            return name;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private isCustomFieldConfig(input: any): input is CustomFieldConfig {\r\n        return input.hasOwnProperty('name');\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nimport { I18nService } from '../../providers/i18n/i18n.service';\r\n\r\n/**\r\n * Displays a number of milliseconds in a more human-readable format,\r\n * e.g. \"12ms\", \"33s\", \"2:03m\"\r\n */\r\n@Pipe({\r\n    name: 'duration',\r\n})\r\nexport class DurationPipe implements PipeTransform {\r\n    constructor(private i18nService: I18nService) {}\r\n\r\n    transform(value: number): string {\r\n        if (value < 1000) {\r\n            return this.i18nService.translate(_('datetime.duration-milliseconds'), { ms: value });\r\n        } else if (value < 1000 * 60) {\r\n            const seconds1dp = +(value / 1000).toFixed(1);\r\n            return this.i18nService.translate(_('datetime.duration-seconds'), { s: seconds1dp });\r\n        } else {\r\n            const minutes = Math.floor(value / (1000 * 60));\r\n            const seconds = Math.round((value % (1000 * 60)) / 1000)\r\n                .toString()\r\n                .padStart(2, '0');\r\n            return this.i18nService.translate(_('datetime.duration-minutes:seconds'), {\r\n                m: minutes,\r\n                s: seconds,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * Formats a number into a human-readable file size string.\r\n */\r\n@Pipe({ name: 'filesize' })\r\nexport class FileSizePipe implements PipeTransform {\r\n    transform(value: number, useSiUnits: boolean = true): any {\r\n        if (typeof value !== 'number' && typeof value !== 'string') {\r\n            return value;\r\n        }\r\n        return humanFileSize(value, useSiUnits === true);\r\n    }\r\n}\r\n\r\n/**\r\n * Convert a number into a human-readable file size string.\r\n * Adapted from http://stackoverflow.com/a/14919494/772859\r\n */\r\nfunction humanFileSize(bytes: number, si: boolean): string {\r\n    const thresh = si ? 1000 : 1024;\r\n    if (Math.abs(bytes) < thresh) {\r\n        return bytes + ' B';\r\n    }\r\n    const units = si\r\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\r\n    let u = -1;\r\n    do {\r\n        bytes /= thresh;\r\n        ++u;\r\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\r\n\r\n    return bytes.toFixed(1) + ' ' + units[u];\r\n}\r\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { DataService } from '../../data/providers/data.service';\n\n/**\n * A pipe which checks the provided permission against all the permissions of the current user.\n * Returns `true` if the current user has that permission.\n *\n * @example\n * ```\n * <button [disabled]=\"!('UpdateCatalog' | hasPermission)\">Save Changes</button>\n * ```\n */\n@Pipe({\n    name: 'hasPermission',\n    pure: false,\n})\nexport class HasPermissionPipe implements PipeTransform, OnDestroy {\n    private hasPermission = false;\n    private currentPermissions$: Observable<string[]>;\n    private lastPermissions: string | null = null;\n    private subscription: Subscription;\n\n    constructor(private dataService: DataService, private changeDetectorRef: ChangeDetectorRef) {\n        this.currentPermissions$ = this.dataService.client\n            .userStatus()\n            .mapStream(data => data.userStatus.permissions);\n    }\n\n    transform(input: string | string[]): any {\n        const requiredPermissions = Array.isArray(input) ? input : [input];\n        const requiredPermissionsString = requiredPermissions.join(',');\n        if (this.lastPermissions !== requiredPermissionsString) {\n            this.lastPermissions = requiredPermissionsString;\n            this.hasPermission = false;\n            this.dispose();\n            this.subscription = this.currentPermissions$.subscribe(permissions => {\n                this.hasPermission = this.checkPermissions(permissions, requiredPermissions);\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n\n        return this.hasPermission;\n    }\n\n    ngOnDestroy() {\n        this.dispose();\n    }\n\n    private checkPermissions(userPermissions: string[], requiredPermissions: string[]): boolean {\n        for (const perm of requiredPermissions) {\n            if (userPermissions.includes(perm)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private dispose() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n","import { ChangeDetectorRef, Injectable, OnDestroy, PipeTransform } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\n/**\r\n * Used by locale-aware pipes to handle the task of getting the active languageCode\r\n * of the UI and cleaning up.\r\n */\r\n@Injectable()\r\nexport abstract class LocaleBasePipe implements OnDestroy, PipeTransform {\r\n    protected locale: string;\r\n    private readonly subscription: Subscription;\r\n\r\n    protected constructor(dataService?: DataService, changeDetectorRef?: ChangeDetectorRef) {\r\n        if (dataService && changeDetectorRef) {\r\n            this.subscription = dataService.client\r\n                .uiState()\r\n                .mapStream(data => data.uiState.language)\r\n                .subscribe(languageCode => {\r\n                    this.locale = languageCode.replace(/_/g, '-');\r\n                    changeDetectorRef.markForCheck();\r\n                });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    abstract transform(value: any, ...args): any;\r\n}\r\n","import { ChangeDetectorRef, Optional, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { LocaleBasePipe } from './locale-base.pipe';\r\n\r\n/**\r\n * Displays a human-readable name for a given ISO 4217 currency code.\r\n */\r\n@Pipe({\r\n    name: 'localeCurrencyName',\r\n    pure: false,\r\n})\r\nexport class LocaleCurrencyNamePipe extends LocaleBasePipe implements PipeTransform {\r\n    constructor(@Optional() dataService?: DataService, @Optional() changeDetectorRef?: ChangeDetectorRef) {\r\n        super(dataService, changeDetectorRef);\r\n    }\r\n    transform(value: any, display: 'full' | 'symbol' | 'name' = 'full', locale?: unknown): any {\r\n        if (value == null || value === '') {\r\n            return '';\r\n        }\r\n        if (typeof value !== 'string') {\r\n            return `Invalid currencyCode \"${value as any}\"`;\r\n        }\r\n        let name = '';\r\n        let symbol = '';\r\n        const activeLocale = typeof locale === 'string' ? locale : this.locale ?? 'en';\r\n\r\n        // Awaiting TS types for this API: https://github.com/microsoft/TypeScript/pull/44022/files\r\n        const DisplayNames = (Intl as any).DisplayNames;\r\n\r\n        if (display === 'full' || display === 'name') {\r\n            name = new DisplayNames([activeLocale], {\r\n                type: 'currency',\r\n            }).of(value);\r\n        }\r\n        if (display === 'full' || display === 'symbol') {\r\n            const parts = (new Intl.NumberFormat(activeLocale, {\r\n                style: 'currency',\r\n                currency: value,\r\n                currencyDisplay: 'symbol',\r\n            }) as any).formatToParts();\r\n\r\n            symbol = parts.find(p => p.type === 'currency')?.value || value;\r\n        }\r\n        return display === 'full' ? `${name} (${symbol})` : display === 'name' ? name : symbol;\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Optional, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { LocaleBasePipe } from './locale-base.pipe';\r\n\r\n@Pipe({\r\n    name: 'localeCurrency',\r\n    pure: false,\r\n})\r\nexport class LocaleCurrencyPipe extends LocaleBasePipe implements PipeTransform {\r\n    constructor(@Optional() dataService?: DataService, @Optional() changeDetectorRef?: ChangeDetectorRef) {\r\n        super(dataService, changeDetectorRef);\r\n    }\r\n    transform(value: unknown, ...args: unknown[]): string | unknown {\r\n        const [currencyCode, locale] = args;\r\n        if (typeof value === 'number' && typeof currencyCode === 'string') {\r\n            const activeLocale = typeof locale === 'string' ? locale : this.locale;\r\n            const majorUnits = value / 100;\r\n            return new Intl.NumberFormat(activeLocale, { style: 'currency', currency: currencyCode }).format(\r\n                majorUnits,\r\n            );\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Optional, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { LocaleBasePipe } from './locale-base.pipe';\r\n\r\n/**\r\n * @description\r\n * A replacement of the Angular DatePipe which makes use of the Intl API\r\n * to format dates according to the selected UI language.\r\n */\r\n@Pipe({\r\n    name: 'localeDate',\r\n    pure: false,\r\n})\r\nexport class LocaleDatePipe extends LocaleBasePipe implements PipeTransform {\r\n    constructor(@Optional() dataService?: DataService, @Optional() changeDetectorRef?: ChangeDetectorRef) {\r\n        super(dataService, changeDetectorRef);\r\n    }\r\n    transform(value: unknown, ...args: unknown[]): unknown {\r\n        const [format, locale] = args;\r\n        if (this.locale || typeof locale === 'string') {\r\n            const activeLocale = typeof locale === 'string' ? locale : this.locale;\r\n            const date =\r\n                value instanceof Date ? value : typeof value === 'string' ? new Date(value) : undefined;\r\n            if (date) {\r\n                const options = this.getOptionsForFormat(typeof format === 'string' ? format : 'medium');\r\n                return new Intl.DateTimeFormat(activeLocale, options).format(date);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getOptionsForFormat(dateFormat: string): Intl.DateTimeFormatOptions | undefined {\r\n        switch (dateFormat) {\r\n            case 'medium':\r\n                return {\r\n                    month: 'short',\r\n                    year: 'numeric',\r\n                    day: 'numeric',\r\n                    hour: 'numeric',\r\n                    minute: 'numeric',\r\n                    second: 'numeric',\r\n                    hour12: true,\r\n                };\r\n            case 'mediumTime':\r\n                return {\r\n                    hour: 'numeric',\r\n                    minute: 'numeric',\r\n                    second: 'numeric',\r\n                    hour12: true,\r\n                };\r\n            case 'longDate':\r\n                return {\r\n                    year: 'numeric',\r\n                    month: 'long',\r\n                    day: 'numeric',\r\n                };\r\n            case 'short':\r\n                return {\r\n                    day: 'numeric',\r\n                    month: 'numeric',\r\n                    year: '2-digit',\r\n                    hour: 'numeric',\r\n                    minute: 'numeric',\r\n                    hour12: true,\r\n                };\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Optional, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { LocaleBasePipe } from './locale-base.pipe';\r\n\r\n/**\r\n * Displays a human-readable name for a given ISO 4217 currency code.\r\n */\r\n@Pipe({\r\n    name: 'localeLanguageName',\r\n    pure: false,\r\n})\r\nexport class LocaleLanguageNamePipe extends LocaleBasePipe implements PipeTransform {\r\n    constructor(@Optional() dataService?: DataService, @Optional() changeDetectorRef?: ChangeDetectorRef) {\r\n        super(dataService, changeDetectorRef);\r\n    }\r\n    transform(value: any, locale?: unknown): string {\r\n        if (value == null || value === '') {\r\n            return '';\r\n        }\r\n        if (typeof value !== 'string') {\r\n            return `Invalid language code \"${value as any}\"`;\r\n        }\r\n        const activeLocale = typeof locale === 'string' ? locale : this.locale ?? 'en';\r\n\r\n        // Awaiting TS types for this API: https://github.com/microsoft/TypeScript/pull/44022/files\r\n        const DisplayNames = (Intl as any).DisplayNames;\r\n\r\n        try {\r\n            return new DisplayNames([activeLocale.replace('_', '-')], { type: 'language' }).of(\r\n                value.replace('_', '-'),\r\n            );\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * Formats a string into sentence case (first letter of first word uppercase).\r\n */\r\n@Pipe({ name: 'sentenceCase' })\r\nexport class SentenceCasePipe implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (typeof value === 'string') {\r\n            let lower: string;\r\n            if (isCamelCase(value)) {\r\n                lower = value.replace(/([a-z])([A-Z])/g, '$1 $2').toLowerCase();\r\n            } else {\r\n                lower = value.toLowerCase();\r\n            }\r\n            return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\nfunction isCamelCase(value: string): boolean {\r\n    return /^[a-zA-Z]+[A-Z][a-zA-Z]+$/.test(value);\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * A pipe for sorting elements of an array. Should be used with caution due to the\r\n * potential for perf degredation. Ideally should only be used on small arrays (< 10s of items)\r\n * and in components using OnPush change detection.\r\n */\r\n@Pipe({\r\n    name: 'sort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n    transform<T>(value: T[] | readonly T[], orderByProp?: keyof T) {\r\n        return value.slice().sort((a, b) => {\r\n            const aProp = orderByProp ? a[orderByProp] : a;\r\n            const bProp = orderByProp ? b[orderByProp] : b;\r\n            if (aProp === bProp) {\r\n                return 0;\r\n            }\r\n            if (aProp == null) {\r\n                return 1;\r\n            }\r\n            if (bProp == null) {\r\n                return -1;\r\n            }\r\n            return aProp > bProp ? 1 : -1;\r\n        });\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\n@Pipe({\r\n    name: 'stateI18nToken',\r\n})\r\nexport class StateI18nTokenPipe implements PipeTransform {\r\n    private readonly stateI18nTokens = {\r\n        Created: _('state.created'),\r\n        AddingItems: _('state.adding-items'),\r\n        ArrangingPayment: _('state.arranging-payment'),\r\n        PaymentAuthorized: _('state.payment-authorized'),\r\n        PaymentSettled: _('state.payment-settled'),\r\n        PartiallyShipped: _('state.partially-shipped'),\r\n        Shipped: _('state.shipped'),\r\n        PartiallyDelivered: _('state.partially-delivered'),\r\n        Authorized: _('state.authorized'),\r\n        Delivered: _('state.delivered'),\r\n        Cancelled: _('state.cancelled'),\r\n        Pending: _('state.pending'),\r\n        Settled: _('state.settled'),\r\n        Failed: _('state.failed'),\r\n        Error: _('state.error'),\r\n        Declined: _('state.declined'),\r\n        Modifying: _('state.modifying'),\r\n        ArrangingAdditionalPayment: _('state.arranging-additional-payment'),\r\n    };\r\n    transform<T extends unknown>(value: T): T {\r\n        if (typeof value === 'string' && value.length) {\r\n            const defaultStateToken = this.stateI18nTokens[value as any];\r\n            if (defaultStateToken) {\r\n                return defaultStateToken;\r\n            }\r\n            return ('state.' +\r\n                value\r\n                    .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n                    .replace(/ +/g, '-')\r\n                    .toLowerCase()) as any;\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","/**\r\n * For a given string, returns one of a pre-defined selection of colours.\r\n */\r\nexport function stringToColor(input: string): string {\r\n    if (!input || input === '') {\r\n        return 'var(--color-component-bg-100)';\r\n    }\r\n    const safeColors = [\r\n        '#10893E',\r\n        '#107C10',\r\n        '#7E735F',\r\n        '#2F5646',\r\n        '#498205',\r\n        '#847545',\r\n        '#744DA9',\r\n        '#018574',\r\n        '#486860',\r\n        '#525E54',\r\n        '#647C64',\r\n        '#567C73',\r\n        '#8764B8',\r\n        '#515C6B',\r\n        '#4A5459',\r\n        '#69797E',\r\n        '#0063B1',\r\n        '#0078D7',\r\n        '#2D7D9A',\r\n        '#7A7574',\r\n        '#767676',\r\n    ];\r\n    const value = input.split('').reduce((prev, curr, index) => {\r\n        return prev + Math.round(curr.charCodeAt(0) * Math.log(index + 2));\r\n    }, 0);\r\n    return safeColors[value % safeColors.length];\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { stringToColor } from '../../common/utilities/string-to-color';\r\n\r\n@Pipe({\r\n    name: 'stringToColor',\r\n    pure: true,\r\n})\r\nexport class StringToColorPipe implements PipeTransform {\r\n    transform(value: any): string {\r\n        return stringToColor(value);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport dayjs from 'dayjs';\r\n\r\nimport { I18nService } from '../../providers/i18n/i18n.service';\r\n\r\n/**\r\n * Converts a date into the format \"3 minutes ago\", \"5 hours ago\" etc.\r\n */\r\n@Pipe({\r\n    name: 'timeAgo',\r\n    pure: false,\r\n})\r\nexport class TimeAgoPipe implements PipeTransform {\r\n    constructor(private i18nService: I18nService) {}\r\n\r\n    transform(value: string | Date, nowVal?: string | Date): string {\r\n        const then = dayjs(value);\r\n        const now = dayjs(nowVal || new Date());\r\n        const secondsDiff = now.diff(then, 'second');\r\n        const durations: Array<[number, string]> = [\r\n            [60, _('datetime.ago-seconds')],\r\n            [3600, _('datetime.ago-minutes')],\r\n            [86400, _('datetime.ago-hours')],\r\n            [31536000, _('datetime.ago-days')],\r\n            [Number.MAX_SAFE_INTEGER, _('datetime.ago-years')],\r\n        ];\r\n\r\n        let lastUpperBound = 1;\r\n        for (const [upperBound, translationToken] of durations) {\r\n            if (secondsDiff < upperBound) {\r\n                const count = Math.max(0, Math.floor(secondsDiff / lastUpperBound));\r\n                return this.i18nService.translate(translationToken, { count });\r\n            }\r\n            lastUpperBound = upperBound;\r\n        }\r\n        return then.format();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanDeactivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { DeactivateAware } from '../../../common/deactivate-aware';\r\nimport { ModalService } from '../../../providers/modal/modal.service';\r\n\r\n@Injectable()\r\nexport class CanDeactivateDetailGuard implements CanDeactivate<DeactivateAware> {\r\n    constructor(private modalService: ModalService, private router: Router) {}\r\n\r\n    canDeactivate(\r\n        component: DeactivateAware,\r\n        currentRoute: ActivatedRouteSnapshot,\r\n        currentState: RouterStateSnapshot,\r\n        nextState?: RouterStateSnapshot,\r\n    ): boolean | Observable<boolean> {\r\n        if (!component.canDeactivate()) {\r\n            return this.modalService\r\n                .dialog({\r\n                    title: _('common.confirm-navigation'),\r\n                    body: _('common.there-are-unsaved-changes'),\r\n                    buttons: [\r\n                        { type: 'danger', label: _('common.discard-changes'), returnValue: true },\r\n                        { type: 'primary', label: _('common.cancel-navigation'), returnValue: false },\r\n                    ],\r\n                })\r\n                .pipe(map(result => !!result));\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ClarityModule } from '@clr/angular';\r\nimport '@clr/icons';\r\nimport '@clr/icons/shapes/all-shapes';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport '@webcomponents/custom-elements/custom-elements.min.js';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { ModalService } from '../providers/modal/modal.service';\r\n\r\nimport { ActionBarItemsComponent } from './components/action-bar-items/action-bar-items.component';\r\nimport {\r\n    ActionBarComponent,\r\n    ActionBarLeftComponent,\r\n    ActionBarRightComponent,\r\n} from './components/action-bar/action-bar.component';\r\nimport { AddressFormComponent } from './components/address-form/address-form.component';\r\nimport { AffixedInputComponent } from './components/affixed-input/affixed-input.component';\r\nimport { PercentageSuffixInputComponent } from './components/affixed-input/percentage-suffix-input.component';\r\nimport { AssetFileInputComponent } from './components/asset-file-input/asset-file-input.component';\r\nimport { AssetGalleryComponent } from './components/asset-gallery/asset-gallery.component';\r\nimport { AssetPickerDialogComponent } from './components/asset-picker-dialog/asset-picker-dialog.component';\r\nimport { AssetPreviewDialogComponent } from './components/asset-preview-dialog/asset-preview-dialog.component';\r\nimport { AssetPreviewComponent } from './components/asset-preview/asset-preview.component';\r\nimport { AssetSearchInputComponent } from './components/asset-search-input/asset-search-input.component';\r\nimport { ChannelAssignmentControlComponent } from './components/channel-assignment-control/channel-assignment-control.component';\r\nimport { ChannelBadgeComponent } from './components/channel-badge/channel-badge.component';\r\nimport { ChipComponent } from './components/chip/chip.component';\r\nimport { ConfigurableInputComponent } from './components/configurable-input/configurable-input.component';\r\nimport { CurrencyInputComponent } from './components/currency-input/currency-input.component';\r\nimport { CustomFieldControlComponent } from './components/custom-field-control/custom-field-control.component';\r\nimport { CustomerLabelComponent } from './components/customer-label/customer-label.component';\r\nimport { DataTableColumnComponent } from './components/data-table/data-table-column.component';\r\nimport { DataTableComponent } from './components/data-table/data-table.component';\r\nimport { DatetimePickerComponent } from './components/datetime-picker/datetime-picker.component';\r\nimport { DropdownItemDirective } from './components/dropdown/dropdown-item.directive';\r\nimport { DropdownMenuComponent } from './components/dropdown/dropdown-menu.component';\r\nimport { DropdownTriggerDirective } from './components/dropdown/dropdown-trigger.directive';\r\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\r\nimport { EditNoteDialogComponent } from './components/edit-note-dialog/edit-note-dialog.component';\r\nimport { EmptyPlaceholderComponent } from './components/empty-placeholder/empty-placeholder.component';\r\nimport { EntityInfoComponent } from './components/entity-info/entity-info.component';\r\nimport { ExtensionHostComponent } from './components/extension-host/extension-host.component';\r\nimport { FacetValueChipComponent } from './components/facet-value-chip/facet-value-chip.component';\r\nimport { FacetValueSelectorComponent } from './components/facet-value-selector/facet-value-selector.component';\r\nimport { FocalPointControlComponent } from './components/focal-point-control/focal-point-control.component';\r\nimport { FormFieldControlDirective } from './components/form-field/form-field-control.directive';\r\nimport { FormFieldComponent } from './components/form-field/form-field.component';\r\nimport { FormItemComponent } from './components/form-item/form-item.component';\r\nimport { FormattedAddressComponent } from './components/formatted-address/formatted-address.component';\r\nimport { HelpTooltipComponent } from './components/help-tooltip/help-tooltip.component';\r\nimport { HistoryEntryDetailComponent } from './components/history-entry-detail/history-entry-detail.component';\r\nimport { ItemsPerPageControlsComponent } from './components/items-per-page-controls/items-per-page-controls.component';\r\nimport { LabeledDataComponent } from './components/labeled-data/labeled-data.component';\r\nimport { LanguageSelectorComponent } from './components/language-selector/language-selector.component';\r\nimport { ManageTagsDialogComponent } from './components/manage-tags-dialog/manage-tags-dialog.component';\r\nimport { DialogButtonsDirective } from './components/modal-dialog/dialog-buttons.directive';\r\nimport { DialogComponentOutletComponent } from './components/modal-dialog/dialog-component-outlet.component';\r\nimport { DialogTitleDirective } from './components/modal-dialog/dialog-title.directive';\r\nimport { ModalDialogComponent } from './components/modal-dialog/modal-dialog.component';\r\nimport { ObjectTreeComponent } from './components/object-tree/object-tree.component';\r\nimport { OrderStateLabelComponent } from './components/order-state-label/order-state-label.component';\r\nimport { PaginationControlsComponent } from './components/pagination-controls/pagination-controls.component';\r\nimport { ProductSelectorComponent } from './components/product-selector/product-selector.component';\r\nimport { ExternalImageDialogComponent } from './components/rich-text-editor/external-image-dialog/external-image-dialog.component';\r\nimport { LinkDialogComponent } from './components/rich-text-editor/link-dialog/link-dialog.component';\r\nimport { RichTextEditorComponent } from './components/rich-text-editor/rich-text-editor.component';\r\nimport { SelectToggleComponent } from './components/select-toggle/select-toggle.component';\r\nimport { SimpleDialogComponent } from './components/simple-dialog/simple-dialog.component';\r\nimport { TableRowActionComponent } from './components/table-row-action/table-row-action.component';\r\nimport { TagSelectorComponent } from './components/tag-selector/tag-selector.component';\r\nimport { TimelineEntryComponent } from './components/timeline-entry/timeline-entry.component';\r\nimport { TitleInputComponent } from './components/title-input/title-input.component';\r\nimport { DisabledDirective } from './directives/disabled.directive';\r\nimport { IfDefaultChannelActiveDirective } from './directives/if-default-channel-active.directive';\r\nimport { IfMultichannelDirective } from './directives/if-multichannel.directive';\r\nimport { IfPermissionsDirective } from './directives/if-permissions.directive';\r\nimport { BooleanFormInputComponent } from './dynamic-form-inputs/boolean-form-input/boolean-form-input.component';\r\nimport { CurrencyFormInputComponent } from './dynamic-form-inputs/currency-form-input/currency-form-input.component';\r\nimport { CustomerGroupFormInputComponent } from './dynamic-form-inputs/customer-group-form-input/customer-group-form-input.component';\r\nimport { DateFormInputComponent } from './dynamic-form-inputs/date-form-input/date-form-input.component';\r\nimport { DynamicFormInputComponent } from './dynamic-form-inputs/dynamic-form-input/dynamic-form-input.component';\r\nimport { FacetValueFormInputComponent } from './dynamic-form-inputs/facet-value-form-input/facet-value-form-input.component';\r\nimport { NumberFormInputComponent } from './dynamic-form-inputs/number-form-input/number-form-input.component';\r\nimport { PasswordFormInputComponent } from './dynamic-form-inputs/password-form-input/password-form-input.component';\r\nimport { ProductSelectorFormInputComponent } from './dynamic-form-inputs/product-selector-form-input/product-selector-form-input.component';\r\nimport { RelationAssetInputComponent } from './dynamic-form-inputs/relation-form-input/asset/relation-asset-input.component';\r\nimport { RelationCustomerInputComponent } from './dynamic-form-inputs/relation-form-input/customer/relation-customer-input.component';\r\nimport { RelationProductVariantInputComponent } from './dynamic-form-inputs/relation-form-input/product-variant/relation-product-variant-input.component';\r\nimport { RelationProductInputComponent } from './dynamic-form-inputs/relation-form-input/product/relation-product-input.component';\r\nimport {\r\n    RelationCardComponent,\r\n    RelationCardDetailDirective,\r\n    RelationCardPreviewDirective,\r\n} from './dynamic-form-inputs/relation-form-input/relation-card/relation-card.component';\r\nimport { RelationFormInputComponent } from './dynamic-form-inputs/relation-form-input/relation-form-input.component';\r\nimport { RelationSelectorDialogComponent } from './dynamic-form-inputs/relation-form-input/relation-selector-dialog/relation-selector-dialog.component';\r\nimport { SelectFormInputComponent } from './dynamic-form-inputs/select-form-input/select-form-input.component';\r\nimport { TextFormInputComponent } from './dynamic-form-inputs/text-form-input/text-form-input.component';\r\nimport { TextareaFormInputComponent } from './dynamic-form-inputs/textarea-form-input/textarea-form-input.component';\r\nimport { AssetPreviewPipe } from './pipes/asset-preview.pipe';\r\nimport { ChannelLabelPipe } from './pipes/channel-label.pipe';\r\nimport { CustomFieldLabelPipe } from './pipes/custom-field-label.pipe';\r\nimport { DurationPipe } from './pipes/duration.pipe';\r\nimport { FileSizePipe } from './pipes/file-size.pipe';\r\nimport { HasPermissionPipe } from './pipes/has-permission.pipe';\r\nimport { LocaleCurrencyNamePipe } from './pipes/locale-currency-name.pipe';\r\nimport { LocaleCurrencyPipe } from './pipes/locale-currency.pipe';\r\nimport { LocaleDatePipe } from './pipes/locale-date.pipe';\r\nimport { LocaleLanguageNamePipe } from './pipes/locale-language-name.pipe';\r\nimport { SentenceCasePipe } from './pipes/sentence-case.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { StateI18nTokenPipe } from './pipes/state-i18n-token.pipe';\r\nimport { StringToColorPipe } from './pipes/string-to-color.pipe';\r\nimport { TimeAgoPipe } from './pipes/time-ago.pipe';\r\nimport { CanDeactivateDetailGuard } from './providers/routing/can-deactivate-detail-guard';\r\n\r\nconst IMPORTS = [\r\n    ClarityModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    NgSelectModule,\r\n    NgxPaginationModule,\r\n    TranslateModule,\r\n    OverlayModule,\r\n    DragDropModule,\r\n];\r\n\r\nconst DECLARATIONS = [\r\n    ActionBarComponent,\r\n    ActionBarLeftComponent,\r\n    ActionBarRightComponent,\r\n    AssetPreviewComponent,\r\n    AssetPreviewDialogComponent,\r\n    AssetSearchInputComponent,\r\n    ConfigurableInputComponent,\r\n    AffixedInputComponent,\r\n    ChipComponent,\r\n    CurrencyInputComponent,\r\n    LocaleCurrencyNamePipe,\r\n    CustomerLabelComponent,\r\n    CustomFieldControlComponent,\r\n    DataTableComponent,\r\n    DataTableColumnComponent,\r\n    FacetValueSelectorComponent,\r\n    ItemsPerPageControlsComponent,\r\n    PaginationControlsComponent,\r\n    TableRowActionComponent,\r\n    FacetValueChipComponent,\r\n    FileSizePipe,\r\n    FormFieldComponent,\r\n    FormFieldControlDirective,\r\n    FormItemComponent,\r\n    ModalDialogComponent,\r\n    PercentageSuffixInputComponent,\r\n    DialogComponentOutletComponent,\r\n    DialogButtonsDirective,\r\n    DialogTitleDirective,\r\n    SelectToggleComponent,\r\n    LanguageSelectorComponent,\r\n    RichTextEditorComponent,\r\n    SimpleDialogComponent,\r\n    TitleInputComponent,\r\n    SentenceCasePipe,\r\n    DropdownComponent,\r\n    DropdownMenuComponent,\r\n    SortPipe,\r\n    DropdownTriggerDirective,\r\n    DropdownItemDirective,\r\n    OrderStateLabelComponent,\r\n    FormattedAddressComponent,\r\n    LabeledDataComponent,\r\n    StringToColorPipe,\r\n    ObjectTreeComponent,\r\n    IfPermissionsDirective,\r\n    IfMultichannelDirective,\r\n    HasPermissionPipe,\r\n    ActionBarItemsComponent,\r\n    DisabledDirective,\r\n    AssetFileInputComponent,\r\n    AssetGalleryComponent,\r\n    AssetPickerDialogComponent,\r\n    EntityInfoComponent,\r\n    DatetimePickerComponent,\r\n    ChannelBadgeComponent,\r\n    ChannelAssignmentControlComponent,\r\n    ChannelLabelPipe,\r\n    IfDefaultChannelActiveDirective,\r\n    ExtensionHostComponent,\r\n    CustomFieldLabelPipe,\r\n    FocalPointControlComponent,\r\n    AssetPreviewPipe,\r\n    LinkDialogComponent,\r\n    ExternalImageDialogComponent,\r\n    TimeAgoPipe,\r\n    DurationPipe,\r\n    EmptyPlaceholderComponent,\r\n    TimelineEntryComponent,\r\n    HistoryEntryDetailComponent,\r\n    EditNoteDialogComponent,\r\n    ProductSelectorFormInputComponent,\r\n    StateI18nTokenPipe,\r\n    ProductSelectorComponent,\r\n    HelpTooltipComponent,\r\n    CustomerGroupFormInputComponent,\r\n    AddressFormComponent,\r\n    LocaleDatePipe,\r\n    LocaleCurrencyPipe,\r\n    LocaleLanguageNamePipe,\r\n    TagSelectorComponent,\r\n    ManageTagsDialogComponent,\r\n    RelationSelectorDialogComponent,\r\n    RelationCardComponent,\r\n];\r\n\r\nconst DYNAMIC_FORM_INPUTS = [\r\n    TextFormInputComponent,\r\n    PasswordFormInputComponent,\r\n    NumberFormInputComponent,\r\n    DateFormInputComponent,\r\n    CurrencyFormInputComponent,\r\n    BooleanFormInputComponent,\r\n    SelectFormInputComponent,\r\n    FacetValueFormInputComponent,\r\n    DynamicFormInputComponent,\r\n    RelationFormInputComponent,\r\n    RelationAssetInputComponent,\r\n    RelationProductInputComponent,\r\n    RelationProductVariantInputComponent,\r\n    RelationCustomerInputComponent,\r\n    RelationCardPreviewDirective,\r\n    RelationCardDetailDirective,\r\n    RelationSelectorDialogComponent,\r\n    TextareaFormInputComponent,\r\n];\r\n\r\n@NgModule({\r\n    imports: [IMPORTS],\r\n    exports: [...IMPORTS, ...DECLARATIONS, ...DYNAMIC_FORM_INPUTS],\r\n    declarations: [...DECLARATIONS, ...DYNAMIC_FORM_INPUTS],\r\n    providers: [\r\n        // This needs to be shared, since lazy-loaded\r\n        // modules have their own entryComponents which\r\n        // are unknown to the CoreModule instance of ModalService.\r\n        // See https://github.com/angular/angular/issues/14324#issuecomment-305650763\r\n        ModalService,\r\n        CanDeactivateDetailGuard,\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class SharedModule {}\r\n","import { PlatformLocation } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateCompiler, TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { MessageFormatConfig, MESSAGE_FORMAT_CONFIG } from 'ngx-translate-messageformat-compiler';\r\n\r\nimport { getAppConfig } from './app.config';\r\nimport { getDefaultUiLanguage } from './common/utilities/get-default-ui-language';\r\nimport { AppShellComponent } from './components/app-shell/app-shell.component';\r\nimport { BreadcrumbComponent } from './components/breadcrumb/breadcrumb.component';\r\nimport { ChannelSwitcherComponent } from './components/channel-switcher/channel-switcher.component';\r\nimport { MainNavComponent } from './components/main-nav/main-nav.component';\r\nimport { NotificationComponent } from './components/notification/notification.component';\r\nimport { OverlayHostComponent } from './components/overlay-host/overlay-host.component';\r\nimport { ThemeSwitcherComponent } from './components/theme-switcher/theme-switcher.component';\r\nimport { UiLanguageSwitcherDialogComponent } from './components/ui-language-switcher-dialog/ui-language-switcher-dialog.component';\r\nimport { UserMenuComponent } from './components/user-menu/user-menu.component';\r\nimport { DataModule } from './data/data.module';\r\nimport { CustomHttpTranslationLoader } from './providers/i18n/custom-http-loader';\r\nimport { InjectableTranslateMessageFormatCompiler } from './providers/i18n/custom-message-format-compiler';\r\nimport { I18nService } from './providers/i18n/i18n.service';\r\nimport { LocalStorageService } from './providers/local-storage/local-storage.service';\r\nimport { registerDefaultFormInputs } from './shared/dynamic-form-inputs/register-dynamic-input-components';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        DataModule,\r\n        SharedModule,\r\n        BrowserAnimationsModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient, PlatformLocation],\r\n            },\r\n            compiler: { provide: TranslateCompiler, useClass: InjectableTranslateMessageFormatCompiler },\r\n        }),\r\n    ],\r\n    providers: [\r\n        { provide: MESSAGE_FORMAT_CONFIG, useFactory: getLocales },\r\n        registerDefaultFormInputs(),\r\n        Title,\r\n    ],\r\n    exports: [SharedModule, OverlayHostComponent],\r\n    declarations: [\r\n        AppShellComponent,\r\n        UserMenuComponent,\r\n        MainNavComponent,\r\n        BreadcrumbComponent,\r\n        OverlayHostComponent,\r\n        NotificationComponent,\r\n        UiLanguageSwitcherDialogComponent,\r\n        ChannelSwitcherComponent,\r\n        ThemeSwitcherComponent,\r\n    ],\r\n})\r\nexport class CoreModule {\r\n    constructor(\r\n        private i18nService: I18nService,\r\n        private localStorageService: LocalStorageService,\r\n        private titleService: Title,\r\n    ) {\r\n        this.initUiLanguages();\r\n        this.initUiTitle();\r\n    }\r\n\r\n    private initUiLanguages() {\r\n        const defaultLanguage = getDefaultUiLanguage();\r\n        const lastLanguage = this.localStorageService.get('uiLanguageCode');\r\n        const availableLanguages = getAppConfig().availableLanguages;\r\n\r\n        if (!availableLanguages.includes(defaultLanguage)) {\r\n            throw new Error(\r\n                `The defaultLanguage \"${defaultLanguage}\" must be one of the availableLanguages [${availableLanguages\r\n                    .map(l => `\"${l}\"`)\r\n                    .join(', ')}]`,\r\n            );\r\n        }\r\n        const uiLanguage =\r\n            lastLanguage && availableLanguages.includes(lastLanguage) ? lastLanguage : defaultLanguage;\r\n        this.localStorageService.set('uiLanguageCode', uiLanguage);\r\n        this.i18nService.setLanguage(uiLanguage);\r\n        this.i18nService.setDefaultLanguage(defaultLanguage);\r\n        this.i18nService.setAvailableLanguages(availableLanguages || [defaultLanguage]);\r\n    }\r\n\r\n    private initUiTitle() {\r\n        const title = getAppConfig().brand || 'VendureAdmin';\r\n\r\n        this.titleService.setTitle(title);\r\n    }\r\n}\r\n\r\nexport function HttpLoaderFactory(http: HttpClient, location: PlatformLocation) {\r\n    // Dynamically get the baseHref, which is configured in the angular.json file\r\n    const baseHref = location.getBaseHrefFromDOM();\r\n    return new CustomHttpTranslationLoader(http, baseHref + 'i18n-messages/');\r\n}\r\n\r\n/**\r\n * Returns the locales defined in the vendure-ui-config.json, ensuring that the\r\n * default language is the first item in the array as per the messageformat\r\n * documentation:\r\n *\r\n * > The default locale will be the first entry of the array\r\n * https://messageformat.github.io/messageformat/MessageFormat\r\n */\r\nexport function getLocales(): MessageFormatConfig {\r\n    const locales = getAppConfig().availableLanguages;\r\n    const defaultLanguage = getDefaultUiLanguage();\r\n    const localesWithoutDefault = locales.filter(l => l !== defaultLanguage);\r\n    return {\r\n        locales: [defaultLanguage, ...localesWithoutDefault],\r\n    };\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, CoreModule],\r\n    declarations: [AppComponent],\r\n    exports: [AppComponent],\r\n})\r\nexport class AppComponentModule {}\r\n","import { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, shareReplay, switchMap, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { DataService } from '../data/providers/data.service';\r\nimport { ServerConfigService } from '../data/server-config';\r\n\r\nimport { DeactivateAware } from './deactivate-aware';\r\nimport { CustomFieldConfig, CustomFields, LanguageCode } from './generated-types';\r\nimport { getDefaultUiLanguage } from './utilities/get-default-ui-language';\r\n\r\nexport abstract class BaseDetailComponent<Entity extends { id: string; updatedAt?: string }>\r\n    implements DeactivateAware {\r\n    entity$: Observable<Entity>;\r\n    availableLanguages$: Observable<LanguageCode[]>;\r\n    languageCode$: Observable<LanguageCode>;\r\n    isNew$: Observable<boolean>;\r\n    id: string;\r\n    abstract detailForm: FormGroup;\r\n    protected destroy$ = new Subject<void>();\r\n\r\n    protected constructor(\r\n        protected route: ActivatedRoute,\r\n        protected router: Router,\r\n        protected serverConfigService: ServerConfigService,\r\n        protected dataService: DataService,\r\n    ) {}\r\n\r\n    init() {\r\n        this.entity$ = this.route.data.pipe(\r\n            switchMap(data => (data.entity as Observable<Entity>).pipe(takeUntil(this.destroy$))),\r\n            tap(entity => (this.id = entity.id)),\r\n            shareReplay(1),\r\n        );\r\n        this.isNew$ = this.entity$.pipe(\r\n            map(entity => entity.id === ''),\r\n            shareReplay(1),\r\n        );\r\n        this.languageCode$ = this.route.paramMap.pipe(\r\n            map(paramMap => paramMap.get('lang')),\r\n            switchMap(lang => {\r\n                if (lang) {\r\n                    return of(lang as LanguageCode);\r\n                } else {\r\n                    return this.dataService.client.uiState().mapSingle(data => data.uiState.contentLanguage);\r\n                }\r\n            }),\r\n            distinctUntilChanged(),\r\n            shareReplay(1),\r\n        );\r\n\r\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\r\n\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(([entity, languageCode]) => {\r\n                this.setFormValues(entity, languageCode);\r\n                this.detailForm.markAsPristine();\r\n            });\r\n    }\r\n\r\n    destroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.setQueryParam('lang', code);\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n\r\n    canDeactivate(): boolean {\r\n        return this.detailForm && this.detailForm.pristine;\r\n    }\r\n\r\n    protected abstract setFormValues(entity: Entity, languageCode: LanguageCode): void;\r\n\r\n    protected getCustomFieldConfig(key: Exclude<keyof CustomFields, '__typename'>): CustomFieldConfig[] {\r\n        return this.serverConfigService.getCustomFieldsFor(key);\r\n    }\r\n\r\n    protected setQueryParam(key: string, value: any) {\r\n        this.router.navigate(\r\n            [\r\n                './',\r\n                {\r\n                    ...this.route.snapshot.params,\r\n                    [key]: value,\r\n                },\r\n            ],\r\n            {\r\n                relativeTo: this.route,\r\n                queryParamsHandling: 'merge',\r\n            },\r\n        );\r\n    }\r\n}\r\n","import {\r\n    ActivatedRouteSnapshot,\r\n    ActivationStart,\r\n    Resolve,\r\n    ResolveData,\r\n    Router,\r\n    RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Type } from '@vendure/common/lib/shared-types';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, shareReplay, take, takeUntil } from 'rxjs/operators';\r\n\r\nexport interface EntityResolveData<R> extends ResolveData {\r\n    entity: Type<BaseEntityResolver<R>>;\r\n}\r\n\r\nexport function createResolveData<T extends BaseEntityResolver<R>, R>(\r\n    resolver: Type<T>,\r\n): EntityResolveData<R> {\r\n    return {\r\n        entity: resolver,\r\n    };\r\n}\r\n\r\n/**\r\n * A base resolver for an entity detail route. Resolves to an observable of the given entity, or a \"blank\"\r\n * version if the route id equals \"create\".\r\n */\r\nexport class BaseEntityResolver<T> implements Resolve<Observable<T>> {\r\n    constructor(\r\n        protected router: Router,\r\n        private readonly emptyEntity: T,\r\n        private entityStream: (id: string) => Observable<T | null | undefined>,\r\n    ) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Observable<T>> {\r\n        const id = route.paramMap.get('id');\r\n\r\n        // Complete the entity stream upon navigating away\r\n        const navigateAway$ = this.router.events.pipe(filter(event => event instanceof ActivationStart));\r\n\r\n        if (id === 'create') {\r\n            return of(of(this.emptyEntity));\r\n        } else {\r\n            const stream = this.entityStream(id || '').pipe(\r\n                takeUntil(navigateAway$),\r\n                filter(notNullOrUndefined),\r\n                shareReplay(1),\r\n            );\r\n\r\n            return stream.pipe(\r\n                take(1),\r\n                map(() => stream),\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, QueryParamsHandling, Router } from '@angular/router';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, takeUntil } from 'rxjs/operators';\n\nimport { QueryResult } from '../data/query-result';\n\nexport type ListQueryFn<R> = (take: number, skip: number, ...args: any[]) => QueryResult<R, any>;\nexport type MappingFn<T, R> = (result: R) => { items: T[]; totalItems: number };\nexport type OnPageChangeFn<V> = (skip: number, take: number) => V;\n\n/**\n * This is a base class which implements the logic required to fetch and manipulate\n * a list of data from a query which returns a PaginatedList type.\n */\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport class BaseListComponent<ResultType, ItemType, VariableType = any> implements OnInit, OnDestroy {\n    result$: Observable<ResultType>;\n    items$: Observable<ItemType[]>;\n    totalItems$: Observable<number>;\n    itemsPerPage$: Observable<number>;\n    currentPage$: Observable<number>;\n    protected destroy$ = new Subject<void>();\n    private listQuery: QueryResult<ResultType, VariableType>;\n    private listQueryFn: ListQueryFn<ResultType>;\n    private mappingFn: MappingFn<ItemType, ResultType>;\n    private onPageChangeFn: OnPageChangeFn<VariableType> = (skip, take) =>\n        ({ options: { skip, take } } as any);\n    private refresh$ = new BehaviorSubject<undefined>(undefined);\n    private defaults: { take: number; skip: number } = { take: 10, skip: 0 };\n\n    constructor(protected router: Router, protected route: ActivatedRoute) {}\n\n    /**\n     * Sets the fetch function for the list being implemented.\n     */\n    setQueryFn(\n        listQueryFn: ListQueryFn<ResultType>,\n        mappingFn: MappingFn<ItemType, ResultType>,\n        onPageChangeFn?: OnPageChangeFn<VariableType>,\n        defaults?: { take: number; skip: number },\n    ) {\n        this.listQueryFn = listQueryFn;\n        this.mappingFn = mappingFn;\n        if (onPageChangeFn) {\n            this.onPageChangeFn = onPageChangeFn;\n        }\n        if (defaults) {\n            this.defaults = defaults;\n        }\n    }\n\n    ngOnInit() {\n        if (!this.listQueryFn) {\n            throw new Error(\n                `No listQueryFn has been defined. Please call super.setQueryFn() in the constructor.`,\n            );\n        }\n        this.listQuery = this.listQueryFn(this.defaults.take, this.defaults.skip);\n\n        const fetchPage = ([currentPage, itemsPerPage, _]: [number, number, undefined]) => {\n            const take = itemsPerPage;\n            const skip = (currentPage - 1) * itemsPerPage;\n            this.listQuery.ref.refetch(this.onPageChangeFn(skip, take));\n        };\n\n        this.result$ = this.listQuery.stream$.pipe(shareReplay(1));\n        this.items$ = this.result$.pipe(map(data => this.mappingFn(data).items));\n        this.totalItems$ = this.result$.pipe(map(data => this.mappingFn(data).totalItems));\n        this.currentPage$ = this.route.queryParamMap.pipe(\n            map(qpm => qpm.get('page')),\n            map(page => (!page ? 1 : +page)),\n            distinctUntilChanged(),\n        );\n        this.itemsPerPage$ = this.route.queryParamMap.pipe(\n            map(qpm => qpm.get('perPage')),\n            map(perPage => (!perPage ? this.defaults.take : +perPage)),\n            distinctUntilChanged(),\n        );\n\n        combineLatest(this.currentPage$, this.itemsPerPage$, this.refresh$)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(fetchPage);\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.listQuery.completed$.next();\n    }\n\n    setPageNumber(page: number) {\n        this.setQueryParam('page', page, { replaceUrl: true });\n    }\n\n    setItemsPerPage(perPage: number) {\n        this.setQueryParam('perPage', perPage, { replaceUrl: true });\n    }\n\n    /**\n     * Re-fetch the current page\n     */\n    refresh() {\n        this.refresh$.next(undefined);\n    }\n\n    protected setQueryParam(\n        hash: { [key: string]: any },\n        options?: { replaceUrl?: boolean; queryParamsHandling?: QueryParamsHandling },\n    );\n    protected setQueryParam(\n        key: string,\n        value: any,\n        options?: { replaceUrl?: boolean; queryParamsHandling?: QueryParamsHandling },\n    );\n    protected setQueryParam(\n        keyOrHash: string | { [key: string]: any },\n        valueOrOptions?: any,\n        maybeOptions?: { replaceUrl?: boolean; queryParamsHandling?: QueryParamsHandling },\n    ) {\n        const paramsObject = typeof keyOrHash === 'string' ? { [keyOrHash]: valueOrOptions } : keyOrHash;\n        const options = (typeof keyOrHash === 'string' ? maybeOptions : valueOrOptions) ?? {};\n        this.router.navigate(['./'], {\n            queryParams: typeof keyOrHash === 'string' ? { [keyOrHash]: valueOrOptions } : keyOrHash,\n            relativeTo: this.route,\n            queryParamsHandling: 'merge',\n            ...options,\n        });\n    }\n}\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { BreadcrumbValue } from '../components/breadcrumb/breadcrumb.component';\n\n/**\n * Creates an observable of breadcrumb links for use in the route config of a detail route.\n */\nexport function detailBreadcrumb<T>(options: {\n    entity: Observable<T>;\n    id: string;\n    breadcrumbKey: string;\n    getName: (entity: T) => string;\n    route: string;\n}): Observable<BreadcrumbValue> {\n    return options.entity.pipe(\n        map(entity => {\n            let label = '';\n            if (options.id === 'create') {\n                label = 'common.create';\n            } else {\n                label = `${options.getName(entity)}`;\n            }\n            return [\n                {\n                    label: options.breadcrumbKey,\n                    link: ['../', options.route],\n                },\n                {\n                    label,\n                    link: [options.route, options.id],\n                },\n            ];\n        }),\n    );\n}\n","import { LanguageCode } from '../generated-types';\r\n\r\nexport type Translation<T> = T & { languageCode: LanguageCode };\r\nexport type PossiblyTranslatable<T> = { translations?: Array<Translation<T>> | null };\r\nexport type TranslationOf<E> = E extends PossiblyTranslatable<infer U> ? U : undefined;\r\n\r\n/**\r\n * @description\r\n * Given a translatable entity, returns the translation in the specified LanguageCode if\r\n * one exists.\r\n */\r\nexport function findTranslation<E extends PossiblyTranslatable<any>>(\r\n    entity: E | undefined,\r\n    languageCode: LanguageCode,\r\n): TranslationOf<E> | undefined {\r\n    return (entity?.translations || []).find(t => t.languageCode === languageCode);\r\n}\r\n","import { CustomFieldsObject, CustomFieldType } from '@vendure/common/lib/shared-types';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\n\r\nimport { CustomFieldConfig, LanguageCode } from '../generated-types';\r\n\r\nimport { findTranslation } from './find-translation';\r\n\r\nexport interface TranslatableUpdateOptions<T extends { translations: any[] } & MayHaveCustomFields> {\r\n    translatable: T;\r\n    updatedFields: { [key: string]: any };\r\n    languageCode: LanguageCode;\r\n    customFieldConfig?: CustomFieldConfig[];\r\n    defaultTranslation?: Partial<T['translations'][number]>;\r\n}\r\n\r\nexport type MayHaveCustomFields = {\r\n    customFields?: { [key: string]: any };\r\n};\r\n\r\n/**\r\n * When updating an entity which has translations, the value from the form will pertain to the current\r\n * languageCode. This function ensures that the \"translations\" array is correctly set based on the\r\n * existing languages and the updated values in the specified language.\r\n */\r\nexport function createUpdatedTranslatable<T extends { translations: any[] } & MayHaveCustomFields>(\r\n    options: TranslatableUpdateOptions<T>,\r\n): T {\r\n    const { translatable, updatedFields, languageCode, customFieldConfig, defaultTranslation } = options;\r\n    const currentTranslation =\r\n        findTranslation(translatable, languageCode) || defaultTranslation || ({} as any);\r\n    const index = translatable.translations.indexOf(currentTranslation);\r\n    const newTranslation = patchObject(currentTranslation, updatedFields);\r\n    const newCustomFields: CustomFieldsObject = {};\r\n    const newTranslatedCustomFields: CustomFieldsObject = {};\r\n    if (customFieldConfig && updatedFields.hasOwnProperty('customFields')) {\r\n        for (const field of customFieldConfig) {\r\n            const value = updatedFields.customFields[field.name];\r\n            if (field.type === 'localeString') {\r\n                newTranslatedCustomFields[field.name] = value;\r\n            } else {\r\n                newCustomFields[field.name] =\r\n                    value === '' ? getDefaultValue(field.type as CustomFieldType) : value;\r\n            }\r\n        }\r\n        newTranslation.customFields = newTranslatedCustomFields;\r\n    }\r\n    const newTranslatable = {\r\n        ...(patchObject(translatable, updatedFields) as any),\r\n        ...{ translations: translatable.translations.slice() },\r\n    };\r\n    if (customFieldConfig) {\r\n        newTranslatable.customFields = newCustomFields;\r\n    }\r\n    if (index !== -1) {\r\n        newTranslatable.translations.splice(index, 1, newTranslation);\r\n    } else {\r\n        newTranslatable.translations.push(newTranslation);\r\n    }\r\n    return newTranslatable;\r\n}\r\n\r\nfunction getDefaultValue(type: CustomFieldType): any {\r\n    switch (type) {\r\n        case 'localeString':\r\n        case 'string':\r\n        case 'text':\r\n            return '';\r\n        case 'boolean':\r\n            return false;\r\n        case 'float':\r\n        case 'int':\r\n            return 0;\r\n        case 'datetime':\r\n            return new Date();\r\n        case 'relation':\r\n            return null;\r\n        default:\r\n            assertNever(type);\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a shallow clone of `obj` with any properties contained in `patch` overwriting\r\n * those of `obj`.\r\n */\r\nfunction patchObject<T extends { [key: string]: any }>(obj: T, patch: { [key: string]: any }): T {\r\n    const clone: any = Object.assign({}, obj);\r\n    Object.keys(clone).forEach(key => {\r\n        if (patch.hasOwnProperty(key)) {\r\n            clone[key] = patch[key];\r\n        }\r\n    });\r\n    return clone;\r\n}\r\n","// Auto-generated by the set-version.js script.\nexport const ADMIN_UI_VERSION = '1.1.5';\n","import { Injectable } from '@angular/core';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\n\nimport { Permission } from '../../common/generated-types';\n\nimport {\n    DashboardWidgetConfig,\n    DashboardWidgetWidth,\n    WidgetLayout,\n    WidgetLayoutDefinition,\n} from './dashboard-widget-types';\n\n/**\n * Responsible for registering dashboard widget components and querying for layouts.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class DashboardWidgetService {\n    private registry = new Map<string, DashboardWidgetConfig>();\n    private layoutDef: WidgetLayoutDefinition = [];\n\n    registerWidget(id: string, config: DashboardWidgetConfig) {\n        if (this.registry.has(id)) {\n            throw new Error(`A dashboard widget with the id \"${id}\" already exists`);\n        }\n\n        this.registry.set(id, config);\n    }\n\n    getAvailableIds(currentUserPermissions: Permission[]): string[] {\n        const hasAllPermissions = (requiredPerms: string[], userPerms: string[]): boolean => {\n            return requiredPerms.every(p => userPerms.includes(p));\n        };\n\n        return [...this.registry.entries()]\n            .filter(([id, config]) => {\n                return (\n                    !config.requiresPermissions ||\n                    hasAllPermissions(config.requiresPermissions, currentUserPermissions)\n                );\n            })\n            .map(([id]) => id);\n    }\n\n    getWidgetById(id: string) {\n        if (!this.registry.has(id)) {\n            throw new Error(`No widget was found with the id \"${id}\"`);\n        }\n        return this.registry.get(id);\n    }\n\n    setDefaultLayout(layout: WidgetLayoutDefinition) {\n        this.layoutDef = layout;\n    }\n\n    getDefaultLayout(): WidgetLayoutDefinition {\n        return this.layoutDef;\n    }\n\n    getWidgetLayout(layoutDef?: WidgetLayoutDefinition): WidgetLayout {\n        const intermediateLayout = (layoutDef || this.layoutDef)\n            .map(({ id, width }) => {\n                const config = this.registry.get(id);\n                if (!config) {\n                    return this.idNotFound(id);\n                }\n                return { id, config, width: this.getValidWidth(id, config, width) };\n            })\n            .filter(notNullOrUndefined);\n\n        return this.buildLayout(intermediateLayout);\n    }\n\n    private idNotFound(id: string): undefined {\n        // tslint:disable-next-line:no-console\n        console.error(\n            `No dashboard widget was found with the id \"${id}\"\\nAvailable ids: ${[...this.registry.keys()]\n                .map(_id => `\"${_id}\"`)\n                .join(', ')}`,\n        );\n        return;\n    }\n\n    private getValidWidth(\n        id: string,\n        config: DashboardWidgetConfig,\n        targetWidth: DashboardWidgetWidth,\n    ): DashboardWidgetWidth {\n        let adjustedWidth = targetWidth;\n        const supportedWidths = config.supportedWidths?.length\n            ? config.supportedWidths\n            : ([3, 4, 6, 8, 12] as DashboardWidgetWidth[]);\n        if (!supportedWidths.includes(targetWidth)) {\n            // Fall back to the largest supported width\n            const sortedWidths = supportedWidths.sort((a, b) => a - b);\n            const fallbackWidth = supportedWidths[sortedWidths.length - 1];\n            // tslint:disable-next-line:no-console\n            console.error(\n                `The \"${id}\" widget does not support the specified width (${targetWidth}).\\nSupported widths are: [${sortedWidths.join(\n                    ', ',\n                )}].\\nUsing (${fallbackWidth}) instead.`,\n            );\n            adjustedWidth = fallbackWidth;\n        }\n        return adjustedWidth;\n    }\n\n    private buildLayout(intermediateLayout: WidgetLayout[number]): WidgetLayout {\n        const layout: WidgetLayout = [];\n        let row: WidgetLayout[number] = [];\n        for (const { id, config, width } of intermediateLayout) {\n            const rowSize = row.reduce((size, c) => size + c.width, 0);\n            if (12 < rowSize + width) {\n                layout.push(row);\n                row = [];\n            }\n            row.push({ id, config, width });\n        }\n        layout.push(row);\n        return layout;\n    }\n}\n","import { APP_INITIALIZER, FactoryProvider } from '@angular/core';\n\nimport { DashboardWidgetConfig, WidgetLayoutDefinition } from './dashboard-widget-types';\nimport { DashboardWidgetService } from './dashboard-widget.service';\n\n/**\n * @description\n * Registers a dashboard widget. Once registered, the widget can be set as part of the default\n * (using {@link setDashboardWidgetLayout}).\n */\nexport function registerDashboardWidget(id: string, config: DashboardWidgetConfig): FactoryProvider {\n    return {\n        provide: APP_INITIALIZER,\n        multi: true,\n        useFactory: (dashboardWidgetService: DashboardWidgetService) => () => {\n            dashboardWidgetService.registerWidget(id, config);\n        },\n        deps: [DashboardWidgetService],\n    };\n}\n\n/**\n * @description\n * Sets the default widget layout for the Admin UI dashboard.\n */\nexport function setDashboardWidgetLayout(layoutDef: WidgetLayoutDefinition): FactoryProvider {\n    return {\n        provide: APP_INITIALIZER,\n        multi: true,\n        useFactory: (dashboardWidgetService: DashboardWidgetService) => () => {\n            dashboardWidgetService.setDefaultLayout(layoutDef);\n        },\n        deps: [DashboardWidgetService],\n    };\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { getAppConfig } from '../../app.config';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n/**\r\n * This guard prevents unauthorized users from accessing any routes which require\r\n * authorization.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    private readonly externalLoginUrl: string | undefined;\r\n\r\n    constructor(private router: Router, private authService: AuthService) {\r\n        this.externalLoginUrl = getAppConfig().loginUrl;\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot): Observable<boolean> {\r\n        return this.authService.checkAuthenticatedStatus().pipe(\r\n            tap(authenticated => {\r\n                if (!authenticated) {\r\n                    if (this.externalLoginUrl) {\r\n                        window.location.href = this.externalLoginUrl;\r\n                    } else {\r\n                        this.router.navigate(['/login']);\r\n                    }\r\n                }\r\n            }),\r\n        );\r\n    }\r\n}\r\n","export interface ExtensionHostOptions {\r\n    extensionUrl: string;\r\n    openInNewTab?: boolean;\r\n}\r\n\r\nexport class ExtensionHostConfig {\r\n    public extensionUrl: string;\r\n    public openInNewTab: boolean;\r\n    constructor(options: ExtensionHostOptions) {\r\n        this.extensionUrl = options.extensionUrl;\r\n        this.openInNewTab = options.openInNewTab != null ? options.openInNewTab : false;\r\n    }\r\n}\r\n","import { Route } from '@angular/router';\r\n\r\nimport { ExtensionHostConfig, ExtensionHostOptions } from './extension-host-config';\r\nimport { ExtensionHostComponent } from './extension-host.component';\r\n\r\nexport interface ExternalFrameOptions extends ExtensionHostOptions {\r\n    path: string;\r\n    breadcrumbLabel: string;\r\n}\r\n\r\n/**\r\n * This function is used to conveniently configure a UI extension route to\r\n * host an external URL from the Admin UI using the {@link ExtensionHostComponent}\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@NgModule({\r\n *     imports: [\r\n *         RouterModule.forChild([\r\n *             hostExternalFrame({\r\n *                 path: '',\r\n *                 breadcrumbLabel: 'Vue.js App',\r\n *                 extensionUrl: './assets/vue-app/index.html',\r\n *                 openInNewTab: false,\r\n *             }),\r\n *         ]),\r\n *     ],\r\n * })\r\n export class VueUiExtensionModule {}\r\n * ```\r\n */\r\nexport function hostExternalFrame(options: ExternalFrameOptions): Route {\r\n    const pathMatch = options.path === '' ? 'full' : 'prefix';\r\n    return {\r\n        path: options.path,\r\n        pathMatch,\r\n        component: ExtensionHostComponent,\r\n        data: {\r\n            breadcrumb: [\r\n                {\r\n                    label: options.breadcrumbLabel,\r\n                    link: ['./'],\r\n                },\r\n            ],\r\n            extensionHostConfig: new ExtensionHostConfig(options),\r\n        },\r\n    };\r\n}\r\n","// This file was generated by the build-public-api.ts script\nexport * from './app.component.module';\nexport * from './app.component';\nexport * from './app.config';\nexport * from './common/base-detail.component';\nexport * from './common/base-entity-resolver';\nexport * from './common/base-list.component';\nexport * from './common/component-registry-types';\nexport * from './common/deactivate-aware';\nexport * from './common/detail-breadcrumb';\nexport * from './common/generated-types';\nexport * from './common/introspection-result-wrapper';\nexport * from './common/introspection-result';\nexport * from './common/single-search-selection-model';\nexport * from './common/utilities/configurable-operation-utils';\nexport * from './common/utilities/create-updated-translatable';\nexport * from './common/utilities/find-translation';\nexport * from './common/utilities/flatten-facet-values';\nexport * from './common/utilities/get-default-ui-language';\nexport * from './common/utilities/interpolate-description';\nexport * from './common/utilities/string-to-color';\nexport * from './common/version';\nexport * from './components/app-shell/app-shell.component';\nexport * from './components/breadcrumb/breadcrumb.component';\nexport * from './components/channel-switcher/channel-switcher.component';\nexport * from './components/main-nav/main-nav.component';\nexport * from './components/notification/notification.component';\nexport * from './components/overlay-host/overlay-host.component';\nexport * from './components/theme-switcher/theme-switcher.component';\nexport * from './components/ui-language-switcher-dialog/ui-language-switcher-dialog.component';\nexport * from './components/user-menu/user-menu.component';\nexport * from './core.module';\nexport * from './data/check-jobs-link';\nexport * from './data/client-state/client-defaults';\nexport * from './data/client-state/client-resolvers';\nexport * from './data/data.module';\nexport * from './data/definitions/administrator-definitions';\nexport * from './data/definitions/auth-definitions';\nexport * from './data/definitions/client-definitions';\nexport * from './data/definitions/collection-definitions';\nexport * from './data/definitions/customer-definitions';\nexport * from './data/definitions/facet-definitions';\nexport * from './data/definitions/order-definitions';\nexport * from './data/definitions/product-definitions';\nexport * from './data/definitions/promotion-definitions';\nexport * from './data/definitions/settings-definitions';\nexport * from './data/definitions/shared-definitions';\nexport * from './data/definitions/shipping-definitions';\nexport * from './data/omit-typename-link';\nexport * from './data/providers/administrator-data.service';\nexport * from './data/providers/auth-data.service';\nexport * from './data/providers/base-data.service';\nexport * from './data/providers/client-data.service';\nexport * from './data/providers/collection-data.service';\nexport * from './data/providers/customer-data.service';\nexport * from './data/providers/data.service';\nexport * from './data/providers/facet-data.service';\nexport * from './data/providers/fetch-adapter';\nexport * from './data/providers/interceptor';\nexport * from './data/providers/order-data.service';\nexport * from './data/providers/product-data.service';\nexport * from './data/providers/promotion-data.service';\nexport * from './data/providers/settings-data.service';\nexport * from './data/providers/shipping-method-data.service';\nexport * from './data/query-result';\nexport * from './data/server-config';\nexport * from './data/utils/add-custom-fields';\nexport * from './data/utils/get-server-location';\nexport * from './data/utils/remove-readonly-custom-fields';\nexport * from './data/utils/transform-relation-custom-field-inputs';\nexport * from './providers/auth/auth.service';\nexport * from './providers/component-registry/component-registry.service';\nexport * from './providers/custom-field-component/custom-field-component.service';\nexport * from './providers/dashboard-widget/dashboard-widget-types';\nexport * from './providers/dashboard-widget/dashboard-widget.service';\nexport * from './providers/dashboard-widget/register-dashboard-widget';\nexport * from './providers/guard/auth.guard';\nexport * from './providers/health-check/health-check.service';\nexport * from './providers/i18n/custom-http-loader';\nexport * from './providers/i18n/custom-message-format-compiler';\nexport * from './providers/i18n/i18n.service';\nexport * from './providers/job-queue/job-queue.service';\nexport * from './providers/local-storage/local-storage.service';\nexport * from './providers/modal/modal.service';\nexport * from './providers/nav-builder/nav-builder-types';\nexport * from './providers/nav-builder/nav-builder.service';\nexport * from './providers/notification/notification.service';\nexport * from './providers/overlay-host/overlay-host.service';\nexport * from './shared/components/action-bar/action-bar.component';\nexport * from './shared/components/action-bar-items/action-bar-items.component';\nexport * from './shared/components/address-form/address-form.component';\nexport * from './shared/components/affixed-input/affixed-input.component';\nexport * from './shared/components/affixed-input/percentage-suffix-input.component';\nexport * from './shared/components/asset-file-input/asset-file-input.component';\nexport * from './shared/components/asset-gallery/asset-gallery.component';\nexport * from './shared/components/asset-picker-dialog/asset-picker-dialog.component';\nexport * from './shared/components/asset-preview/asset-preview.component';\nexport * from './shared/components/asset-preview-dialog/asset-preview-dialog.component';\nexport * from './shared/components/asset-search-input/asset-search-input.component';\nexport * from './shared/components/channel-assignment-control/channel-assignment-control.component';\nexport * from './shared/components/channel-badge/channel-badge.component';\nexport * from './shared/components/chip/chip.component';\nexport * from './shared/components/configurable-input/configurable-input.component';\nexport * from './shared/components/currency-input/currency-input.component';\nexport * from './shared/components/custom-field-control/custom-field-control.component';\nexport * from './shared/components/customer-label/customer-label.component';\nexport * from './shared/components/data-table/data-table-column.component';\nexport * from './shared/components/data-table/data-table.component';\nexport * from './shared/components/datetime-picker/constants';\nexport * from './shared/components/datetime-picker/datetime-picker.component';\nexport * from './shared/components/datetime-picker/datetime-picker.service';\nexport * from './shared/components/datetime-picker/types';\nexport * from './shared/components/dropdown/dropdown-item.directive';\nexport * from './shared/components/dropdown/dropdown-menu.component';\nexport * from './shared/components/dropdown/dropdown-trigger.directive';\nexport * from './shared/components/dropdown/dropdown.component';\nexport * from './shared/components/edit-note-dialog/edit-note-dialog.component';\nexport * from './shared/components/empty-placeholder/empty-placeholder.component';\nexport * from './shared/components/entity-info/entity-info.component';\nexport * from './shared/components/extension-host/extension-host-config';\nexport * from './shared/components/extension-host/extension-host.component';\nexport * from './shared/components/extension-host/extension-host.service';\nexport * from './shared/components/extension-host/host-external-frame';\nexport * from './shared/components/facet-value-chip/facet-value-chip.component';\nexport * from './shared/components/facet-value-selector/facet-value-selector.component';\nexport * from './shared/components/focal-point-control/focal-point-control.component';\nexport * from './shared/components/form-field/form-field-control.directive';\nexport * from './shared/components/form-field/form-field.component';\nexport * from './shared/components/form-item/form-item.component';\nexport * from './shared/components/formatted-address/formatted-address.component';\nexport * from './shared/components/help-tooltip/help-tooltip.component';\nexport * from './shared/components/history-entry-detail/history-entry-detail.component';\nexport * from './shared/components/items-per-page-controls/items-per-page-controls.component';\nexport * from './shared/components/labeled-data/labeled-data.component';\nexport * from './shared/components/language-selector/language-selector.component';\nexport * from './shared/components/manage-tags-dialog/manage-tags-dialog.component';\nexport * from './shared/components/modal-dialog/dialog-buttons.directive';\nexport * from './shared/components/modal-dialog/dialog-component-outlet.component';\nexport * from './shared/components/modal-dialog/dialog-title.directive';\nexport * from './shared/components/modal-dialog/modal-dialog.component';\nexport * from './shared/components/object-tree/object-tree.component';\nexport * from './shared/components/order-state-label/order-state-label.component';\nexport * from './shared/components/pagination-controls/pagination-controls.component';\nexport * from './shared/components/product-selector/product-selector.component';\nexport * from './shared/components/rich-text-editor/external-image-dialog/external-image-dialog.component';\nexport * from './shared/components/rich-text-editor/link-dialog/link-dialog.component';\nexport * from './shared/components/rich-text-editor/prosemirror/inputrules';\nexport * from './shared/components/rich-text-editor/prosemirror/keymap';\nexport * from './shared/components/rich-text-editor/prosemirror/menu/images';\nexport * from './shared/components/rich-text-editor/prosemirror/menu/links';\nexport * from './shared/components/rich-text-editor/prosemirror/menu/menu-common';\nexport * from './shared/components/rich-text-editor/prosemirror/menu/menu';\nexport * from './shared/components/rich-text-editor/prosemirror/plugins/link-select-plugin';\nexport * from './shared/components/rich-text-editor/prosemirror/prosemirror.service';\nexport * from './shared/components/rich-text-editor/prosemirror/types';\nexport * from './shared/components/rich-text-editor/prosemirror/utils';\nexport * from './shared/components/rich-text-editor/rich-text-editor.component';\nexport * from './shared/components/select-toggle/select-toggle.component';\nexport * from './shared/components/simple-dialog/simple-dialog.component';\nexport * from './shared/components/table-row-action/table-row-action.component';\nexport * from './shared/components/tag-selector/tag-selector.component';\nexport * from './shared/components/timeline-entry/timeline-entry.component';\nexport * from './shared/components/title-input/title-input.component';\nexport * from './shared/directives/disabled.directive';\nexport * from './shared/directives/if-default-channel-active.directive';\nexport * from './shared/directives/if-directive-base';\nexport * from './shared/directives/if-multichannel.directive';\nexport * from './shared/directives/if-permissions.directive';\nexport * from './shared/dynamic-form-inputs/boolean-form-input/boolean-form-input.component';\nexport * from './shared/dynamic-form-inputs/currency-form-input/currency-form-input.component';\nexport * from './shared/dynamic-form-inputs/customer-group-form-input/customer-group-form-input.component';\nexport * from './shared/dynamic-form-inputs/date-form-input/date-form-input.component';\nexport * from './shared/dynamic-form-inputs/dynamic-form-input/dynamic-form-input.component';\nexport * from './shared/dynamic-form-inputs/facet-value-form-input/facet-value-form-input.component';\nexport * from './shared/dynamic-form-inputs/number-form-input/number-form-input.component';\nexport * from './shared/dynamic-form-inputs/password-form-input/password-form-input.component';\nexport * from './shared/dynamic-form-inputs/product-selector-form-input/product-selector-form-input.component';\nexport * from './shared/dynamic-form-inputs/register-dynamic-input-components';\nexport * from './shared/dynamic-form-inputs/relation-form-input/asset/relation-asset-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/customer/relation-customer-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/product/relation-product-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/product-variant/relation-product-variant-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/relation-card/relation-card.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/relation-form-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/relation-selector-dialog/relation-selector-dialog.component';\nexport * from './shared/dynamic-form-inputs/select-form-input/select-form-input.component';\nexport * from './shared/dynamic-form-inputs/text-form-input/text-form-input.component';\nexport * from './shared/dynamic-form-inputs/textarea-form-input/textarea-form-input.component';\nexport * from './shared/pipes/asset-preview.pipe';\nexport * from './shared/pipes/channel-label.pipe';\nexport * from './shared/pipes/custom-field-label.pipe';\nexport * from './shared/pipes/duration.pipe';\nexport * from './shared/pipes/file-size.pipe';\nexport * from './shared/pipes/has-permission.pipe';\nexport * from './shared/pipes/locale-base.pipe';\nexport * from './shared/pipes/locale-currency-name.pipe';\nexport * from './shared/pipes/locale-currency.pipe';\nexport * from './shared/pipes/locale-date.pipe';\nexport * from './shared/pipes/locale-language-name.pipe';\nexport * from './shared/pipes/sentence-case.pipe';\nexport * from './shared/pipes/sort.pipe';\nexport * from './shared/pipes/state-i18n-token.pipe';\nexport * from './shared/pipes/string-to-color.pipe';\nexport * from './shared/pipes/time-ago.pipe';\nexport * from './shared/providers/routing/can-deactivate-detail-guard';\nexport * from './shared/shared.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}