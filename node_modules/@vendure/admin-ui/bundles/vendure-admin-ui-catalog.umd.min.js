!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/router"),require("@vendure/admin-ui/core"),require("@biesbjerg/ngx-translate-extract-marker"),require("rxjs/operators"),require("@angular/forms"),require("rxjs"),require("@vendure/common/lib/normalize-string"),require("@vendure/common/lib/shared-utils"),require("@angular/common"),require("@vendure/common/lib/shared-constants"),require("@vendure/common/lib/unique"),require("@vendure/common/lib/pick"),require("@angular/cdk/drag-drop"),require("@angular/cdk/overlay"),require("@ng-select/ng-select")):"function"==typeof define&&define.amd?define("@vendure/admin-ui/catalog",["exports","@angular/core","@angular/router","@vendure/admin-ui/core","@biesbjerg/ngx-translate-extract-marker","rxjs/operators","@angular/forms","rxjs","@vendure/common/lib/normalize-string","@vendure/common/lib/shared-utils","@angular/common","@vendure/common/lib/shared-constants","@vendure/common/lib/unique","@vendure/common/lib/pick","@angular/cdk/drag-drop","@angular/cdk/overlay","@ng-select/ng-select"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).vendure=e.vendure||{},e.vendure["admin-ui"]=e.vendure["admin-ui"]||{},e.vendure["admin-ui"].catalog={}),e.ng.core,e.ng.router,e.vendure["admin-ui"].core,e.ngxTranslateExtractMarker,e.rxjs.operators,e.ng.forms,e.rxjs,e.normalizeString,e.sharedUtils,e.ng.common,e.sharedConstants,e.unique,e.pick,e.ng.cdk.dragDrop,e.ng.cdk.overlay,e.ngSelect)}(this,(function(e,t,n,r,a,o,i,s,c,l,d,u,p,m,g,v,f){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var h=function(e,t){return(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};function y(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}h(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function b(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{c(r.next(e))}catch(e){o(e)}}function s(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,s)}c((r=r.apply(e,t||[])).next())}))}function C(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(a=i.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}Object.create;function F(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function I(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)i.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return i}function k(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(I(arguments[t]));return e}Object.create;var P=function(e){function t(t,n,r,a,o,s){var c=e.call(this,n,t,r,o)||this;return c.notificationService=a,c.dataService=o,c.formBuilder=s,c.detailForm=new i.FormGroup({}),c.customFields=c.getCustomFieldConfig("Asset"),c}return y(t,e),t.prototype.ngOnInit=function(){this.detailForm=new i.FormGroup({name:new i.FormControl(""),tags:new i.FormControl([]),customFields:this.formBuilder.group(this.customFields.reduce((function(e,t){var n;return Object.assign(Object.assign({},e),((n={})[t.name]="",n))}),{}))}),this.init()},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.onAssetChange=function(e){var t,n;null===(t=this.detailForm.get("name"))||void 0===t||t.setValue(e.name),null===(n=this.detailForm.get("tags"))||void 0===n||n.setValue(e.tags),this.detailForm.markAsDirty()},t.prototype.save=function(){var e=this;this.dataService.product.updateAsset({id:this.id,name:this.detailForm.value.name,tags:this.detailForm.value.tags,customFields:this.detailForm.value.customFields}).subscribe((function(){e.notificationService.success(a.marker("common.notify-update-success"),{entity:"Asset"})}),(function(t){e.notificationService.error(a.marker("common.notify-update-error"),{entity:"Asset"})}))},t.prototype.setFormValues=function(e,t){var n,r,a,o;if(null===(a=this.detailForm.get("name"))||void 0===a||a.setValue(e.name),null===(o=this.detailForm.get("tags"))||void 0===o||o.setValue(e.tags),this.customFields.length){var i=this.detailForm.get("customFields");try{for(var s=F(this.customFields),c=s.next();!c.done;c=s.next()){var l=c.value.name,d=e.customFields[l],u=i.get(l);u&&u.patchValue(d)}}catch(e){n={error:e}}finally{try{c&&!c.done&&(r=s.return)&&r.call(s)}finally{if(n)throw n.error}}}},t}(r.BaseDetailComponent);P.decorators=[{type:t.Component,args:[{selector:"vdr-asset-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="asset-detail"></vdr-action-bar-items>\r\n        <button\r\n            *vdrIfPermissions="[\'UpdateCatalog\', \'UpdateAsset\']"\r\n            class="btn btn-primary"\r\n            (click)="save()"\r\n            [disabled]="detailForm.invalid || detailForm.pristine"\r\n        >\r\n            {{ \'common.update\' | translate }}\r\n        </button>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n<vdr-asset-preview\r\n    [asset]="entity$ | async"\r\n    [editable]="true"\r\n    [customFields]="customFields"\r\n    [customFieldsForm]="detailForm.get(\'customFields\')"\r\n    (assetChange)="onAssetChange($event)"\r\n></vdr-asset-preview>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[":host{display:flex;flex-direction:column;height:100%}"]}]}],P.ctorParameters=function(){return[{type:n.Router},{type:n.ActivatedRoute},{type:r.ServerConfigService},{type:r.NotificationService},{type:r.DataService},{type:i.FormBuilder}]};var x=function(e){function t(t,n,a,o,i){var c=e.call(this,o,i)||this;return c.notificationService=t,c.modalService=n,c.dataService=a,c.searchTerm$=new s.BehaviorSubject(void 0),c.filterByTags$=new s.BehaviorSubject(void 0),c.uploading=!1,e.prototype.setQueryFn.call(c,(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return(e=c.dataService.product).getAssetList.apply(e,k(t))}),(function(e){return e.assets}),(function(e,t){var n,a=c.searchTerm$.value,o=null===(n=c.filterByTags$.value)||void 0===n?void 0:n.map((function(e){return e.value}));return{options:Object.assign(Object.assign({skip:e,take:t},a?{filter:{name:{contains:a}}}:{}),{sort:{createdAt:r.SortOrder.DESC},tags:o,tagsOperator:r.LogicalOperator.AND})}}),{take:25,skip:0}),c}return y(t,e),t.prototype.ngOnInit=function(){var t=this;e.prototype.ngOnInit.call(this),this.paginationConfig$=s.combineLatest(this.itemsPerPage$,this.currentPage$,this.totalItems$).pipe(o.map((function(e){var t=I(e,3);return{itemsPerPage:t[0],currentPage:t[1],totalItems:t[2]}}))),this.searchTerm$.pipe(o.debounceTime(250),o.takeUntil(this.destroy$)).subscribe((function(){return t.refresh()})),this.filterByTags$.pipe(o.takeUntil(this.destroy$)).subscribe((function(){return t.refresh()})),this.allTags$=this.dataService.product.getTagList().mapStream((function(e){return e.tags.items}))},t.prototype.filesSelected=function(t){var n=this;t.length&&(this.uploading=!0,this.dataService.product.createAssets(t).pipe(o.finalize((function(){return n.uploading=!1}))).subscribe((function(t){var r,o,i=t.createAssets,s=0;try{for(var c=F(i),l=c.next();!l.done;l=c.next()){var d=l.value;switch(d.__typename){case"Asset":s++;break;case"MimeTypeError":n.notificationService.error(d.message)}}}catch(e){r={error:e}}finally{try{l&&!l.done&&(o=c.return)&&o.call(c)}finally{if(r)throw r.error}}0<s&&(e.prototype.refresh.call(n),n.notificationService.success(a.marker("asset.notify-create-assets-success"),{count:s}))})))},t.prototype.deleteAssets=function(e){var t=this;this.showModalAndDelete(e.map((function(e){return e.id}))).pipe(o.switchMap((function(n){return n.result===r.DeletionResult.DELETED?[!0]:t.showModalAndDelete(e.map((function(e){return e.id})),n.message||"").pipe(o.map((function(e){return e.result===r.DeletionResult.DELETED})))}))).subscribe((function(){t.notificationService.success(a.marker("common.notify-delete-success"),{entity:"Assets"}),t.refresh()}),(function(e){t.notificationService.error(a.marker("common.notify-delete-error"),{entity:"Assets"})}))},t.prototype.showModalAndDelete=function(e,t){var n=this;return this.modalService.dialog({title:a.marker("catalog.confirm-delete-assets"),translationVars:{count:e.length},body:t,buttons:[{type:"secondary",label:a.marker("common.cancel")},{type:"danger",label:a.marker("common.delete"),returnValue:!0}]}).pipe(o.switchMap((function(r){return r?n.dataService.product.deleteAssets(e,!!t):s.EMPTY})),o.map((function(e){return e.deleteAssets})))},t}(r.BaseListComponent);x.decorators=[{type:t.Component,args:[{selector:"vdr-asset-list",template:'<vdr-action-bar>\r\n    <vdr-ab-left [grow]="true">\r\n        <vdr-asset-search-input\r\n            class="pr4 mt1"\r\n            [tags]="allTags$ | async"\r\n            (searchTermChange)="searchTerm$.next($event)"\r\n            (tagsChange)="filterByTags$.next($event)"\r\n        ></vdr-asset-search-input>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="asset-list"></vdr-action-bar-items>\r\n        <vdr-asset-file-input\r\n            (selectFiles)="filesSelected($event)"\r\n            [uploading]="uploading"\r\n            dropZoneTarget=".content-area"\r\n        ></vdr-asset-file-input>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-asset-gallery\r\n    [assets]="(items$ | async)! | paginate: (paginationConfig$ | async) || {}"\r\n    [multiSelect]="true"\r\n    [canDelete]="[\'DeleteCatalog\', \'DeleteAsset\'] | hasPermission"\r\n    (deleteAssets)="deleteAssets($event)"\r\n></vdr-asset-gallery>\r\n\r\n<div class="paging-controls">\r\n    <vdr-items-per-page-controls\r\n        [itemsPerPage]="itemsPerPage$ | async"\r\n        (itemsPerPageChange)="setItemsPerPage($event)"\r\n    ></vdr-items-per-page-controls>\r\n\r\n    <vdr-pagination-controls\r\n        [currentPage]="currentPage$ | async"\r\n        [itemsPerPage]="itemsPerPage$ | async"\r\n        [totalItems]="totalItems$ | async"\r\n        (pageChange)="setPageNumber($event)"\r\n    ></vdr-pagination-controls>\r\n</div>\r\n',styles:[":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}"]}]}],x.ctorParameters=function(){return[{type:r.NotificationService},{type:r.ModalService},{type:r.DataService},{type:n.Router},{type:n.ActivatedRoute}]};var S=function(e){function t(t,n,a,o,s,c,l,d){var u=e.call(this,n,t,a,s)||this;return u.changeDetector=o,u.dataService=s,u.formBuilder=c,u.notificationService=l,u.modalService=d,u.assetChanges={},u.filters=[],u.allFilters=[],u.updatePermission=[r.Permission.UpdateCatalog,r.Permission.UpdateCollection],u.customFields=u.getCustomFieldConfig("Collection"),u.detailForm=u.formBuilder.group({name:["",i.Validators.required],slug:"",description:"",visible:!1,filters:u.formBuilder.array([]),customFields:u.formBuilder.group(u.customFields.reduce((function(e,t){var n;return Object.assign(Object.assign({},e),((n={})[t.name]="",n))}),{}))}),u}return y(t,e),t.prototype.ngOnInit=function(){var e=this;this.init(),this.dataService.collection.getCollectionFilters().single$.subscribe((function(t){e.allFilters=t.collectionFilters}))},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.getFilterDefinition=function(e){return this.allFilters.find((function(t){return t.code===e.code}))},t.prototype.customFieldIsSet=function(e){return!!this.detailForm.get(["customFields",e])},t.prototype.assetsChanged=function(){return!!Object.values(this.assetChanges).length},t.prototype.updateSlug=function(e){var t=this;s.combineLatest(this.entity$,this.languageCode$).pipe(o.take(1)).subscribe((function(n){var a=I(n,2),o=a[0],i=a[1],s=t.detailForm.get(["slug"]),l=r.findTranslation(o,i),d=!l||!l.slug;s&&s.pristine&&d&&s.setValue(c.normalizeString(""+e,"-"))}))},t.prototype.addFilter=function(e){var t=this.detailForm.get("filters");if(-1===t.value.findIndex((function(t){return t.code===e.code}))){var n=e.args.reduce((function(e,t){var n;return Object.assign(Object.assign({},e),((n={})[t.name]=r.getConfigArgValue(t.value),n))}),{});t.push(this.formBuilder.control({code:e.code,args:n})),this.filters.push({code:e.code,args:e.args.map((function(e){return{name:e.name,value:r.getConfigArgValue(e.value)}}))})}},t.prototype.removeFilter=function(e){var t=this.detailForm.get("filters"),n=t.value.findIndex((function(t){return t.code===e.code}));-1!==n&&(t.removeAt(n),this.filters.splice(n,1))},t.prototype.create=function(){var e=this;this.detailForm.dirty&&s.combineLatest(this.entity$,this.languageCode$).pipe(o.take(1),o.mergeMap((function(t){var n=I(t,2),r=n[0],a=n[1],o=e.getUpdatedCollection(r,e.detailForm,a),i=e.route.snapshot.paramMap.get("parentId");return i&&(o.parentId=i),e.dataService.collection.createCollection(o)}))).subscribe((function(t){e.notificationService.success(a.marker("common.notify-create-success"),{entity:"Collection"}),e.assetChanges={},e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.createCollection.id],{relativeTo:e.route})}),(function(t){e.notificationService.error(a.marker("common.notify-create-error"),{entity:"Collection"})}))},t.prototype.save=function(){var e=this;s.combineLatest(this.entity$,this.languageCode$).pipe(o.take(1),o.mergeMap((function(t){var n=I(t,2),r=n[0],a=n[1],o=e.getUpdatedCollection(r,e.detailForm,a);return e.dataService.collection.updateCollection(o)}))).subscribe((function(){e.assetChanges={},e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.notificationService.success(a.marker("common.notify-update-success"),{entity:"Collection"}),e.contentsComponent.refresh()}),(function(t){e.notificationService.error(a.marker("common.notify-update-error"),{entity:"Collection"})}))},t.prototype.canDeactivate=function(){return e.prototype.canDeactivate.call(this)&&!this.assetChanges.assets&&!this.assetChanges.featuredAsset},t.prototype.setFormValues=function(e,t){var n,a,o=this,i=r.findTranslation(e,t);if(this.detailForm.patchValue({name:i?i.name:"",slug:i?i.slug:"",description:i?i.description:"",visible:!e.isPrivate}),e.filters.forEach((function(e){return o.addFilter(e)})),this.customFields.length){var s=this.detailForm.get(["customFields"]);try{for(var c=F(this.customFields),l=c.next();!l.done;l=c.next()){var d=l.value,u=d.name,p="localeString"===d.type?i.customFields[u]:e.customFields[u],m=s.get(u);m&&m.patchValue(p)}}catch(e){n={error:e}}finally{try{l&&!l.done&&(a=c.return)&&a.call(c)}finally{if(n)throw n.error}}}},t.prototype.getUpdatedCollection=function(e,t,n){var a,o,i=r.createUpdatedTranslatable({translatable:e,updatedFields:t.value,customFieldConfig:this.customFields,languageCode:n,defaultTranslation:{languageCode:n,name:e.name||"",slug:e.slug||"",description:e.description||""}});return Object.assign(Object.assign({},i),{assetIds:null===(a=this.assetChanges.assets)||void 0===a?void 0:a.map((function(e){return e.id})),featuredAssetId:null===(o=this.assetChanges.featuredAsset)||void 0===o?void 0:o.id,isPrivate:!t.value.visible,filters:this.mapOperationsToInputs(this.filters,this.detailForm.value.filters)})},t.prototype.mapOperationsToInputs=function(e,t){return e.map((function(e,n){return{code:e.code,arguments:Object.values(t[n].args).map((function(t,n){return{name:e.args[n].name,value:r.encodeConfigArgValue(t)}}))}}))},t}(r.BaseDetailComponent);S.decorators=[{type:t.Component,args:[{selector:"vdr-collection-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n        <vdr-language-selector\r\n            [disabled]="isNew$ | async"\r\n            [availableLanguageCodes]="availableLanguages$ | async"\r\n            [currentLanguageCode]="languageCode$ | async"\r\n            (languageCodeChange)="setLanguage($event)"\r\n        ></vdr-language-selector>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="collection-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="detailForm.invalid || detailForm.pristine"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                *vdrIfPermissions="updatePermission"\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                [disabled]="(detailForm.invalid || detailForm.pristine) && !assetsChanged()"\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm" *ngIf="entity$ | async as category">\r\n    <div class="clr-row">\r\n        <div class="clr-col">\r\n            <vdr-form-field [label]="\'catalog.visibility\' | translate" for="visibility">\r\n                <clr-toggle-wrapper>\r\n                    <input\r\n                        type="checkbox"\r\n                        clrToggle\r\n                        formControlName="visible"\r\n                        id="visibility"\r\n                        [vdrDisabled]="!(updatePermission | hasPermission)"\r\n                    />\r\n                    <label class="visible-toggle">\r\n                        <ng-container *ngIf="detailForm.value.visible; else private">{{ \'catalog.public\' | translate }}</ng-container>\r\n                        <ng-template #private>{{ \'catalog.private\' | translate }}</ng-template>\r\n                    </label>\r\n                </clr-toggle-wrapper>\r\n            </vdr-form-field>\r\n            <vdr-form-field [label]="\'common.name\' | translate" for="name">\r\n                <input\r\n                    id="name"\r\n                    type="text"\r\n                    formControlName="name"\r\n                    [readonly]="!(updatePermission | hasPermission)"\r\n                    (input)="updateSlug($event.target.value)"\r\n                />\r\n            </vdr-form-field>\r\n            <vdr-form-field\r\n                [label]="\'catalog.slug\' | translate"\r\n                for="slug"\r\n                [errors]="{ pattern: (\'catalog.slug-pattern-error\' | translate) }"\r\n            >\r\n                <input\r\n                    id="slug"\r\n                    type="text"\r\n                    formControlName="slug"\r\n                    [readonly]="!(updatePermission | hasPermission)"\r\n                    pattern="[a-z0-9_-]+"\r\n                />\r\n            </vdr-form-field>\r\n            <vdr-rich-text-editor\r\n                formControlName="description"\r\n                [readonly]="!(updatePermission | hasPermission)"\r\n                [label]="\'common.description\' | translate"\r\n            ></vdr-rich-text-editor>\r\n\r\n            <section formGroupName="customFields" *ngIf="customFields.length">\r\n                <label>{{ \'common.custom-fields\' | translate }}</label>\r\n                <ng-container *ngFor="let customField of customFields">\r\n                    <vdr-custom-field-control\r\n                        *ngIf="customFieldIsSet(customField.name)"\r\n                        entityName="Collection"\r\n                        [customFieldsFormGroup]="detailForm.get([\'customFields\'])"\r\n                        [customField]="customField"\r\n                    ></vdr-custom-field-control>\r\n                </ng-container>\r\n            </section>\r\n        </div>\r\n        <div class="clr-col-md-auto">\r\n            <vdr-product-assets\r\n                [assets]="category.assets"\r\n                [featuredAsset]="category.featuredAsset"\r\n                (change)="assetChanges = $event"\r\n            ></vdr-product-assets>\r\n        </div>\r\n    </div>\r\n    <div class="clr-row" formArrayName="filters">\r\n        <div class="clr-col">\r\n            <label>{{ \'catalog.filters\' | translate }}</label>\r\n            <ng-container *ngFor="let filter of filters; index as i">\r\n                <vdr-configurable-input\r\n                    (remove)="removeFilter($event)"\r\n                    [operation]="filter"\r\n                    [operationDefinition]="getFilterDefinition(filter)"\r\n                    [formControlName]="i"\r\n                    [readonly]="!(updatePermission | hasPermission)"\r\n                ></vdr-configurable-input>\r\n            </ng-container>\r\n\r\n            <div *vdrIfPermissions="updatePermission">\r\n                <vdr-dropdown>\r\n                    <button class="btn btn-outline" vdrDropdownTrigger>\r\n                        <clr-icon shape="plus"></clr-icon>\r\n                        {{ \'marketing.add-condition\' | translate }}\r\n                    </button>\r\n                    <vdr-dropdown-menu vdrPosition="bottom-left">\r\n                        <button\r\n                            *ngFor="let filter of allFilters"\r\n                            type="button"\r\n                            vdrDropdownItem\r\n                            (click)="addFilter(filter)"\r\n                        >\r\n                            {{ filter.description }}\r\n                        </button>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class="clr-col">\r\n            <vdr-collection-contents [collectionId]="id" #collectionContents>\r\n                <ng-template let-count>\r\n                    <div class="contents-title">\r\n                        {{ \'catalog.collection-contents\' | translate }} ({{\r\n                            \'common.results-count\' | translate: { count: count }\r\n                        }})\r\n                    </div>\r\n                </ng-template>\r\n            </vdr-collection-contents>\r\n        </div>\r\n    </div>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".visible-toggle{margin-top:-3px!important}"]}]}],S.ctorParameters=function(){return[{type:n.Router},{type:n.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:i.FormBuilder},{type:r.NotificationService},{type:r.ModalService}]},S.propDecorators={contentsComponent:[{type:t.ViewChild,args:["collectionContents"]}]};var w=function(){function e(e,t,n,r,a,o){this.dataService=e,this.notificationService=t,this.modalService=n,this.router=r,this.route=a,this.serverConfigService=o,this.expandAll=!1}return e.prototype.ngOnInit=function(){var e=this;this.queryResult=this.dataService.collection.getCollections(1e3,0).refetchOnChannelChange(),this.items$=this.queryResult.mapStream((function(e){return e.collections.items})).pipe(o.shareReplay(1)),this.activeCollectionId$=this.route.paramMap.pipe(o.map((function(e){return e.get("contents")})),o.distinctUntilChanged()),this.activeCollectionTitle$=s.combineLatest(this.activeCollectionId$,this.items$).pipe(o.map((function(e){var t=I(e,2),n=t[0],r=t[1];if(n){var a=r.find((function(e){return e.id===n}));return a?a.name:""}return""}))),this.availableLanguages$=this.serverConfigService.getAvailableLanguages(),this.contentLanguage$=this.dataService.client.uiState().mapStream((function(e){return e.uiState.contentLanguage})).pipe(o.tap((function(){return e.refresh()})))},e.prototype.ngOnDestroy=function(){this.queryResult.completed$.next()},e.prototype.onRearrange=function(e){var t=this;this.dataService.collection.moveCollection([e]).subscribe({next:function(){t.notificationService.success(a.marker("common.notify-saved-changes")),t.refresh()},error:function(e){t.notificationService.error(a.marker("common.notify-save-changes-error"))}})},e.prototype.deleteCollection=function(e){var t=this;this.items$.pipe(o.take(1),o.map((function(t){return-1<t.findIndex((function(t){return t.parent&&t.parent.id===e}))})),o.switchMap((function(e){return t.modalService.dialog({title:a.marker("catalog.confirm-delete-collection"),body:e?a.marker("catalog.confirm-delete-collection-and-children-body"):void 0,buttons:[{type:"secondary",label:a.marker("common.cancel")},{type:"danger",label:a.marker("common.delete"),returnValue:!0}]})})),o.switchMap((function(n){return n?t.dataService.collection.deleteCollection(e):s.EMPTY}))).subscribe((function(){t.notificationService.success(a.marker("common.notify-delete-success"),{entity:"Collection"}),t.refresh()}),(function(e){t.notificationService.error(a.marker("common.notify-delete-error"),{entity:"Collection"})}))},e.prototype.closeContents=function(){var e=Object.assign({},this.route.snapshot.params);delete e.contents,this.router.navigate(["./",e],{relativeTo:this.route,queryParamsHandling:"preserve"})},e.prototype.setLanguage=function(e){this.dataService.client.setContentLanguage(e).subscribe()},e.prototype.refresh=function(){this.queryResult.ref.refetch()},e}();w.decorators=[{type:t.Component,args:[{selector:"vdr-collection-list",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <div class="flex center wrap">\r\n            <vdr-language-selector\r\n                class="mt2"\r\n                [availableLanguageCodes]="availableLanguages$ | async"\r\n                [currentLanguageCode]="contentLanguage$ | async"\r\n                (languageCodeChange)="setLanguage($event)"\r\n            ></vdr-language-selector>\r\n            <clr-checkbox-wrapper\r\n                class="expand-all-toggle ml3"\r\n                [ngClass]="(availableLanguages$ | async)?.length === 1 ? \'mt3\' : \'mt1\'"\r\n            >\r\n                <input type="checkbox" clrCheckbox [(ngModel)]="expandAll" />\r\n                <label>{{ \'catalog.expand-all-collections\' | translate }}</label>\r\n            </clr-checkbox-wrapper>\r\n        </div>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="collection-list"></vdr-action-bar-items>\r\n        <a\r\n            class="btn btn-primary"\r\n            *vdrIfPermissions="[\'CreateCatalog\', \'CreateCollection\']"\r\n            [routerLink]="[\'./create\']"\r\n        >\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'catalog.create-new-collection\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n<div class="collection-wrapper">\r\n    <vdr-collection-tree\r\n        [collections]="items$ | async"\r\n        [activeCollectionId]="activeCollectionId$ | async"\r\n        [expandAll]="expandAll"\r\n        (rearrange)="onRearrange($event)"\r\n        (deleteCollection)="deleteCollection($event)"\r\n    ></vdr-collection-tree>\r\n\r\n    <div class="collection-contents" [class.expanded]="activeCollectionId$ | async">\r\n        <vdr-collection-contents [collectionId]="activeCollectionId$ | async">\r\n            <ng-template let-count>\r\n                <div class="collection-title">\r\n                    {{ activeCollectionTitle$ | async }} ({{\r\n                        \'common.results-count\' | translate: { count: count }\r\n                    }})\r\n                </div>\r\n                <button type="button" class="close-button" (click)="closeContents()">\r\n                    <clr-icon shape="close"></clr-icon>\r\n                </button>\r\n            </ng-template>\r\n        </vdr-collection-contents>\r\n    </div>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[":host{height:100%;display:flex;flex-direction:column}.expand-all-toggle{display:block}.collection-wrapper{display:flex;height:calc(100% - 50px)}.collection-wrapper vdr-collection-tree{flex:1;height:100%;overflow:auto}.collection-wrapper .collection-contents{height:100%;width:0;opacity:0;visibility:hidden;overflow:auto;transition:width .3s,opacity .2s .3s,visibility 0s .3s}.collection-wrapper .collection-contents.expanded{width:30vw;visibility:visible;opacity:1;padding-left:12px}.collection-wrapper .collection-contents .close-button{margin:0;background:none;border:none;cursor:pointer}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}"]}]}],w.ctorParameters=function(){return[{type:r.DataService},{type:r.NotificationService},{type:r.ModalService},{type:n.Router},{type:n.ActivatedRoute},{type:r.ServerConfigService}]};var V=function(e){function t(t,n,a,o,s,c,l,d){var u=e.call(this,n,t,a,s)||this;return u.changeDetector=o,u.dataService=s,u.formBuilder=c,u.notificationService=l,u.modalService=d,u.updatePermission=[r.Permission.UpdateCatalog,r.Permission.UpdateFacet],u.customFields=u.getCustomFieldConfig("Facet"),u.customValueFields=u.getCustomFieldConfig("FacetValue"),u.detailForm=u.formBuilder.group({facet:u.formBuilder.group({code:["",i.Validators.required],name:"",visible:!0,customFields:u.formBuilder.group(u.customFields.reduce((function(e,t){var n;return Object.assign(Object.assign({},e),((n={})[t.name]="",n))}),{}))}),values:u.formBuilder.array([])}),u}return y(t,e),t.prototype.ngOnInit=function(){this.init()},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.updateCode=function(e,t){if(!e){var n=this.detailForm.get(["facet","code"]);n&&n.pristine&&n.setValue(c.normalizeString(t,"-"))}},t.prototype.updateValueCode=function(e,t,n){if(!e){var r=this.detailForm.get(["values",n,"code"]);r&&r.pristine&&r.setValue(c.normalizeString(t,"-"))}},t.prototype.customFieldIsSet=function(e){return!!this.detailForm.get(["facet","customFields",e])},t.prototype.customValueFieldIsSet=function(e,t){return!!this.detailForm.get(["values",e,"customFields",t])},t.prototype.getValuesFormArray=function(){return this.detailForm.get("values")},t.prototype.addFacetValue=function(){var e=this.detailForm.get("values");e&&(e.insert(e.length,this.formBuilder.group({id:"",name:["",i.Validators.required],code:""})),this.values.push({name:"",code:""}))},t.prototype.create=function(){var e=this,t=this.detailForm.get("facet");t&&t.dirty&&s.combineLatest(this.entity$,this.languageCode$).pipe(o.take(1),o.mergeMap((function(n){var r=I(n,2),a=r[0],o=r[1],i=e.getUpdatedFacet(a,t,o);return e.dataService.facet.createFacet(i)})),o.switchMap((function(t){return e.dataService.facet.getAllFacets().single$.pipe(o.mapTo(t))}))).subscribe((function(t){e.notificationService.success(a.marker("common.notify-create-success"),{entity:"Facet"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.createFacet.id],{relativeTo:e.route})}),(function(t){e.notificationService.error(a.marker("common.notify-create-error"),{entity:"Facet"})}))},t.prototype.save=function(){var e=this;s.combineLatest(this.entity$,this.languageCode$).pipe(o.take(1),o.mergeMap((function(t){var n=I(t,2),r=n[0],a=n[1],i=e.detailForm.get("facet"),c=[];if(i&&i.dirty){var l=e.getUpdatedFacet(r,i,a);l&&c.push(e.dataService.facet.updateFacet(l))}var d=e.detailForm.get("values");if(d&&d.dirty){var u=d.controls.filter((function(e){return!e.value.id})).map((function(e){return{facetId:r.id,code:e.value.code,translations:[{name:e.value.name,languageCode:a}]}}));u.length&&c.push(e.dataService.facet.createFacetValues(u).pipe(o.switchMap((function(){return e.dataService.facet.getFacet(e.id).single$}))));var p=e.getUpdatedFacetValues(r,d,a);p.length&&c.push(e.dataService.facet.updateFacetValues(p))}return s.forkJoin(c)})),o.switchMap((function(){return e.dataService.facet.getAllFacets().single$}))).subscribe((function(){e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.notificationService.success(a.marker("common.notify-update-success"),{entity:"Facet"})}),(function(t){e.notificationService.error(a.marker("common.notify-update-error"),{entity:"Facet"})}))},t.prototype.deleteFacetValue=function(e,t){var n=this;if(!e){var i=this.detailForm.get("values");return i&&i.removeAt(t),void this.values.splice(t,1)}this.showModalAndDelete(e).pipe(o.switchMap((function(t){return t.result===r.DeletionResult.DELETED?[!0]:n.showModalAndDelete(e,t.message||"").pipe(o.map((function(e){return e.result===r.DeletionResult.DELETED})))})),o.switchMap((function(e){return e?n.dataService.facet.getFacet(n.id).single$:[]}))).subscribe((function(){n.notificationService.success(a.marker("common.notify-delete-success"),{entity:"FacetValue"})}),(function(e){n.notificationService.error(a.marker("common.notify-delete-error"),{entity:"FacetValue"})}))},t.prototype.showModalAndDelete=function(e,t){var n=this;return this.modalService.dialog({title:a.marker("catalog.confirm-delete-facet-value"),body:t,buttons:[{type:"secondary",label:a.marker("common.cancel")},{type:"danger",label:a.marker("common.delete"),returnValue:!0}]}).pipe(o.switchMap((function(r){return r?n.dataService.facet.deleteFacetValues([e],!!t):s.EMPTY})),o.map((function(e){return e.deleteFacetValues[0]})))},t.prototype.setFormValues=function(e,t){var n,a,o,s=this,c=r.findTranslation(e,t);if(this.detailForm.patchValue({facet:{code:e.code,visible:!e.isPrivate,name:null!==(o=null==c?void 0:c.name)&&void 0!==o?o:""}}),this.customFields.length){var l=this.detailForm.get(["facet","customFields"]);try{for(var d=F(this.customFields),u=d.next();!u.done;u=d.next()){var p=u.value,m=p.name,g="localeString"===p.type?c.customFields[m]:e.customFields[m],v=l.get(m);v&&v.patchValue(g)}}catch(e){n={error:e}}finally{try{u&&!u.done&&(a=d.return)&&a.call(d)}finally{if(n)throw n.error}}}var f=this.detailForm.get("values");this.values=k(e.values),e.values.forEach((function(e,n){var a,o,c=r.findTranslation(e,t),l={id:e.id,code:e.code,name:c?c.name:""},d=f.at(n);if(d?d.setValue(l):f.insert(n,s.formBuilder.group(l)),s.customValueFields.length){var u=s.detailForm.get(["values",n,"customFields"]);if(u||(u=new i.FormGroup({}),s.detailForm.get(["values",n]).addControl("customFields",u)),u)try{for(var p=F(s.customValueFields),m=p.next();!m.done;m=p.next()){var g=m.value,v=g.name,h="localeString"===g.type?c.customFields[v]:e.customFields[v],y=u.get(v);y?y.setValue(h):u.addControl(v,new i.FormControl(h))}}catch(e){a={error:e}}finally{try{m&&!m.done&&(o=p.return)&&o.call(p)}finally{if(a)throw a.error}}}}))},t.prototype.getUpdatedFacet=function(e,t,n){var a=r.createUpdatedTranslatable({translatable:e,updatedFields:t.value,customFieldConfig:this.customFields,languageCode:n,defaultTranslation:{languageCode:n,name:e.name||""}});return a.isPrivate=!t.value.visible,a},t.prototype.getUpdatedFacetValues=function(e,t,n){var o=this,i=e.values.filter((function(e,n){var r=t.get(n.toString());return r&&r.dirty&&r.value.id})),s=t.controls.filter((function(e){return e.dirty&&e.value.id})).map((function(e){return e.value}));if(i.length!==s.length)throw new Error(a.marker("error.facet-value-form-values-do-not-match"));return i.map((function(e,t){return r.createUpdatedTranslatable({translatable:e,updatedFields:s[t],customFieldConfig:o.customValueFields,languageCode:n,defaultTranslation:{languageCode:n,name:""}})})).filter(l.notNullOrUndefined)},t}(r.BaseDetailComponent);V.decorators=[{type:t.Component,args:[{selector:"vdr-facet-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n        <vdr-language-selector\r\n            [disabled]="isNew$ | async"\r\n            [availableLanguageCodes]="availableLanguages$ | async"\r\n            [currentLanguageCode]="languageCode$ | async"\r\n            (languageCodeChange)="setLanguage($event)"\r\n        ></vdr-language-selector>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="facet-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="detailForm.invalid || detailForm.pristine"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                *vdrIfPermissions="updatePermission"\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                [disabled]="detailForm.invalid || detailForm.pristine"\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm" *ngIf="entity$ | async as facet">\r\n    <section class="form-block" formGroupName="facet">\r\n        <vdr-form-field [label]="\'catalog.visibility\' | translate" for="visibility">\r\n            <clr-toggle-wrapper>\r\n                <input\r\n                    type="checkbox"\r\n                    clrToggle\r\n                    [vdrDisabled]="!(updatePermission | hasPermission)"\r\n                    formControlName="visible"\r\n                    id="visibility"\r\n                />\r\n                <label class="visible-toggle">\r\n                    <ng-container *ngIf="detailForm.value.facet.visible; else private">{{ \'catalog.public\' | translate }}</ng-container>\r\n                    <ng-template #private>{{ \'catalog.private\' | translate }}</ng-template>\r\n                </label>\r\n            </clr-toggle-wrapper>\r\n        </vdr-form-field>\r\n        <vdr-form-field [label]="\'common.name\' | translate" for="name">\r\n            <input\r\n                id="name"\r\n                type="text"\r\n                formControlName="name"\r\n                [readonly]="!(updatePermission | hasPermission)"\r\n                (input)="updateCode(facet.code, $event.target.value)"\r\n            />\r\n        </vdr-form-field>\r\n        <vdr-form-field\r\n            [label]="\'common.code\' | translate"\r\n            for="code"\r\n            [readOnlyToggle]="updatePermission | hasPermission"\r\n        >\r\n            <input\r\n                id="code"\r\n                type="text"\r\n                [readonly]="!(updatePermission | hasPermission)"\r\n                formControlName="code"\r\n            />\r\n        </vdr-form-field>\r\n\r\n        <section formGroupName="customFields" *ngIf="customFields.length">\r\n            <label>{{ \'common.custom-fields\' | translate }}</label>\r\n            <ng-container *ngFor="let customField of customFields">\r\n                <vdr-custom-field-control\r\n                    *ngIf="customFieldIsSet(customField.name)"\r\n                    entityName="Facet"\r\n                    [customFieldsFormGroup]="detailForm.get([\'facet\', \'customFields\'])"\r\n                    [customField]="customField"\r\n                ></vdr-custom-field-control>\r\n            </ng-container>\r\n        </section>\r\n    </section>\r\n\r\n    <section class="form-block" *ngIf="!(isNew$ | async)">\r\n        <label>{{ \'catalog.facet-values\' | translate }}</label>\r\n\r\n        <table class="facet-values-list table" formArrayName="values" *ngIf="0 < getValuesFormArray().length">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>{{ \'common.name\' | translate }}</th>\r\n                    <th>{{ \'common.code\' | translate }}</th>\r\n                    <ng-container *ngFor="let customField of customValueFields">\r\n                        <th>{{ customField.name }}</th>\r\n                    </ng-container>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr\r\n                    class="facet-value"\r\n                    *ngFor="let value of values; let i = index"\r\n                    [formGroupName]="i"\r\n                >\r\n                    <td class="align-middle">\r\n                        <vdr-entity-info [entity]="value"></vdr-entity-info>\r\n                    </td>\r\n                    <td class="align-middle">\r\n                        <input\r\n                            type="text"\r\n                            formControlName="name"\r\n                            [readonly]="!(updatePermission | hasPermission)"\r\n                            (input)="updateValueCode(facet.values[i]?.code, $event.target.value, i)"\r\n                        />\r\n                    </td>\r\n                    <td class="align-middle"><input type="text" formControlName="code" readonly /></td>\r\n                    <ng-container *ngFor="let customField of customValueFields">\r\n                        <td class="align-middle">\r\n                            <vdr-custom-field-control\r\n                                *ngIf="customValueFieldIsSet(i, customField.name)"\r\n                                entityName="FacetValue"\r\n                                [showLabel]="false"\r\n                                [customFieldsFormGroup]="detailForm.get([\'values\', i, \'customFields\'])"\r\n                                [customField]="customField"\r\n                            ></vdr-custom-field-control>\r\n                        </td>\r\n                    </ng-container>\r\n                    <td class="align-middle">\r\n                        <vdr-dropdown>\r\n                            <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                                {{ \'common.actions\' | translate }}\r\n                                <clr-icon shape="caret down"></clr-icon>\r\n                            </button>\r\n                            <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                                <button\r\n                                    type="button"\r\n                                    class="delete-button"\r\n                                    (click)="deleteFacetValue(facet.values[i]?.id, i)"\r\n                                    [disabled]="!(updatePermission | hasPermission)"\r\n                                    vdrDropdownItem\r\n                                >\r\n                                    <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                                    {{ \'common.delete\' | translate }}\r\n                                </button>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div>\r\n            <button\r\n                type="button"\r\n                class="btn btn-secondary"\r\n                *vdrIfPermissions="[\'CreateCatalog\', \'CreateFacet\']"\r\n                (click)="addFacetValue()"\r\n            >\r\n                <clr-icon shape="add"></clr-icon>\r\n                {{ \'catalog.add-facet-value\' | translate }}\r\n            </button>\r\n        </div>\r\n    </section>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".visible-toggle{margin-top:-3px!important}"]}]}],V.ctorParameters=function(){return[{type:n.Router},{type:n.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:i.FormBuilder},{type:r.NotificationService},{type:r.ModalService}]};var D=function(e){function t(t,n,r,a,o,i){var s=e.call(this,o,i)||this;return s.dataService=t,s.modalService=n,s.notificationService=r,s.serverConfigService=a,s.initialLimit=3,s.displayLimit={},e.prototype.setQueryFn.call(s,(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return(e=s.dataService.facet).getFacets.apply(e,k(t)).refetchOnChannelChange()}),(function(e){return e.facets})),s}return y(t,e),t.prototype.ngOnInit=function(){var t=this;e.prototype.ngOnInit.call(this),this.availableLanguages$=this.serverConfigService.getAvailableLanguages(),this.contentLanguage$=this.dataService.client.uiState().mapStream((function(e){return e.uiState.contentLanguage})).pipe(o.tap((function(){return t.refresh()})))},t.prototype.toggleDisplayLimit=function(e){this.displayLimit[e.id]===e.values.length?this.displayLimit[e.id]=this.initialLimit:this.displayLimit[e.id]=e.values.length},t.prototype.deleteFacet=function(e){var t=this;this.showModalAndDelete(e).pipe(o.switchMap((function(n){return n.result===r.DeletionResult.DELETED?[!0]:t.showModalAndDelete(e,n.message||"").pipe(o.map((function(e){return e.result===r.DeletionResult.DELETED})))})),o.switchMap((function(){return t.dataService.facet.getAllFacets().single$}))).subscribe((function(){t.notificationService.success(a.marker("common.notify-delete-success"),{entity:"FacetValue"}),t.refresh()}),(function(e){t.notificationService.error(a.marker("common.notify-delete-error"),{entity:"FacetValue"})}))},t.prototype.setLanguage=function(e){this.dataService.client.setContentLanguage(e).subscribe()},t.prototype.showModalAndDelete=function(e,t){var n=this;return this.modalService.dialog({title:a.marker("catalog.confirm-delete-facet"),body:t,buttons:[{type:"secondary",label:a.marker("common.cancel")},{type:"danger",label:a.marker("common.delete"),returnValue:!0}]}).pipe(o.switchMap((function(r){return r?n.dataService.facet.deleteFacet(e,!!t):s.EMPTY})),o.map((function(e){return e.deleteFacet})))},t}(r.BaseListComponent);function O(e,t,n){if(!e)return"";var r=e.lastIndexOf(t);return-1===r?e:e.substr(0,r)+e.substr(r).replace(t,n)}D.decorators=[{type:t.Component,args:[{selector:"vdr-facet-list",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-language-selector\r\n            [availableLanguageCodes]="availableLanguages$ | async"\r\n            [currentLanguageCode]="contentLanguage$ | async"\r\n            (languageCodeChange)="setLanguage($event)"\r\n        ></vdr-language-selector>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="facet-list"></vdr-action-bar-items>\r\n        <a class="btn btn-primary"\r\n           *vdrIfPermissions="[\'CreateCatalog\', \'CreateFacet\']"\r\n           [routerLink]="[\'./create\']">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'catalog.create-new-facet\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]="items$ | async"\r\n    [itemsPerPage]="itemsPerPage$ | async"\r\n    [totalItems]="totalItems$ | async"\r\n    [currentPage]="currentPage$ | async"\r\n    (pageChange)="setPageNumber($event)"\r\n    (itemsPerPageChange)="setItemsPerPage($event)"\r\n>\r\n    <vdr-dt-column>{{ \'common.code\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'common.name\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column [expand]="true">{{ \'catalog.values\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'catalog.visibility\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-facet="item">\r\n        <td class="left align-middle" [class.private]="facet.isPrivate">{{ facet.code }}</td>\r\n        <td class="left align-middle" [class.private]="facet.isPrivate">{{ facet.name }}</td>\r\n        <td class="left align-middle" [class.private]="facet.isPrivate">\r\n            <vdr-facet-value-chip\r\n                *ngFor="let value of facet.values | slice: 0:displayLimit[facet.id] || 3"\r\n                [facetValue]="value"\r\n                [removable]="false"\r\n                [displayFacetName]="false"\r\n            ></vdr-facet-value-chip>\r\n            <button\r\n                class="btn btn-sm btn-secondary btn-icon"\r\n                *ngIf="facet.values.length > initialLimit"\r\n                (click)="toggleDisplayLimit(facet)"\r\n            >\r\n                <ng-container *ngIf="(displayLimit[facet.id] || 0) < facet.values.length; else collapse">\r\n                    <clr-icon shape="plus"></clr-icon>\r\n                    {{ facet.values.length - initialLimit }}\r\n                </ng-container>\r\n                <ng-template #collapse>\r\n                    <clr-icon shape="minus"></clr-icon>\r\n                </ng-template>\r\n            </button>\r\n        </td>\r\n        <td class="left align-middle" [class.private]="facet.isPrivate">\r\n            <vdr-chip>\r\n                <ng-container *ngIf="!facet.isPrivate; else private">{{ \'catalog.public\' | translate }}</ng-container>\r\n                <ng-template #private>{{ \'catalog.private\' | translate }}</ng-template>\r\n            </vdr-chip>\r\n        </td>\r\n        <td class="right align-middle" [class.private]="facet.isPrivate">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', facet.id]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td class="right align-middle" [class.private]="facet.isPrivate">\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deleteFacet(facet.id)"\r\n                        [disabled]="!([\'DeleteCatalog\', \'DeleteFacet\'] | hasPermission)"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',styles:["td.private{background-color:var(--color-component-bg-200)}"]}]}],D.ctorParameters=function(){return[{type:r.DataService},{type:r.ModalService},{type:r.NotificationService},{type:r.ServerConfigService},{type:n.Router},{type:n.ActivatedRoute}]};var T=function(){function e(e){this.dataService=e}return e.prototype.getFacets=function(){return this.dataService.facet.getAllFacets().mapSingle((function(e){return e.facets.items}))},e.prototype.getTaxCategories=function(){return this.dataService.settings.getTaxCategories().mapSingle((function(e){return e.taxCategories})).pipe(o.shareReplay(1))},e.prototype.createProductWithVariants=function(e,t,n){var r=this,a=this.dataService.product.createProduct(e),i=t.groups.filter((function(e){return 0<e.values.length})),c=this.createProductOptionGroups(i,n);return s.forkJoin(a,c).pipe(o.mergeMap((function(e){var t=I(e,2),n=t[0].createProduct,a=t[1];return(a.length?s.forkJoin(a.map((function(e){return r.dataService.product.addOptionGroupToProduct({productId:n.id,optionGroupId:e.id})}))):s.of([])).pipe(o.map((function(){return{createProduct:n,optionGroups:a}})))})),o.mergeMap((function(e){var a=e.createProduct,o=e.optionGroups,i=t.variants.map((function(e){var t=o.length?e.optionValues.map((function(e,t){var n=o[t].options.find((function(t){return t.name===e}));if(!n)throw new Error('Could not find a matching ProductOption "'+e+'" when creating variant');return n.id})):[];return Object.assign(Object.assign({},e),{optionIds:t})})),s=o.map((function(e){return e.options})).reduce((function(e,t){return k(e,t)}),[]);return r.createProductVariants(a,i,s,n)})))},e.prototype.createProductOptionGroups=function(e,t){var n=this;return e.length?s.forkJoin(e.map((function(e){return n.dataService.product.createProductOptionGroups({code:c.normalizeString(e.name,"-"),translations:[{languageCode:t,name:e.name}],options:e.values.map((function(e){return{code:c.normalizeString(e,"-"),translations:[{languageCode:t,name:e}]}}))}).pipe(o.map((function(e){return e.createProductOptionGroup})))}))):s.of([])},e.prototype.createProductVariants=function(e,t,n,r){var a=t.map((function(t){var a=n.length?e.name+" "+t.optionIds.map((function(e){return n.find((function(t){return t.id===e}))})).filter(l.notNullOrUndefined).map((function(e){return e.name})).join(" "):e.name;return{productId:e.id,price:t.price,sku:t.sku,stockOnHand:t.stock,translations:[{languageCode:r,name:a}],optionIds:t.optionIds}}));return this.dataService.product.createProductVariants(a).pipe(o.map((function(t){return{createProductVariants:t.createProductVariants,productId:e.id}})))},e.prototype.updateProduct=function(e){var t,n,a,o,i,c,l=e.product,d=e.languageCode,u=e.autoUpdate,p=e.productInput,m=[],g=e.variantsInput||[];if(p){m.push(this.dataService.product.updateProduct(p));var v=null!==(o=null===(a=r.findTranslation(l,d))||void 0===a?void 0:a.name)&&void 0!==o?o:"",f=null===(i=r.findTranslation(p,d))||void 0===i?void 0:i.name;if(f&&v!==f&&u){var h=function(e){var t=(null===(c=r.findTranslation(e,d))||void 0===c?void 0:c.name)||"",n=void 0,a=g.find((function(t){return t.id===e.id}));a?n=a:(n={id:e.id,translations:[{languageCode:d,name:t}]},g.push(n));var o=r.findTranslation(n,d);o&&(o.name?o.name=O(o.name,v,f):o.name=k([f],e.options.map((function(e){return e.name}))).join(" "))};try{for(var y=F(l.variants),b=y.next();!b.done;b=y.next()){h(b.value)}}catch(e){t={error:e}}finally{try{b&&!b.done&&(n=y.return)&&n.call(y)}finally{if(t)throw t.error}}}}return g.length&&m.push(this.dataService.product.updateProductVariants(g)),s.forkJoin(m)},e.prototype.updateProductOption=function(e,t,n){var a,i,c,l,d,u=s.of([]);if(e.autoUpdate){var p=void 0,m=null===(c=r.findTranslation(e,n))||void 0===c?void 0:c.name;m||(u=s.of([]));var g=[];try{for(var v=F(t.variants),f=v.next();!f.done;f=v.next()){var h=f.value;if(h.options.map((function(e){return e.id})).includes(e.id)){p||(p=null===(l=r.findTranslation(h.options.find((function(t){return t.id===e.id})),n))||void 0===l?void 0:l.name);var y=(null===(d=r.findTranslation(h,n))||void 0===d?void 0:d.name)||"";p&&m&&y.includes(p)&&g.push({id:h.id,translations:[{languageCode:n,name:O(y,p,m)}]})}}}catch(e){a={error:e}}finally{try{f&&!f.done&&(i=v.return)&&i.call(v)}finally{if(a)throw a.error}}g.length&&(u=this.dataService.product.updateProductVariants(g))}return this.dataService.product.updateProductOption(e).pipe(o.mergeMap((function(){return u})))},e.prototype.deleteProductVariant=function(e,t){var n=this;return this.dataService.product.deleteProductVariant(e).pipe(o.switchMap((function(e){return e.deleteProductVariant.result===r.DeletionResult.DELETED?n.dataService.product.getProduct(t).single$:s.throwError(e.deleteProductVariant.message)})))},e}();T.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new T(t.ɵɵinject(r.DataService))},token:T,providedIn:"root"}),T.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],T.ctorParameters=function(){return[{type:r.DataService}]};var A=function(){function e(e){this.changeDetector=e,this.selectedValues=[]}return e.prototype.ngAfterViewInit=function(){var e=this;setTimeout((function(){return e.selector.focus()}),0)},e.prototype.selectValues=function(){this.resolveWith(this.selectedValues)},e.prototype.cancel=function(){this.resolveWith()},e}();A.decorators=[{type:t.Component,args:[{selector:"vdr-apply-facet-dialog",template:'<ng-template vdrDialogTitle>{{ \'catalog.add-facets\' | translate }}</ng-template>\r\n\r\n<vdr-facet-value-selector\r\n    [facets]="facets"\r\n    (selectedValuesChange)="selectedValues = $event"\r\n></vdr-facet-value-selector>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type="button" class="btn" (click)="cancel()">{{ \'common.cancel\' | translate }}</button>\r\n    <button\r\n        type="submit"\r\n        (click)="selectValues()"\r\n        [disabled]="selectedValues.length === 0"\r\n        class="btn btn-primary"\r\n    >\r\n        {{ \'catalog.add-facets\' | translate }}\r\n    </button>\r\n</ng-template>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],A.ctorParameters=function(){return[{type:t.ChangeDetectorRef}]},A.propDecorators={selector:[{type:t.ViewChild,args:[r.FacetValueSelectorComponent]}]};var $=function(){function e(e,t){this.dataService=e,this.notificationService=t,this.priceFactorControl=new i.FormControl(1),this.selectedChannelIdControl=new i.FormControl}return Object.defineProperty(e.prototype,"isProductVariantMode",{get:function(){return null!=this.productVariantIds},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){var e=this,t=this.dataService.client.userStatus().mapSingle((function(e){return e.userStatus.activeChannelId})),n=this.dataService.settings.getChannels().mapSingle((function(e){return e.channels}));s.combineLatest(t,n).subscribe((function(t){var n=I(t,2),r=n[0],a=n[1];e.currentChannel=a.find((function(e){return e.id===r})),e.availableChannels=a})),this.selectedChannelIdControl.valueChanges.subscribe((function(t){e.selectChannel(t)})),this.variantsPreview$=s.combineLatest(s.from(this.getTopVariants(10)),this.priceFactorControl.valueChanges.pipe(o.startWith(1))).pipe(o.map((function(e){var t=I(e,2),n=t[0],r=t[1];return n.map((function(e){return{id:e.id,name:e.name,price:e.price,pricePreview:e.price*+r}}))})))},e.prototype.selectChannel=function(e){this.selectedChannel=this.availableChannels.find((function(t){return t.id===e[0]}))},e.prototype.assign=function(){var e=this,t=this.selectedChannel;t&&(this.isProductVariantMode?this.productVariantIds&&this.dataService.product.assignVariantsToChannel({channelId:t.id,productVariantIds:this.productVariantIds,priceFactor:+this.priceFactorControl.value}).subscribe((function(){e.notificationService.success(a.marker("catalog.assign-variant-to-channel-success"),{channel:t.code}),e.resolveWith(!0)})):this.dataService.product.assignProductsToChannel({channelId:t.id,productIds:this.productIds,priceFactor:+this.priceFactorControl.value}).subscribe((function(){e.notificationService.success(a.marker("catalog.assign-product-to-channel-success"),{channel:t.code}),e.resolveWith(!0)})))},e.prototype.cancel=function(){this.resolveWith()},e.prototype.getTopVariants=function(e){return b(this,void 0,void 0,(function(){var t,n,r,a=this;return C(this,(function(o){switch(o.label){case 0:t=[],n=0,o.label=1;case 1:return n<this.productIds.length&&t.length<e?[4,this.dataService.product.getProduct(this.productIds[n]).mapSingle((function(e){var t=e.product;return(t?t.variants:[]).filter((function(e){var t;return!a.isProductVariantMode||(null===(t=a.productVariantIds)||void 0===t?void 0:t.includes(e.id))}))})).toPromise()]:[3,4];case 2:r=o.sent(),t.push.apply(t,k(r||[])),o.label=3;case 3:return n++,[3,1];case 4:return[2,t.slice(0,e)]}}))}))},e}();$.decorators=[{type:t.Component,args:[{selector:"vdr-assign-products-to-channel-dialog",template:'<ng-template vdrDialogTitle>\r\n    <ng-container *ngIf="isProductVariantMode; else productModeTitle">{{\r\n        \'catalog.assign-variants-to-channel\' | translate\r\n    }}</ng-container>\r\n    <ng-template #productModeTitle>{{ \'catalog.assign-products-to-channel\' | translate }}</ng-template>\r\n</ng-template>\r\n\r\n<div class="flex">\r\n    <clr-input-container>\r\n        <label>{{ \'common.channel\' | translate }}</label>\r\n        <vdr-channel-assignment-control\r\n            clrInput\r\n            [multiple]="false"\r\n            [includeDefaultChannel]="false"\r\n            [disableChannelIds]="currentChannelIds"\r\n            [formControl]="selectedChannelIdControl"\r\n        ></vdr-channel-assignment-control>\r\n    </clr-input-container>\r\n    <div class="flex-spacer"></div>\r\n    <clr-input-container>\r\n        <label>{{ \'catalog.price-conversion-factor\' | translate }}</label>\r\n        <input clrInput type="number" min="0" max="99999" [formControl]="priceFactorControl" />\r\n    </clr-input-container>\r\n</div>\r\n\r\n<div class="channel-price-preview">\r\n    <label class="clr-control-label">{{ \'catalog.channel-price-preview\' | translate }}</label>\r\n    <table class="table">\r\n        <thead>\r\n            <tr>\r\n                <th>{{ \'common.name\' | translate }}</th>\r\n                <th>\r\n                    {{\r\n                        \'catalog.price-in-channel\'\r\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\r\n                    }}\r\n                </th>\r\n                <th>\r\n                    <ng-template [ngIf]="selectedChannel" [ngIfElse]="noSelection">\r\n                        {{ \'catalog.price-in-channel\' | translate: { channel: selectedChannel?.code } }}\r\n                    </ng-template>\r\n                    <ng-template #noSelection>\r\n                        {{ \'catalog.no-channel-selected\' | translate }}\r\n                    </ng-template>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor="let row of variantsPreview$ | async">\r\n                <td>{{ row.name }}</td>\r\n                <td>{{ row.price | localeCurrency: currentChannel?.currencyCode }}</td>\r\n                <td>\r\n                    <ng-template [ngIf]="selectedChannel" [ngIfElse]="noChannelSelected">\r\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.currencyCode }}\r\n                    </ng-template>\r\n                    <ng-template #noChannelSelected> - </ng-template>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type="button" class="btn" (click)="cancel()">{{ \'common.cancel\' | translate }}</button>\r\n    <button type="submit" (click)="assign()" [disabled]="!selectedChannel" class="btn btn-primary">\r\n        <ng-template [ngIf]="selectedChannel" [ngIfElse]="noSelection">\r\n            {{ \'catalog.assign-to-named-channel\' | translate: { channelCode: selectedChannel?.code } }}\r\n        </ng-template>\r\n        <ng-template #noSelection>\r\n            {{ \'catalog.no-channel-selected\' | translate }}\r\n        </ng-template>\r\n    </button>\r\n</ng-template>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:["vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}"]}]}],$.ctorParameters=function(){return[{type:r.DataService},{type:r.NotificationService}]};var L=function(e){function t(t,n,r,a,o,s,c,l,d,u){var p=e.call(this,t,n,r,l)||this;return p.productDetailService=a,p.formBuilder=o,p.modalService=s,p.notificationService=c,p.dataService=l,p.location=d,p.changeDetector=u,p.filterInput=new i.FormControl(""),p.assetChanges={},p.variantAssetChanges={},p.selectedVariantIds=[],p.variantDisplayMode="card",p.createVariantsConfig={groups:[],variants:[]},p.customFields=p.getCustomFieldConfig("Product"),p.customVariantFields=p.getCustomFieldConfig("ProductVariant"),p.customOptionGroupFields=p.getCustomFieldConfig("ProductOptionGroup"),p.customOptionFields=p.getCustomFieldConfig("ProductOption"),p.detailForm=p.formBuilder.group({product:p.formBuilder.group({enabled:!0,name:["",i.Validators.required],autoUpdateVariantNames:!0,slug:"",description:"",facetValueIds:[[]],customFields:p.formBuilder.group(p.customFields.reduce((function(e,t){var n;return Object.assign(Object.assign({},e),((n={})[t.name]="",n))}),{}))}),variants:p.formBuilder.array([])}),p}return y(t,e),t.prototype.ngOnInit=function(){this.init(),this.product$=this.entity$;var e=this.product$.pipe(o.map((function(e){return e.variants}))),t=this.filterInput.valueChanges.pipe(o.startWith(""),o.debounceTime(50),o.shareReplay());this.variants$=s.combineLatest(e,t).pipe(o.map((function(e){var t=I(e,2),n=t[0],r=t[1];return r?n.filter((function(e){var t=r.toLocaleLowerCase();return e.name.toLocaleLowerCase().includes(t)||e.sku.toLocaleLowerCase().includes(t)})):n}))),this.taxCategories$=this.productDetailService.getTaxCategories().pipe(o.takeUntil(this.destroy$)),this.activeTab$=this.route.paramMap.pipe(o.map((function(e){return e.get("tab")}))),this.facets$=this.productDetailService.getFacets();var n=this.product$.pipe(o.map((function(e){return e.facetValues}))),a=this.facets$.pipe(o.map(r.flattenFacetValues)),i=this.getProductFormGroup().valueChanges.pipe(o.map((function(e){return e.facetValueIds})),o.distinctUntilChanged()),c=s.combineLatest(i,n,a).pipe(o.map((function(e){var t=I(e,3),n=t[0],r=k(t[1],t[2]);return n.map((function(e){return r.find((function(t){return t.id===e}))})).filter(l.notNullOrUndefined)})));this.facetValues$=s.merge(n,c),this.productChannels$=this.product$.pipe(o.map((function(e){return e.channels}))),this.channelPriceIncludesTax$=this.dataService.settings.getActiveChannel("cache-first").refetchOnChannelChange().mapStream((function(e){return e.activeChannel.pricesIncludeTax})).pipe(o.shareReplay(1))},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.navigateToTab=function(e){this.location.replaceState(this.router.createUrlTree(["./",Object.assign(Object.assign({},this.route.snapshot.params),{tab:e})],{queryParamsHandling:"merge",relativeTo:this.route}).toString())},t.prototype.isDefaultChannel=function(e){return e===u.DEFAULT_CHANNEL_CODE},t.prototype.assignToChannel=function(){var e=this;this.productChannels$.pipe(o.take(1),o.switchMap((function(t){return e.modalService.fromComponent($,{size:"lg",locals:{productIds:[e.id],currentChannelIds:t.map((function(e){return e.id}))}})}))).subscribe()},t.prototype.removeFromChannel=function(e){var t=this;this.modalService.dialog({title:a.marker("catalog.remove-product-from-channel"),buttons:[{type:"secondary",label:a.marker("common.cancel")},{type:"danger",label:a.marker("catalog.remove-from-channel"),returnValue:!0}]}).pipe(o.switchMap((function(n){return n?t.dataService.product.removeProductsFromChannel({channelId:e,productIds:[t.id]}):s.EMPTY}))).subscribe((function(){t.notificationService.success(a.marker("catalog.notify-remove-product-from-channel-success"))}),(function(e){t.notificationService.error(a.marker("catalog.notify-remove-product-from-channel-error"))}))},t.prototype.assignVariantToChannel=function(e){return this.modalService.fromComponent($,{size:"lg",locals:{productIds:[this.id],productVariantIds:[e.id],currentChannelIds:e.channels.map((function(e){return e.id}))}}).subscribe()},t.prototype.removeVariantFromChannel=function(e){var t=this,n=e.channelId,r=e.variant;this.modalService.dialog({title:a.marker("catalog.remove-product-variant-from-channel"),buttons:[{type:"secondary",label:a.marker("common.cancel")},{type:"danger",label:a.marker("catalog.remove-from-channel"),returnValue:!0}]}).pipe(o.switchMap((function(e){return e?t.dataService.product.removeVariantsFromChannel({channelId:n,productVariantIds:[r.id]}):s.EMPTY}))).subscribe((function(){t.notificationService.success(a.marker("catalog.notify-remove-variant-from-channel-success"))}),(function(e){t.notificationService.error(a.marker("catalog.notify-remove-variant-from-channel-error"))}))},t.prototype.customFieldIsSet=function(e){return!!this.detailForm.get(["product","customFields",e])},t.prototype.assetsChanged=function(){return!!Object.values(this.assetChanges).length},t.prototype.variantAssetsChanged=function(){return!!Object.keys(this.variantAssetChanges).length},t.prototype.variantAssetChange=function(e){this.variantAssetChanges[e.variantId]=e},t.prototype.updateSlug=function(e){var t=this;s.combineLatest(this.entity$,this.languageCode$).pipe(o.take(1)).subscribe((function(n){var a=I(n,2),o=a[0],i=a[1],s=t.detailForm.get(["product","slug"]),l=r.findTranslation(o,i),d=!l||!l.slug;s&&s.pristine&&d&&s.setValue(c.normalizeString(""+e,"-"))}))},t.prototype.selectProductFacetValue=function(){var e=this;this.displayFacetValueModal().subscribe((function(t){if(t){var n=e.getProductFormGroup(),r=n.value.facetValueIds;n.patchValue({facetValueIds:p.unique(k(r,t))}),n.markAsDirty()}}))},t.prototype.updateProductOption=function(e){var t=this;s.combineLatest(this.product$,this.languageCode$).pipe(o.take(1),o.mergeMap((function(n){var r=I(n,2),a=r[0],o=r[1];return t.productDetailService.updateProductOption(e,a,o)}))).subscribe((function(){t.notificationService.success(a.marker("common.notify-update-success"),{entity:"ProductOption"})}),(function(e){t.notificationService.error(a.marker("common.notify-update-error"),{entity:"ProductOption"})}))},t.prototype.removeProductFacetValue=function(e){var t=this.getProductFormGroup(),n=t.value.facetValueIds;t.patchValue({facetValueIds:n.filter((function(t){return t!==e}))}),t.markAsDirty()},t.prototype.selectVariantFacetValue=function(e){var t=this;this.displayFacetValueModal().pipe(o.withLatestFrom(this.variants$)).subscribe((function(n){var r,a,o=I(n,2),i=o[0],s=o[1];if(i){var c=function(e){var n=s.findIndex((function(t){return t.id===e})),r=s[n],a=r?r.facetValues.map((function(e){return e.id})):[],o=t.detailForm.get(["variants",n]);o&&(o.patchValue({facetValueIds:p.unique(k(a,i))}),o.markAsDirty())};try{for(var l=F(e),d=l.next();!d.done;d=l.next()){c(d.value)}}catch(e){r={error:e}}finally{try{d&&!d.done&&(a=l.return)&&a.call(l)}finally{if(r)throw r.error}}t.changeDetector.markForCheck()}}))},t.prototype.variantsToCreateAreValid=function(){return 0<this.createVariantsConfig.variants.length&&this.createVariantsConfig.variants.every((function(e){return""!==e.sku}))},t.prototype.displayFacetValueModal=function(){var e=this;return this.productDetailService.getFacets().pipe(o.mergeMap((function(t){return e.modalService.fromComponent(A,{size:"md",closable:!0,locals:{facets:t}})})),o.map((function(e){return e&&e.map((function(e){return e.id}))})))},t.prototype.create=function(){var e=this,t=this.getProductFormGroup();t.dirty&&s.combineLatest(this.product$,this.languageCode$).pipe(o.take(1),o.mergeMap((function(n){var r=I(n,2),a=r[0],o=r[1],i=e.getUpdatedProduct(a,t,o);return e.productDetailService.createProductWithVariants(i,e.createVariantsConfig,o)}))).subscribe((function(t){t.createProductVariants;var n=t.productId;e.notificationService.success(a.marker("common.notify-create-success"),{entity:"Product"}),e.assetChanges={},e.variantAssetChanges={},e.detailForm.markAsPristine(),e.router.navigate(["../",n],{relativeTo:e.route})}),(function(t){console.error(t),e.notificationService.error(a.marker("common.notify-create-error"),{entity:"Product"})}))},t.prototype.save=function(){var e=this;s.combineLatest(this.product$,this.languageCode$,this.channelPriceIncludesTax$).pipe(o.take(1),o.mergeMap((function(t){var n,r,a,o,i=I(t,3),s=i[0],c=i[1],l=i[2],d=e.getProductFormGroup();(d.dirty||e.assetsChanged())&&(a=e.getUpdatedProduct(s,d,c));var u=e.detailForm.get("variants");return(u&&u.dirty||e.variantAssetsChanged())&&(o=e.getUpdatedProductVariants(s,u,c,l)),e.productDetailService.updateProduct({product:s,languageCode:c,autoUpdate:null!==(r=null===(n=e.detailForm.get(["product","autoUpdateVariantNames"]))||void 0===n?void 0:n.value)&&void 0!==r&&r,productInput:a,variantsInput:o})}))).subscribe((function(t){e.updateSlugAfterSave(t),e.detailForm.markAsPristine(),e.assetChanges={},e.variantAssetChanges={},e.notificationService.success(a.marker("common.notify-update-success"),{entity:"Product"}),e.changeDetector.markForCheck()}),(function(t){e.notificationService.error(a.marker("common.notify-update-error"),{entity:"Product"})}))},t.prototype.canDeactivate=function(){return e.prototype.canDeactivate.call(this)&&!this.assetChanges.assets&&!this.assetChanges.featuredAsset},t.prototype.setFormValues=function(e,t){var n,a,o=this,i=r.findTranslation(e,t);if(this.detailForm.patchValue({product:{enabled:e.enabled,name:i?i.name:"",slug:i?i.slug:"",description:i?i.description:"",facetValueIds:e.facetValues.map((function(e){return e.id}))}}),this.customFields.length){var s=this.detailForm.get(["product","customFields"]),c=i&&i.customFields||{},l=e.customFields||{};try{for(var d=F(this.customFields),u=d.next();!u.done;u=d.next()){var p=u.value,m=p.name,g="localeString"===p.type?c[m]:l[m],v=s.get(m);v&&v.patchValue(g)}}catch(e){n={error:e}}finally{try{u&&!u.done&&(a=d.return)&&a.call(d)}finally{if(n)throw n.error}}}var f=this.detailForm.get("variants");e.variants.forEach((function(e,n){var a,i,s=r.findTranslation(e,t),c=e.facetValues.map((function(e){return e.id})),l={id:e.id,enabled:e.enabled,sku:e.sku,name:s?s.name:"",price:e.price,priceWithTax:e.priceWithTax,taxCategoryId:e.taxCategory.id,stockOnHand:e.stockOnHand,useGlobalOutOfStockThreshold:e.useGlobalOutOfStockThreshold,outOfStockThreshold:e.outOfStockThreshold,trackInventory:e.trackInventory,facetValueIds:c},d=f.at(n);if(d?d.patchValue(l):(d=o.formBuilder.group(Object.assign(Object.assign({},l),{facetValueIds:o.formBuilder.control(c)})),f.insert(n,d)),o.customVariantFields.length){var u=d.get(["customFields"]);u||(u=o.formBuilder.group(o.customVariantFields.reduce((function(e,t){var n;return Object.assign(Object.assign({},e),((n={})[t.name]="",n))}),{})),d.addControl("customFields",u));try{for(var p=F(o.customVariantFields),m=p.next();!m.done;m=p.next()){var g=m.value,v=g.name,h="localeString"===g.type?s.customFields[v]:e.customFields[v],y=u.get(v);y&&y.patchValue(h)}}catch(e){a={error:e}}finally{try{m&&!m.done&&(i=p.return)&&i.call(p)}finally{if(a)throw a.error}}}}))},t.prototype.getUpdatedProduct=function(e,t,n){var a,o,i=r.createUpdatedTranslatable({translatable:e,updatedFields:t.value,customFieldConfig:this.customFields,languageCode:n,defaultTranslation:{languageCode:n,name:e.name||"",slug:e.slug||"",description:e.description||""}});return Object.assign(Object.assign({},i),{assetIds:null===(a=this.assetChanges.assets)||void 0===a?void 0:a.map((function(e){return e.id})),featuredAssetId:null===(o=this.assetChanges.featuredAsset)||void 0===o?void 0:o.id,facetValueIds:t.value.facetValueIds})},t.prototype.getUpdatedProductVariants=function(e,t,n,o){var i=this,s=e.variants.filter((function(e,n){var r=t.get(n.toString());return r&&r.dirty})),c=t.controls.filter((function(e){return e.dirty})).map((function(e){return e.value}));if(s.length!==c.length)throw new Error(a.marker("error.product-variant-form-values-do-not-match"));return s.map((function(e,t){var a,s,l=c[t],d=r.createUpdatedTranslatable({translatable:e,updatedFields:l,customFieldConfig:i.customVariantFields,languageCode:n,defaultTranslation:{languageCode:n,name:""}});d.taxCategoryId=l.taxCategoryId,d.facetValueIds=l.facetValueIds,d.price=o?l.priceWithTax:l.price;var u=i.variantAssetChanges[e.id];return u&&(d.featuredAssetId=null===(a=u.featuredAsset)||void 0===a?void 0:a.id,d.assetIds=null===(s=u.assets)||void 0===s?void 0:s.map((function(e){return e.id}))),d})).filter(l.notNullOrUndefined)},t.prototype.getProductFormGroup=function(){return this.detailForm.get("product")},t.prototype.updateSlugAfterSave=function(e){var t=e[0],n=this.detailForm.get(["product","slug"]);n&&t.hasOwnProperty("updateProduct")&&n.setValue(t.updateProduct.slug,{emitEvent:!1})},t}(r.BaseDetailComponent);L.decorators=[{type:t.Component,args:[{selector:"vdr-product-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <div class="flex clr-flex-row">\r\n            <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n            <clr-toggle-wrapper *vdrIfPermissions="[\'UpdateCatalog\', \'UpdateProduct\']">\r\n                <input\r\n                    type="checkbox"\r\n                    clrToggle\r\n                    name="enabled"\r\n                    [formControl]="detailForm.get([\'product\', \'enabled\'])"\r\n                />\r\n                <label>{{ \'common.enabled\' | translate }}</label>\r\n            </clr-toggle-wrapper>\r\n        </div>\r\n        <vdr-language-selector\r\n            [disabled]="isNew$ | async"\r\n            [availableLanguageCodes]="availableLanguages$ | async"\r\n            [currentLanguageCode]="languageCode$ | async"\r\n            (languageCodeChange)="setLanguage($event)"\r\n        ></vdr-language-selector>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="product-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="detailForm.invalid || detailForm.pristine || !variantsToCreateAreValid()"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                *vdrIfPermissions="[\'UpdateCatalog\', \'UpdateProduct\']"\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                [disabled]="\r\n                    (detailForm.invalid || detailForm.pristine) && !assetsChanged() && !variantAssetsChanged()\r\n                "\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form\r\n    class="form"\r\n    [formGroup]="detailForm"\r\n    *ngIf="product$ | async as product"\r\n>\r\n    <button type="submit" hidden x-data="prevents enter key from triggering other buttons"></button>\r\n    <clr-tabs>\r\n        <clr-tab>\r\n            <button clrTabLink (click)="navigateToTab(\'details\')">\r\n                {{ \'catalog.product-details\' | translate }}\r\n            </button>\r\n            <clr-tab-content *clrIfActive="(activeTab$ | async) === \'details\'">\r\n                <div class="clr-row">\r\n                    <div class="clr-col">\r\n                        <section class="form-block" formGroupName="product">\r\n                            <ng-container *vdrIfMultichannel>\r\n                                <vdr-form-item\r\n                                    [label]="\'common.channels\' | translate"\r\n                                    *vdrIfDefaultChannelActive\r\n                                >\r\n                                    <div class="flex channel-assignment">\r\n                                        <ng-container *ngFor="let channel of productChannels$ | async">\r\n                                            <vdr-chip\r\n                                                *ngIf="!isDefaultChannel(channel.code)"\r\n                                                icon="times-circle"\r\n                                                (iconClick)="removeFromChannel(channel.id)"\r\n                                            >\r\n                                                <vdr-channel-badge\r\n                                                    [channelCode]="channel.code"\r\n                                                ></vdr-channel-badge>\r\n                                                {{ channel.code | channelCodeToLabel }}\r\n                                            </vdr-chip>\r\n                                        </ng-container>\r\n                                        <button class="btn btn-sm" (click)="assignToChannel()">\r\n                                            <clr-icon shape="layers"></clr-icon>\r\n                                            {{ \'catalog.assign-to-channel\' | translate }}\r\n                                        </button>\r\n                                    </div>\r\n                                </vdr-form-item>\r\n                            </ng-container>\r\n                            <vdr-form-field [label]="\'catalog.product-name\' | translate" for="name">\r\n                                <input\r\n                                    id="name"\r\n                                    type="text"\r\n                                    formControlName="name"\r\n                                    [readonly]="!([\'UpdateCatalog\', \'UpdateProduct\'] | hasPermission)"\r\n                                    (input)="updateSlug($event.target.value)"\r\n                                />\r\n                            </vdr-form-field>\r\n                            <div\r\n                                class="auto-rename-wrapper"\r\n                                [class.visible]="\r\n                                    (isNew$ | async) === false && detailForm.get([\'product\', \'name\'])?.dirty\r\n                                "\r\n                            >\r\n                                <clr-checkbox-wrapper>\r\n                                    <input\r\n                                        clrCheckbox\r\n                                        type="checkbox"\r\n                                        id="auto-update"\r\n                                        formControlName="autoUpdateVariantNames"\r\n                                    />\r\n                                    <label>{{\r\n                                        \'catalog.auto-update-product-variant-name\' | translate\r\n                                    }}</label>\r\n                                </clr-checkbox-wrapper>\r\n                            </div>\r\n                            <vdr-form-field\r\n                                [label]="\'catalog.slug\' | translate"\r\n                                for="slug"\r\n                                [errors]="{ pattern: \'catalog.slug-pattern-error\' | translate }"\r\n                            >\r\n                                <input\r\n                                    id="slug"\r\n                                    type="text"\r\n                                    formControlName="slug"\r\n                                    [readonly]="!([\'UpdateCatalog\', \'UpdateProduct\'] | hasPermission)"\r\n                                    pattern="[a-z0-9_-]+"\r\n                                />\r\n                            </vdr-form-field>\r\n                            <vdr-rich-text-editor\r\n                                formControlName="description"\r\n                                [readonly]="!([\'UpdateCatalog\', \'UpdateProduct\'] | hasPermission)"\r\n                                [label]="\'common.description\' | translate"\r\n                            ></vdr-rich-text-editor>\r\n\r\n                            <section formGroupName="customFields" *ngIf="customFields.length">\r\n                                <label>{{ \'common.custom-fields\' | translate }}</label>\r\n                                <ng-container *ngFor="let customField of customFields">\r\n                                    <vdr-custom-field-control\r\n                                        *ngIf="customFieldIsSet(customField.name)"\r\n                                        entityName="Product"\r\n                                        [customFieldsFormGroup]="detailForm.get([\'product\', \'customFields\'])"\r\n                                        [customField]="customField"\r\n                                        [readonly]="!([\'UpdateCatalog\', \'UpdateProduct\'] | hasPermission)"\r\n                                    ></vdr-custom-field-control>\r\n                                </ng-container>\r\n                            </section>\r\n\r\n                            <div class="facets">\r\n                                <vdr-facet-value-chip\r\n                                    *ngFor="let facetValue of facetValues$ | async"\r\n                                    [facetValue]="facetValue"\r\n                                    [removable]="[\'UpdateCatalog\', \'UpdateProduct\'] | hasPermission"\r\n                                    (remove)="removeProductFacetValue(facetValue.id)"\r\n                                ></vdr-facet-value-chip>\r\n                                <button\r\n                                    class="btn btn-sm btn-secondary"\r\n                                    *vdrIfPermissions="[\'UpdateCatalog\', \'UpdateProduct\']"\r\n                                    (click)="selectProductFacetValue()"\r\n                                >\r\n                                    <clr-icon shape="plus"></clr-icon>\r\n                                    {{ \'catalog.add-facets\' | translate }}\r\n                                </button>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                    <div class="clr-col-md-auto">\r\n                        <vdr-product-assets\r\n                            [assets]="assetChanges.assets || product.assets"\r\n                            [featuredAsset]="assetChanges.featuredAsset || product.featuredAsset"\r\n                            (change)="assetChanges = $event"\r\n                        ></vdr-product-assets>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf="isNew$ | async">\r\n                    <h4>{{ \'catalog.product-variants\' | translate }}</h4>\r\n                    <vdr-generate-product-variants\r\n                        (variantsChange)="createVariantsConfig = $event"\r\n                    ></vdr-generate-product-variants>\r\n                </div>\r\n            </clr-tab-content>\r\n        </clr-tab>\r\n        <clr-tab *ngIf="!(isNew$ | async)">\r\n            <button clrTabLink (click)="navigateToTab(\'variants\')">\r\n                {{ \'catalog.product-variants\' | translate }}\r\n            </button>\r\n            <clr-tab-content *clrIfActive="(activeTab$ | async) === \'variants\'">\r\n                <section class="form-block">\r\n                    <div class="view-mode">\r\n                        <div class="btn-group">\r\n                            <button\r\n                                class="btn btn-secondary-outline"\r\n                                (click)="variantDisplayMode = \'card\'"\r\n                                [class.btn-primary]="variantDisplayMode === \'card\'"\r\n                            >\r\n                                <clr-icon shape="list"></clr-icon>\r\n                                {{ \'catalog.display-variant-cards\' | translate }}\r\n                            </button>\r\n                            <button\r\n                                class="btn"\r\n                                (click)="variantDisplayMode = \'table\'"\r\n                                [class.btn-primary]="variantDisplayMode === \'table\'"\r\n                            >\r\n                                <clr-icon shape="table"></clr-icon>\r\n                                {{ \'catalog.display-variant-table\' | translate }}\r\n                            </button>\r\n                        </div>\r\n                        <div class="variant-filter">\r\n                            <input\r\n                                [formControl]="filterInput"\r\n                                [placeholder]="\'catalog.filter-by-name-or-sku\' | translate"\r\n                            />\r\n                            <button class="icon-button" (click)="filterInput.setValue(\'\')">\r\n                                <clr-icon shape="times"></clr-icon>\r\n                            </button>\r\n                        </div>\r\n                        <div class="flex-spacer"></div>\r\n                        <a\r\n                            *vdrIfPermissions="[\'UpdateCatalog\', \'UpdateProduct\']"\r\n                            [routerLink]="[\'./\', \'manage-variants\']"\r\n                            class="btn btn-secondary edit-variants-btn"\r\n                        >\r\n                            <clr-icon shape="add-text"></clr-icon>\r\n                            {{ \'catalog.manage-variants\' | translate }}\r\n                        </a>\r\n                    </div>\r\n\r\n                    <vdr-product-variants-table\r\n                        *ngIf="variantDisplayMode === \'table\'"\r\n                        [variants]="variants$ | async"\r\n                        [optionGroups]="product.optionGroups"\r\n                        [channelPriceIncludesTax]="channelPriceIncludesTax$ | async"\r\n                        [productVariantsFormArray]="detailForm.get(\'variants\')"\r\n                        [pendingAssetChanges]="variantAssetChanges"\r\n                    ></vdr-product-variants-table>\r\n                    <vdr-product-variants-list\r\n                        *ngIf="variantDisplayMode === \'card\'"\r\n                        [variants]="variants$ | async"\r\n                        [channelPriceIncludesTax]="channelPriceIncludesTax$ | async"\r\n                        [facets]="facets$ | async"\r\n                        [optionGroups]="product.optionGroups"\r\n                        [productVariantsFormArray]="detailForm.get(\'variants\')"\r\n                        [taxCategories]="taxCategories$ | async"\r\n                        [customFields]="customVariantFields"\r\n                        [customOptionFields]="customOptionFields"\r\n                        [activeLanguage]="languageCode$ | async"\r\n                        [pendingAssetChanges]="variantAssetChanges"\r\n                        (assignToChannel)="assignVariantToChannel($event)"\r\n                        (removeFromChannel)="removeVariantFromChannel($event)"\r\n                        (assetChange)="variantAssetChange($event)"\r\n                        (updateProductOption)="updateProductOption($event)"\r\n                        (selectionChange)="selectedVariantIds = $event"\r\n                        (selectFacetValueClick)="selectVariantFacetValue($event)"\r\n                    ></vdr-product-variants-list>\r\n                </section>\r\n            </clr-tab-content>\r\n        </clr-tab>\r\n    </clr-tabs>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[":host ::ng-deep trix-toolbar{top:24px}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:none;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-left:none}.group-name{padding-right:6px}.view-mode{display:flex;justify-content:flex-end;align-items:center}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap}.auto-rename-wrapper{overflow:hidden;max-height:0;padding-left:9.5rem;margin-bottom:0;transition:max-height .2s,margin-bottom .2s}.auto-rename-wrapper.visible{max-height:24px;margin-bottom:12px}"]}]}],L.ctorParameters=function(){return[{type:n.ActivatedRoute},{type:n.Router},{type:r.ServerConfigService},{type:T},{type:i.FormBuilder},{type:r.ModalService},{type:r.NotificationService},{type:r.DataService},{type:d.Location},{type:t.ChangeDetectorRef}]};var M=function(e){function t(t,n,a,o,i,s,c){var l=e.call(this,s,c)||this;return l.dataService=t,l.modalService=n,l.notificationService=a,l.jobQueueService=o,l.serverConfigService=i,l.searchTerm="",l.facetValueIds=[],l.groupByProduct=!0,e.prototype.setQueryFn.call(l,(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return(e=l.dataService.product).searchProducts.apply(e,k([l.searchTerm],t)).refetchOnChannelChange()}),(function(e){return e.search}),(function(e,t){return{input:{skip:e,take:t,term:l.searchTerm,facetValueIds:l.facetValueIds,facetValueOperator:r.LogicalOperator.AND,groupByProduct:l.groupByProduct}}})),l}return y(t,e),t.prototype.ngOnInit=function(){var t=this;e.prototype.ngOnInit.call(this),this.facetValues$=this.result$.pipe(o.map((function(e){return e.search.facetValues}))),this.route.queryParamMap.pipe(o.map((function(e){return e.get("q")})),o.takeUntil(this.destroy$)).subscribe((function(e){t.productSearchInput.setSearchTerm(e)}));var n=this.route.queryParamMap.pipe(o.map((function(e){return e.getAll("fvids")})));n.pipe(o.takeUntil(this.destroy$)).subscribe((function(e){t.productSearchInput.setFacetValues(e)})),this.facetValues$.pipe(o.take(1),o.delay(100),o.withLatestFrom(n)).subscribe((function(e){var n=I(e,2),r=(n[0],n[1]);t.productSearchInput.setFacetValues(r)})),this.availableLanguages$=this.serverConfigService.getAvailableLanguages(),this.contentLanguage$=this.dataService.client.uiState().mapStream((function(e){return e.uiState.contentLanguage})).pipe(o.tap((function(){return t.refresh()})))},t.prototype.setSearchTerm=function(e){this.searchTerm=e,this.setQueryParam({q:e||null,page:1}),this.refresh()},t.prototype.setFacetValueIds=function(e){this.facetValueIds=e,this.setQueryParam({fvids:e,page:1}),this.refresh()},t.prototype.rebuildSearchIndex=function(){var e=this;this.dataService.product.reindex().subscribe((function(t){var n=t.reindex;e.notificationService.info(a.marker("catalog.reindexing")),e.jobQueueService.addJob(n.id,(function(t){if(t.state===r.JobState.COMPLETED){var n=(new Intl.NumberFormat).format(t.duration||0);e.notificationService.success(a.marker("catalog.reindex-successful"),{count:t.result.indexedItemCount,time:n}),e.refresh()}else e.notificationService.error(a.marker("catalog.reindex-error"))}))}))},t.prototype.deleteProduct=function(e){var t=this;this.modalService.dialog({title:a.marker("catalog.confirm-delete-product"),buttons:[{type:"secondary",label:a.marker("common.cancel")},{type:"danger",label:a.marker("common.delete"),returnValue:!0}]}).pipe(o.switchMap((function(n){return n?t.dataService.product.deleteProduct(e):s.EMPTY})),o.delay(500)).subscribe((function(){t.notificationService.success(a.marker("common.notify-delete-success"),{entity:"Product"}),t.refresh()}),(function(e){t.notificationService.error(a.marker("common.notify-delete-error"),{entity:"Product"})}))},t.prototype.setLanguage=function(e){this.dataService.client.setContentLanguage(e).subscribe()},t}(r.BaseListComponent);M.decorators=[{type:t.Component,args:[{selector:"vdr-products-list",template:'<vdr-action-bar>\r\n    <vdr-ab-left [grow]="true">\r\n        <div class="search-form">\r\n            <vdr-product-search-input\r\n                #productSearchInputComponent\r\n                [facetValueResults]="facetValues$ | async"\r\n                (searchTermChange)="setSearchTerm($event)"\r\n                (facetValueChange)="setFacetValueIds($event)"\r\n            ></vdr-product-search-input>\r\n            <vdr-dropdown class="search-settings-menu mr3">\r\n                <button type="button" class="icon-button" vdrDropdownTrigger>\r\n                    <clr-icon shape="cog"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        vdrDropdownItem\r\n                        (click)="rebuildSearchIndex()"\r\n                        [disabled]="!([\'UpdateCatalog\', \'UpdateProduct\'] | hasPermission)"\r\n                    >\r\n                        {{ \'catalog.rebuild-search-index\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </div>\r\n        <div class="flex wrap">\r\n            <clr-checkbox-wrapper class="mt2">\r\n                <input type="checkbox" clrCheckbox [(ngModel)]="groupByProduct"/>\r\n                <label>{{ \'catalog.group-by-product\' | translate }}</label>\r\n            </clr-checkbox-wrapper>\r\n            <vdr-language-selector\r\n                [availableLanguageCodes]="availableLanguages$ | async"\r\n                [currentLanguageCode]="contentLanguage$ | async"\r\n                (languageCodeChange)="setLanguage($event)"\r\n            ></vdr-language-selector>\r\n        </div>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="product-list"></vdr-action-bar-items>\r\n        <a class="btn btn-primary" [routerLink]="[\'./create\']" *vdrIfPermissions="[\'CreateCatalog\', \'CreateProduct\']">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            <span class="full-label">{{ \'catalog.create-new-product\' | translate }}</span>\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]="items$ | async"\r\n    [itemsPerPage]="itemsPerPage$ | async"\r\n    [totalItems]="totalItems$ | async"\r\n    [currentPage]="currentPage$ | async"\r\n    (pageChange)="setPageNumber($event)"\r\n    (itemsPerPageChange)="setItemsPerPage($event)"\r\n>\r\n    <ng-template let-result="item">\r\n        <td class="left align-middle" [class.disabled]="!result.enabled">\r\n            <div class="image-placeholder">\r\n                <img\r\n                    *ngIf="\r\n                        groupByProduct\r\n                            ? result.productAsset\r\n                            : result.productVariantAsset || result.productAsset as asset;\r\n                        else imagePlaceholder\r\n                    "\r\n                    [src]="asset | assetPreview:\'tiny\'"\r\n                />\r\n                <ng-template #imagePlaceholder>\r\n                    <div class="placeholder">\r\n                        <clr-icon shape="image" size="48"></clr-icon>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </td>\r\n        <td class="left align-middle" [class.disabled]="!result.enabled">\r\n            {{ groupByProduct ? result.productName : result.productVariantName }}\r\n        </td>\r\n        <td class="align-middle" [class.disabled]="!result.enabled">\r\n            <vdr-chip *ngIf="!result.enabled">{{ \'common.disabled\' | translate }}</vdr-chip>\r\n        </td>\r\n        <td class="right align-middle" [class.disabled]="!result.enabled">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', result.productId]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td class="right align-middle" [class.disabled]="!result.enabled">\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deleteProduct(result.productId)"\r\n                        [disabled]="!([\'DeleteCatalog\', \'DeleteProduct\'] | hasPermission)"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',styles:[".image-placeholder{width:50px;height:50px;background-color:var(--color-component-bg-200)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%;margin-bottom:6px}.search-input{min-width:300px}@media screen and (max-width:768px){.search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}"]}]}],M.ctorParameters=function(){return[{type:r.DataService},{type:r.ModalService},{type:r.NotificationService},{type:r.JobQueueService},{type:r.ServerConfigService},{type:n.Router},{type:n.ActivatedRoute}]},M.propDecorators={productSearchInput:[{type:t.ViewChild,args:["productSearchInputComponent",{static:!0}]}]};var G=function(){function e(){this.variants=[]}return e.prototype.confirm=function(){this.resolveWith(!0)},e.prototype.cancel=function(){this.resolveWith()},e}();G.decorators=[{type:t.Component,args:[{selector:"vdr-confirm-variant-deletion-dialog",template:'<ng-template vdrDialogTitle>\r\n    {{ \'catalog.confirm-deletion-of-unused-variants-title\' | translate }}\r\n</ng-template>\r\n{{ \'catalog.confirm-deletion-of-unused-variants-body\' | translate }}\r\n<ul>\r\n    <li *ngFor="let variant of variants">{{ variant.name }} ({{ variant.sku }})</li>\r\n</ul>\r\n<ng-template vdrDialogButtons>\r\n    <button type="button" class="btn" (click)="cancel()">{{ \'common.cancel\' | translate }}</button>\r\n    <button type="submit" (click)="confirm()" class="btn btn-primary">\r\n        {{ \'common.confirm\' | translate }}\r\n    </button>\r\n</ng-template>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}];var N=function(e){var t,n;try{for(var r=F(Object.keys(e)),a=r.next();!a.done;a=r.next()){var o=a.value;this[o]=e[o]}}catch(e){t={error:e}}finally{try{a&&!a.done&&(n=r.return)&&n.call(r)}finally{if(t)throw t.error}}},E=function(){function e(e,t,n,r,a){this.route=e,this.dataService=t,this.productDetailService=n,this.notificationService=r,this.modalService=a,this.formValueChanged=!1,this.generatedVariants=[]}return e.prototype.ngOnInit=function(){var e=this;this.initOptionsAndVariants(),this.languageCode=this.route.snapshot.paramMap.get("lang")||r.getDefaultUiLanguage(),this.dataService.settings.getActiveChannel().single$.subscribe((function(t){e.currencyCode=t.activeChannel.currencyCode}))},e.prototype.onFormChanged=function(e){this.formValueChanged=!0,e.enabled=!0},e.prototype.canDeactivate=function(){return!this.formValueChanged},e.prototype.getVariantsToAdd=function(){return this.generatedVariants.filter((function(e){return!e.existing&&e.enabled}))},e.prototype.getVariantName=function(e){return 0===e.options.length?a.marker("catalog.default-variant"):e.options.map((function(e){return e.name})).join(" ")},e.prototype.addOption=function(){this.optionGroups.push({isNew:!0,name:"",values:[]})},e.prototype.generateVariants=function(){var e=this,t=this.optionGroups.map((function(e){return e.values})),n=this.generatedVariants,r=function(t,r,a,o){var i,s,c,l,d,u,p=e.getVariantPrototype(r,n);return new N({enabled:!0,existing:!!a,productVariantId:null==a?void 0:a.id,isDefault:t,options:r,price:null!==(s=null!==(i=null==a?void 0:a.price)&&void 0!==i?i:null==o?void 0:o.price)&&void 0!==s?s:p.price,sku:null!==(l=null!==(c=null==a?void 0:a.sku)&&void 0!==c?c:null==o?void 0:o.sku)&&void 0!==l?l:p.sku,stock:null!==(u=null!==(d=null==a?void 0:a.stockOnHand)&&void 0!==d?d:null==o?void 0:o.stockOnHand)&&void 0!==u?u:p.stock})};this.generatedVariants=t.length?l.generateAllCombinations(t).map((function(t){var n=e.product.variants.find((function(n){return e.optionsAreEqual(n.options,t)})),a=e.product.variants.find((function(n){return e.optionsAreSubset(n.options,t)}));return r(!1,t,n,a)})):[r(!0,[],this.product.variants[0])]},e.prototype.getVariantPrototype=function(e,t){return t.filter((function(t){return e.map((function(e){return e.name})).filter((function(e){return t.options.map((function(e){return e.name})).includes(e)}))})).length?m.pick(t[0],["sku","price","stock"]):{sku:"",price:0,stock:0}},e.prototype.deleteVariant=function(e){var t=this;this.modalService.dialog({title:a.marker("catalog.confirm-delete-product-variant"),buttons:[{type:"secondary",label:a.marker("common.cancel")},{type:"danger",label:a.marker("common.delete"),returnValue:!0}]}).pipe(o.switchMap((function(n){return n?t.productDetailService.deleteProductVariant(e,t.product.id):s.EMPTY})),o.switchMap((function(){return t.reFetchProduct(null)}))).subscribe((function(){t.notificationService.success(a.marker("common.notify-delete-success"),{entity:"ProductVariant"}),t.initOptionsAndVariants()}),(function(e){t.notificationService.error(a.marker("common.notify-delete-error"),{entity:"ProductVariant"})}))},e.prototype.save=function(){var e=this,t=this.optionGroups.filter((function(e){return e.isNew})).map((function(e){return{name:e.name,values:[]}}));this.checkUniqueSkus().pipe(o.mergeMap((function(){return e.confirmDeletionOfObsoleteVariants()})),o.mergeMap((function(){return e.productDetailService.createProductOptionGroups(t,e.languageCode)})),o.mergeMap((function(t){return e.addOptionGroupsToProduct(t)})),o.mergeMap((function(t){return e.addNewOptionsToGroups(t)})),o.mergeMap((function(t){return e.fetchOptionGroups(t)})),o.mergeMap((function(t){return e.createNewProductVariants(t)})),o.mergeMap((function(t){return e.deleteObsoleteVariants(t.createProductVariants)})),o.mergeMap((function(t){return e.reFetchProduct(t)}))).subscribe({next:function(t){e.formValueChanged=!1,e.notificationService.success(a.marker("catalog.created-new-variants-success"),{count:t.length}),e.initOptionsAndVariants()}})},e.prototype.checkUniqueSkus=function(){var e=this,t=this.generatedVariants.filter((function(t,n){return e.generatedVariants.find((function(e){return e.sku.trim()===t.sku.trim()&&e!==t}))}));return t.length?this.modalService.dialog({title:a.marker("catalog.duplicate-sku-warning"),body:p.unique(t.map((function(e){return""+e.sku}))).join(", "),buttons:[{label:a.marker("common.close"),returnValue:!1,type:"primary"}]}).pipe(o.mergeMap((function(e){return s.EMPTY}))):s.of(!0)},e.prototype.confirmDeletionOfObsoleteVariants=function(){var e=this.getObsoleteVariants();return e.length?this.modalService.fromComponent(G,{locals:{variants:e}}).pipe(o.mergeMap((function(e){return!0===e?s.of(!0):s.EMPTY}))):s.of(!0)},e.prototype.getObsoleteVariants=function(){var e=this;return this.product.variants.filter((function(t){return!e.generatedVariants.find((function(e){return e.productVariantId===t.id}))}))},e.prototype.hasOnlyDefaultVariant=function(e){return 1===e.variants.length&&0===e.optionGroups.length},e.prototype.addOptionGroupsToProduct=function(e){var t=this;return e.length?s.forkJoin(e.map((function(e){return t.dataService.product.addOptionGroupToProduct({productId:t.product.id,optionGroupId:e.id})}))).pipe(o.map((function(){return e}))):s.of([])},e.prototype.addNewOptionsToGroups=function(e){var t=this,n=this.optionGroups.map((function(n){var r=e.find((function(e){return e.name===n.name})),a=r?r.id:n.id;if(!a)throw new Error("Could not get a productOptionGroupId");return n.values.filter((function(e){return!e.locked})).map((function(e){return{productOptionGroupId:a,code:c.normalizeString(e.name,"-"),translations:[{name:e.name,languageCode:t.languageCode}]}}))})).reduce((function(e,t){return k(e,t)}),[]),r=k(e.map((function(e){return e.id})),this.optionGroups.map((function(e){return e.id})).filter(l.notNullOrUndefined));return n.length?s.forkJoin(n.map((function(e){return t.dataService.product.addOptionToGroup(e)}))).pipe(o.map((function(){return r}))):s.of(r)},e.prototype.fetchOptionGroups=function(e){var t=this;return s.forkJoin(e.map((function(e){return t.dataService.product.getProductOptionGroup(e).mapSingle((function(e){return e.productOptionGroup})).pipe(o.filter(l.notNullOrUndefined))})))},e.prototype.createNewProductVariants=function(e){var t=e.filter(l.notNullOrUndefined).map((function(e){return e.options})).reduce((function(e,t){return k(e,t)}),[]),n=this.generatedVariants.filter((function(e){return e.enabled&&!e.existing})).map((function(e){return{price:e.price,sku:e.sku,stock:e.stock,optionIds:e.options.map((function(e){return t.find((function(t){return t.name===e.name}))})).filter(l.notNullOrUndefined).map((function(e){return e.id}))}}));return this.productDetailService.createProductVariants(this.product,n,t,this.languageCode)},e.prototype.deleteObsoleteVariants=function(e){var t=this,n=this.getObsoleteVariants();if(n.length){var r=n.map((function(n){return t.dataService.product.deleteProductVariant(n.id).pipe(o.map((function(){return e})))}));return s.forkJoin.apply(void 0,k(r))}return s.of(e)},e.prototype.reFetchProduct=function(e){var t=this.route.snapshot.paramMap.get("id");return t?this.dataService.product.getProduct(t).single$.pipe(o.map((function(){return e}))):s.of(e)},e.prototype.initOptionsAndVariants=function(){var e=this;this.dataService.product.getProductVariantsOptions(this.route.snapshot.paramMap.get("id")).mapSingle((function(e){return e.product})).subscribe((function(t){e.product=t,e.optionGroups=t.optionGroups.map((function(e){return{id:e.id,isNew:!1,name:e.name,values:e.options.map((function(e){return{id:e.id,name:e.name,locked:!0}}))}})),e.generateVariants()}))},e.prototype.optionsAreEqual=function(e,t){return this.toOptionString(e)===this.toOptionString(t)},e.prototype.optionsAreSubset=function(e,t){return this.toOptionString(t).includes(this.toOptionString(e))},e.prototype.toOptionString=function(e){return e.map((function(e){return e.name})).sort().join("|")},e}();E.decorators=[{type:t.Component,args:[{selector:"vdr-product-variants-editor",template:'<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <button\r\n            class="btn btn-primary"\r\n            (click)="save()"\r\n            [disabled]="!formValueChanged || getVariantsToAdd().length === 0"\r\n        >\r\n            {{ \'common.add-new-variants\' | translate: { count: getVariantsToAdd().length } }}\r\n        </button>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<div *ngFor="let group of optionGroups" class="option-groups">\r\n    <div class="name">\r\n        <label>{{ \'catalog.option\' | translate }}</label>\r\n        <input clrInput [(ngModel)]="group.name" name="name" [readonly]="!group.isNew" />\r\n    </div>\r\n    <div class="values">\r\n        <label>{{ \'catalog.option-values\' | translate }}</label>\r\n        <vdr-option-value-input\r\n            #optionValueInputComponent\r\n            [(ngModel)]="group.values"\r\n            (ngModelChange)="generateVariants()"\r\n            [groupName]="group.name"\r\n            [disabled]="group.name === \'\'"\r\n        ></vdr-option-value-input>\r\n    </div>\r\n</div>\r\n<button\r\n    class="btn btn-primary-outline btn-sm"\r\n    (click)="addOption()"\r\n>\r\n    <clr-icon shape="plus"></clr-icon>\r\n    {{ \'catalog.add-option\' | translate }}\r\n</button>\r\n\r\n<div class="variants-preview">\r\n    <table class="table">\r\n        <thead>\r\n            <tr>\r\n                <th>{{ \'common.create\' | translate }}</th>\r\n                <th>{{ \'catalog.variant\' | translate }}</th>\r\n                <th>{{ \'catalog.sku\' | translate }}</th>\r\n                <th>{{ \'catalog.price\' | translate }}</th>\r\n                <th>{{ \'catalog.stock-on-hand\' | translate }}</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tr *ngFor="let variant of generatedVariants" [class.disabled]="!variant.enabled || variant.existing">\r\n            <td>\r\n                <input\r\n                    type="checkbox"\r\n                    *ngIf="!variant.existing"\r\n                    [(ngModel)]="variant.enabled"\r\n                    name="enabled"\r\n                    clrCheckbox\r\n                    (ngModelChange)="formValueChanged = true"\r\n                />\r\n            </td>\r\n            <td>\r\n                {{ getVariantName(variant) | translate }}\r\n            </td>\r\n            <td>\r\n                <clr-input-container *ngIf="!variant.existing">\r\n                    <input\r\n                        clrInput\r\n                        type="text"\r\n                        [(ngModel)]="variant.sku"\r\n                        [placeholder]="\'catalog.sku\' | translate"\r\n                        name="sku"\r\n                        required\r\n                        (ngModelChange)="onFormChanged(variant)"\r\n                    />\r\n                </clr-input-container>\r\n                <span *ngIf="variant.existing">{{ variant.sku }}</span>\r\n            </td>\r\n            <td>\r\n                <clr-input-container *ngIf="!variant.existing">\r\n                    <vdr-currency-input\r\n                        clrInput\r\n                        [(ngModel)]="variant.price"\r\n                        name="price"\r\n                        [currencyCode]="currencyCode"\r\n                        (ngModelChange)="onFormChanged(variant)"\r\n                    ></vdr-currency-input>\r\n                </clr-input-container>\r\n                <span *ngIf="variant.existing">{{ variant.price | localeCurrency: currencyCode }}</span>\r\n            </td>\r\n            <td>\r\n                <clr-input-container *ngIf="!variant.existing">\r\n                    <input\r\n                        clrInput\r\n                        type="number"\r\n                        [(ngModel)]="variant.stock"\r\n                        name="stock"\r\n                        min="0"\r\n                        step="1"\r\n                        (ngModelChange)="onFormChanged(variant)"\r\n                    />\r\n                </clr-input-container>\r\n                <span *ngIf="variant.existing">{{ variant.stock }}</span>\r\n            </td>\r\n            <td>\r\n                <vdr-dropdown *ngIf="variant.productVariantId as productVariantId">\r\n                    <button class="icon-button" vdrDropdownTrigger>\r\n                        <clr-icon shape="ellipsis-vertical"></clr-icon>\r\n                    </button>\r\n                    <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                        <button\r\n                            type="button"\r\n                            class="delete-button"\r\n                            (click)="deleteVariant(productVariantId)"\r\n                            vdrDropdownItem\r\n                        >\r\n                            <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                            {{ \'common.delete\' | translate }}\r\n                        </button>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.Default,styles:[".option-groups{display:flex}.option-groups:first-of-type{margin-top:24px}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}"]}]}],E.ctorParameters=function(){return[{type:n.ActivatedRoute},{type:r.DataService},{type:T},{type:r.NotificationService},{type:r.ModalService}]};var U=function(e){function t(t,n){return e.call(this,t,{__typename:"Asset",id:"",createdAt:"",updatedAt:"",name:"",type:r.AssetType.IMAGE,fileSize:0,mimeType:"",width:0,height:0,source:"",preview:"",focalPoint:null},(function(e){return n.product.getAsset(e).mapStream((function(e){return e.asset}))}))||this}return y(t,e),t}(r.BaseEntityResolver);U.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new U(t.ɵɵinject(n.Router),t.ɵɵinject(r.DataService))},token:U,providedIn:"root"}),U.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],U.ctorParameters=function(){return[{type:n.Router},{type:r.DataService}]};var j=function(e){function t(t,n){return e.call(this,t,{__typename:"Collection",id:"",createdAt:"",updatedAt:"",languageCode:r.getDefaultUiLanguage(),name:"",slug:"",isPrivate:!1,description:"",featuredAsset:null,assets:[],translations:[],filters:[],parent:{},children:null},(function(e){return n.collection.getCollection(e).mapStream((function(e){return e.collection}))}))||this}return y(t,e),t}(r.BaseEntityResolver);j.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new j(t.ɵɵinject(n.Router),t.ɵɵinject(r.DataService))},token:j,providedIn:"root"}),j.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],j.ctorParameters=function(){return[{type:n.Router},{type:r.DataService}]};var R=function(e){function t(t,n){return e.call(this,t,{__typename:"Facet",id:"",createdAt:"",updatedAt:"",isPrivate:!1,languageCode:r.getDefaultUiLanguage(),name:"",code:"",translations:[],values:[]},(function(e){return n.facet.getFacet(e).mapStream((function(e){return e.facet}))}))||this}return y(t,e),t}(r.BaseEntityResolver);R.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new R(t.ɵɵinject(n.Router),t.ɵɵinject(r.DataService))},token:R,providedIn:"root"}),R.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],R.ctorParameters=function(){return[{type:n.Router},{type:r.DataService}]};var B=function(e){function t(t,n){return e.call(this,n,{__typename:"Product",id:"",createdAt:"",updatedAt:"",enabled:!0,languageCode:r.getDefaultUiLanguage(),name:"",slug:"",featuredAsset:null,assets:[],description:"",translations:[],optionGroups:[],facetValues:[],variants:[],channels:[]},(function(e){return t.product.getProduct(e).refetchOnChannelChange().mapStream((function(e){return e.product}))}))||this}return y(t,e),t}(r.BaseEntityResolver);B.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new B(t.ɵɵinject(r.DataService),t.ɵɵinject(n.Router))},token:B,providedIn:"root"}),B.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],B.ctorParameters=function(){return[{type:r.DataService},{type:n.Router}]};var q=function(e){function t(t,n){return e.call(this,t,{__typename:"Product",id:"",createdAt:"",updatedAt:"",name:"",optionGroups:[],variants:[]},(function(e){return n.product.getProductVariantsOptions(e).mapStream((function(e){return e.product}))}))||this}return y(t,e),t}(r.BaseEntityResolver);q.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new q(t.ɵɵinject(n.Router),t.ɵɵinject(r.DataService))},token:q,providedIn:"root"}),q.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],q.ctorParameters=function(){return[{type:n.Router},{type:r.DataService}]};var _={breadcrumb:a.marker("breadcrumb.products")},z={breadcrumb:ee},W={breadcrumb:te},H={breadcrumb:a.marker("breadcrumb.facets")},J={breadcrumb:ne},Y={breadcrumb:a.marker("breadcrumb.collections")},Q={breadcrumb:re},K={breadcrumb:a.marker("breadcrumb.assets")},Z={breadcrumb:ae},X=[{path:"products",component:M,data:_},{path:"products/:id",component:L,resolve:r.createResolveData(B),canDeactivate:[r.CanDeactivateDetailGuard],data:z},{path:"products/:id/manage-variants",component:E,resolve:r.createResolveData(q),canDeactivate:[r.CanDeactivateDetailGuard],data:W},{path:"facets",component:D,data:H},{path:"facets/:id",component:V,resolve:r.createResolveData(R),canDeactivate:[r.CanDeactivateDetailGuard],data:J},{path:"collections",component:w,data:Y},{path:"collections/:id",component:S,resolve:r.createResolveData(j),canDeactivate:[r.CanDeactivateDetailGuard],data:Q},{path:"assets",component:x,data:K},{path:"assets/:id",component:P,resolve:r.createResolveData(U),data:Z}];function ee(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.products",getName:function(e){return e.name},route:"products"})}function te(e,t){return e.entity.pipe(o.map((function(e){return[{label:a.marker("breadcrumb.products"),link:["../","products"]},{label:""+e.name,link:["../","products",t.id,{tab:"variants"}]},{label:a.marker("breadcrumb.manage-variants"),link:["manage-variants"]}]})))}function ne(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.facets",getName:function(e){return e.name},route:"facets"})}function re(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.collections",getName:function(e){return e.name},route:"collections"})}function ae(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.assets",getName:function(e){return e.name},route:"assets"})}var oe=function(){function e(e,t,n){this.route=e,this.router=t,this.dataService=n,this.filterTermControl=new i.FormControl(""),this.collectionIdChange$=new s.BehaviorSubject(""),this.refresh$=new s.BehaviorSubject(!0),this.destroy$=new s.Subject}return e.prototype.ngOnInit=function(){var e=this;this.contentsCurrentPage$=this.route.paramMap.pipe(o.map((function(e){return e.get("contentsPage")})),o.map((function(e){return e?+e:1})),o.startWith(1),o.distinctUntilChanged()),this.contentsItemsPerPage$=this.route.paramMap.pipe(o.map((function(e){return e.get("contentsPerPage")})),o.map((function(e){return e?+e:10})),o.startWith(10),o.distinctUntilChanged());var t=this.filterTermControl.valueChanges.pipe(o.debounceTime(250),o.tap((function(){return e.setContentsPageNumber(1)})),o.startWith("")),n=s.combineLatest(this.collectionIdChange$,this.contentsCurrentPage$,this.contentsItemsPerPage$,t,this.refresh$).pipe(o.takeUntil(this.destroy$),o.switchMap((function(t){var n=I(t,4),r=n[0],a=n[1],o=n[2],i=n[3],c=o,l=(a-1)*o;return r?e.dataService.collection.getCollectionContents(r,c,l,i).mapSingle((function(e){return e.collection})):s.of(null)})));this.contents$=n.pipe(o.map((function(e){return e?e.productVariants.items:[]}))),this.contentsTotalItems$=n.pipe(o.map((function(e){return e?e.productVariants.totalItems:0})))},e.prototype.ngOnChanges=function(e){"collectionId"in e&&this.collectionIdChange$.next(e.collectionId.currentValue)},e.prototype.ngOnDestroy=function(){this.destroy$.next(),this.destroy$.complete()},e.prototype.setContentsPageNumber=function(e){this.setParam("contentsPage",e)},e.prototype.setContentsItemsPerPage=function(e){this.setParam("contentsPerPage",e)},e.prototype.refresh=function(){this.refresh$.next(!0)},e.prototype.setParam=function(e,t){var n;this.router.navigate(["./",Object.assign(Object.assign({},this.route.snapshot.params),(n={},n[e]=t,n))],{relativeTo:this.route,queryParamsHandling:"merge"})},e}();function ie(e,t){var n,r,a,o,i,s,c=[],l={},d=function(e){var t=new Map;function n(e){t.set(e.id,e),e.children.forEach(n)}e&&n(e);return t}(t);try{for(var u=F(e),p=u.next();!p.done;p=u.next()){var m=p.value;l[m.id]=Object.assign(Object.assign({},m),{children:[]})}}catch(e){n={error:e}}finally{try{p&&!p.done&&(r=u.return)&&r.call(u)}finally{if(n)throw n.error}}try{for(var g=F(e.map((function(e){return e.id}))),v=g.next();!v.done;v=g.next()){var f=v.value;if(l.hasOwnProperty(f)){var h=l[f];h.expanded=null!==(s=null===(i=d.get(f))||void 0===i?void 0:i.expanded)&&void 0!==s&&s;var y=h.parent;if(!y)continue;!l[y.id]?c.push(h):l[y.id]?l[y.id].children.push(h):l[y.id]={children:[h]}}}}catch(e){a={error:e}}finally{try{v&&!v.done&&(o=g.return)&&o.call(g)}finally{if(a)throw a.error}}return{id:c.length?c[0].parent.id:void 0,children:c}}oe.decorators=[{type:t.Component,args:[{selector:"vdr-collection-contents",template:'<div class="contents-header">\r\n    <div class="header-title-row">\r\n        <ng-container\r\n            *ngTemplateOutlet="headerTemplate; context: { $implicit: contentsTotalItems$ | async }"\r\n        ></ng-container>\r\n    </div>\r\n    <input\r\n        type="text"\r\n        [placeholder]="\'catalog.filter-by-name\' | translate"\r\n        [formControl]="filterTermControl"\r\n    />\r\n</div>\r\n<vdr-data-table\r\n    [items]="contents$ | async"\r\n    [itemsPerPage]="contentsItemsPerPage$ | async"\r\n    [totalItems]="contentsTotalItems$ | async"\r\n    [currentPage]="contentsCurrentPage$ | async"\r\n    (pageChange)="setContentsPageNumber($event)"\r\n    (itemsPerPageChange)="setContentsItemsPerPage($event)"\r\n>\r\n    <ng-template let-variant="item">\r\n        <td class="left align-middle">{{ variant.name }}</td>\r\n        <td class="right align-middle">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'/catalog/products\', variant.productId, { tab: \'variants\' }]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".contents-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:1;border-bottom:1px solid var(--color-component-border-200)}.contents-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.contents-header .clr-input{width:100%}:host ::ng-deep table{margin-top:-1px}"]}]}],oe.ctorParameters=function(){return[{type:n.ActivatedRoute},{type:n.Router},{type:r.DataService}]},oe.propDecorators={collectionId:[{type:t.Input}],headerTemplate:[{type:t.ContentChild,args:[t.TemplateRef,{static:!0}]}]};var se=function(){function e(){this.expandAll=!1,this.rearrange=new t.EventEmitter,this.deleteCollection=new t.EventEmitter}return e.prototype.ngOnChanges=function(e){"collections"in e&&this.collections&&(this.collectionTree=ie(this.collections,this.collectionTree))},e.prototype.onDrop=function(e){var t=e.item.data,n=e.container.data.id;if(null==n)throw new Error("Could not determine the ID of the root Collection");this.rearrange.emit({collectionId:t.id,parentId:n,index:e.currentIndex})},e.prototype.onMove=function(e){this.rearrange.emit(e)},e.prototype.onDelete=function(e){this.deleteCollection.emit(e)},e.prototype.isRootNode=function(e){return!e.hasOwnProperty("parent")},e}();se.decorators=[{type:t.Component,args:[{selector:"vdr-collection-tree",template:'<vdr-collection-tree-node\r\n    *ngIf="collectionTree"\r\n    cdkDropListGroup\r\n    [expandAll]="expandAll"\r\n    [collectionTree]="collectionTree"\r\n    [activeCollectionId]="activeCollectionId"\r\n></vdr-collection-tree-node>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],se.propDecorators={collections:[{type:t.Input}],activeCollectionId:[{type:t.Input}],expandAll:[{type:t.Input}],rearrange:[{type:t.Output}],deleteCollection:[{type:t.Output}]};var ce=function(){function e(e,t,n){this.parent=e,this.root=t,this.dataService=n,this.depth=0,this.expandAll=!1,e&&(this.depth=e.depth+1)}return e.prototype.ngOnInit=function(){this.parentName=this.collectionTree.name||"<root>";var e=this.dataService.client.userStatus().mapStream((function(e){return e.userStatus.permissions})).pipe(o.shareReplay(1));this.hasUpdatePermission$=e.pipe(o.map((function(e){return e.includes(r.Permission.UpdateCatalog)||e.includes(r.Permission.UpdateCollection)}))),this.hasDeletePermission$=e.pipe(o.map((function(e){return e.includes(r.Permission.DeleteCatalog)||e.includes(r.Permission.DeleteCollection)})))},e.prototype.ngOnChanges=function(e){var t=e.expandAll;t&&!0===t.previousValue&&!1===t.currentValue&&this.collectionTree.children.forEach((function(e){return e.expanded=!1}))},e.prototype.trackByFn=function(e,t){return t.id},e.prototype.getMoveListItems=function(e){var t=function(n,r,a){if(n.id!==e.id){var o=r.concat(n.name),i=e.parent&&e.parent.id;n.id!==i&&a.push({path:o.slice(1).join(" / ")||"root",id:n.id}),n.children.forEach((function(e){return t(e,o,a)}))}return a};return t(this.root.collectionTree,[],[])},e.prototype.move=function(e,t){this.root.onMove({index:0,parentId:t,collectionId:e.id})},e.prototype.moveUp=function(e,t){e.parent&&this.root.onMove({index:t-1,parentId:e.parent.id,collectionId:e.id})},e.prototype.moveDown=function(e,t){e.parent&&this.root.onMove({index:t+1,parentId:e.parent.id,collectionId:e.id})},e.prototype.drop=function(e){g.moveItemInArray(this.collectionTree.children,e.previousIndex,e.currentIndex),this.root.onDrop(e)},e.prototype.delete=function(e){this.root.onDelete(e)},e}();ce.decorators=[{type:t.Component,args:[{selector:"vdr-collection-tree-node",template:'<div\r\n    cdkDropList\r\n    class="tree-node"\r\n    #dropList\r\n    [cdkDropListData]="collectionTree"\r\n    [cdkDropListDisabled]="!(hasUpdatePermission$ | async)"\r\n    (cdkDropListDropped)="drop($event)"\r\n>\r\n    <div\r\n        class="collection"\r\n        [class.private]="collection.isPrivate"\r\n        *ngFor="let collection of collectionTree.children; index as i; trackBy: trackByFn"\r\n        cdkDrag\r\n        [cdkDragData]="collection"\r\n    >\r\n        <div\r\n            class="collection-detail"\r\n            [ngClass]="\'depth-\' + depth"\r\n            [class.active]="collection.id === activeCollectionId"\r\n        >\r\n            <div class="name">\r\n                <button\r\n                    class="icon-button folder-button"\r\n                    [disabled]="expandAll"\r\n                    *ngIf="collection.children?.length; else folderSpacer"\r\n                    (click)="collection.expanded = !collection.expanded"\r\n                >\r\n                    <clr-icon shape="folder" *ngIf="!collection.expanded && !expandAll"></clr-icon>\r\n                    <clr-icon shape="folder-open" *ngIf="collection.expanded || expandAll"></clr-icon>\r\n                </button>\r\n                <ng-template #folderSpacer>\r\n                    <div class="folder-button-spacer"></div>\r\n                </ng-template>\r\n                {{ collection.name }}\r\n            </div>\r\n            <div class="flex-spacer"></div>\r\n            <vdr-chip *ngIf="collection.isPrivate">{{ \'catalog.private\' | translate }}</vdr-chip>\r\n            <a\r\n                class="btn btn-link btn-sm"\r\n                [routerLink]="[\'./\', { contents: collection.id }]"\r\n                queryParamsHandling="preserve"\r\n            >\r\n                <clr-icon shape="view-list"></clr-icon>\r\n                {{ \'catalog.view-contents\' | translate }}\r\n            </a>\r\n            <a class="btn btn-link btn-sm" [routerLink]="[\'/catalog/collections/\', collection.id]">\r\n                <clr-icon shape="edit"></clr-icon>\r\n                {{ \'common.edit\' | translate }}\r\n            </a>\r\n            <div class="drag-handle" cdkDragHandle *vdrIfPermissions="[\'UpdateCatalog\', \'UpdateCollection\']">\r\n                <clr-icon shape="drag-handle" size="24"></clr-icon>\r\n            </div>\r\n            <vdr-dropdown>\r\n                <button class="icon-button" vdrDropdownTrigger>\r\n                    <clr-icon shape="ellipsis-vertical"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <a\r\n                        class="dropdown-item"\r\n                        [routerLink]="[\'./\', \'create\', { parentId: collection.id }]"\r\n                        *vdrIfPermissions="[\'CreateCatalog\', \'CreateCollection\']"\r\n                    >\r\n                        <clr-icon shape="plus"></clr-icon>\r\n                        {{ \'catalog.create-new-collection\' | translate }}\r\n                    </a>\r\n                    <div class="dropdown-divider"></div>\r\n                    <button\r\n                        type="button"\r\n                        vdrDropdownItem\r\n                        [disabled]="i === 0 || !(hasUpdatePermission$ | async)"\r\n                        (click)="moveUp(collection, i)"\r\n                    >\r\n                        <clr-icon shape="caret up"></clr-icon>\r\n                        {{ \'catalog.move-up\' | translate }}\r\n                    </button>\r\n                    <button\r\n                        type="button"\r\n                        vdrDropdownItem\r\n                        [disabled]="\r\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\r\n                        "\r\n                        (click)="moveDown(collection, i)"\r\n                    >\r\n                        <clr-icon shape="caret down"></clr-icon>\r\n                        {{ \'catalog.move-down\' | translate }}\r\n                    </button>\r\n                    <h4 class="dropdown-header">{{ \'catalog.move-to\' | translate }}</h4>\r\n                    <button\r\n                        type="button"\r\n                        vdrDropdownItem\r\n                        *ngFor="let item of getMoveListItems(collection)"\r\n                        (click)="move(collection, item.id)"\r\n                        [disabled]="!(hasUpdatePermission$ | async)"\r\n                    >\r\n                        <div class="move-to-item">\r\n                            <div class="move-icon">\r\n                                <clr-icon shape="child-arrow"></clr-icon>\r\n                            </div>\r\n                            <div class="path">\r\n                                {{ item.path }}\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                    <div class="dropdown-divider"></div>\r\n                    <button\r\n                        class="button"\r\n                        vdrDropdownItem\r\n                        (click)="delete(collection.id)"\r\n                        [disabled]="!(hasDeletePermission$ | async)"\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </div>\r\n        <vdr-collection-tree-node\r\n            *ngIf="collection.expanded || expandAll"\r\n            [expandAll]="expandAll"\r\n            [collectionTree]="collection"\r\n            [activeCollectionId]="activeCollectionId"\r\n        ></vdr-collection-tree-node>\r\n    </div>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[":host{display:block}.collection{background-color:var(--color-component-bg-100);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-left:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-left:36px}.collection .collection-detail.depth-2{padding-left:60px}.collection .collection-detail.depth-3{padding-left:84px}.collection .collection-detail.depth-4{padding-left:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background:var(--color-component-bg-100);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating,.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-right:3px}.move-to-item .path{line-height:18px}"]}]}],ce.ctorParameters=function(){return[{type:ce,decorators:[{type:t.SkipSelf},{type:t.Optional}]},{type:se},{type:r.DataService}]},ce.propDecorators={collectionTree:[{type:t.Input}],activeCollectionId:[{type:t.Input}],expandAll:[{type:t.Input}]};var le="__DEFAULT_VARIANT__",de=function(){function e(e){this.dataService=e,this.variantsChange=new t.EventEmitter,this.optionGroups=[],this.variantFormValues={}}return e.prototype.ngOnInit=function(){var e=this;this.dataService.settings.getActiveChannel().single$.subscribe((function(t){e.currencyCode=t.activeChannel.currencyCode})),this.generateVariants()},e.prototype.addOption=function(){this.optionGroups.push({name:"",values:[]})},e.prototype.removeOption=function(e){this.optionGroups=this.optionGroups.filter((function(t){return t.name!==e})),this.generateVariants()},e.prototype.generateVariants=function(){var e=this,t=this.optionGroups.reduce((function(e,t){return e+t.values.length}),0)?this.optionGroups.map((function(e){return e.values.map((function(e){return e.name}))})):[[le]];this.variants=l.generateAllCombinations(t).map((function(e){return{id:e.join("|"),values:e}})),this.variants.forEach((function(t){e.variantFormValues[t.id]||(e.variantFormValues[t.id]={optionValues:t.values,enabled:!0,price:e.copyFromDefault(t.id,"price",0),sku:e.copyFromDefault(t.id,"sku",""),stock:e.copyFromDefault(t.id,"stock",0)})})),this.onFormChange()},e.prototype.trackByFn=function(e,t){return t.values.join("|")},e.prototype.handleEnter=function(e,t){e.preventDefault(),e.stopPropagation(),t.focus()},e.prototype.onFormChange=function(){var e=this,t=this.variants.map((function(t){return e.variantFormValues[t.id]})).filter((function(e){return e.enabled}));this.variantsChange.emit({groups:this.optionGroups.map((function(e){return{name:e.name,values:e.values.map((function(e){return e.name}))}})),variants:t})},e.prototype.copyFromDefault=function(e,t,n){return e!==le?this.variantFormValues.__DEFAULT_VARIANT__[t]:n},e}();de.decorators=[{type:t.Component,args:[{selector:"vdr-generate-product-variants",template:'<div *ngFor="let group of optionGroups" class="option-groups">\r\n    <div class="name">\r\n        <label>{{ \'catalog.option\' | translate }}</label>\r\n        <input\r\n            placeholder="e.g. Size"\r\n            clrInput\r\n            [(ngModel)]="group.name"\r\n            name="name"\r\n            required\r\n            (keydown.enter)="handleEnter($event, optionValueInputComponent)"\r\n        />\r\n    </div>\r\n    <div class="values">\r\n        <label>{{ \'catalog.option-values\' | translate }}</label>\r\n        <vdr-option-value-input\r\n            #optionValueInputComponent\r\n            [(ngModel)]="group.values"\r\n            (ngModelChange)="generateVariants()"\r\n            [groupName]="group.name"\r\n            [disabled]="group.name === \'\'"\r\n        ></vdr-option-value-input>\r\n    </div>\r\n    <div class="remove-group">\r\n        <button\r\n            class="btn btn-icon btn-warning-outline"\r\n            [title]="\'catalog.remove-option\' | translate"\r\n            (click)="removeOption(group.name)"\r\n        >\r\n            <clr-icon shape="trash"></clr-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n<button class="btn btn-primary-outline btn-sm" (click)="addOption()">\r\n    <clr-icon shape="plus"></clr-icon>\r\n    {{ \'catalog.add-option\' | translate }}\r\n</button>\r\n\r\n<div class="variants-preview">\r\n    <table class="table">\r\n        <thead>\r\n            <tr>\r\n                <th *ngIf="1 < variants.length">{{ \'common.create\' | translate }}</th>\r\n                <th *ngIf="1 < variants.length">{{ \'catalog.variant\' | translate }}</th>\r\n                <th>{{ \'catalog.sku\' | translate }}</th>\r\n                <th>{{ \'catalog.price\' | translate }}</th>\r\n                <th>{{ \'catalog.stock-on-hand\' | translate }}</th>\r\n            </tr>\r\n        </thead>\r\n        <tr\r\n            *ngFor="let variant of variants; trackBy: trackByFn"\r\n            [class.disabled]="!variantFormValues[variant.id].enabled"\r\n        >\r\n            <td *ngIf="1 < variants.length">\r\n                <input\r\n                    type="checkbox"\r\n                    (change)="onFormChange()"\r\n                    [(ngModel)]="variantFormValues[variant.id].enabled"\r\n                    clrCheckbox\r\n                />\r\n            </td>\r\n            <td *ngIf="1 < variants.length">\r\n                {{ variant.values.join(\' \') }}\r\n            </td>\r\n            <td>\r\n                <clr-input-container>\r\n                    <input\r\n                        clrInput\r\n                        type="text"\r\n                        (change)="onFormChange()"\r\n                        [(ngModel)]="variantFormValues[variant.id].sku"\r\n                        [placeholder]="\'catalog.sku\' | translate"\r\n                    />\r\n                </clr-input-container>\r\n            </td>\r\n            <td>\r\n                <clr-input-container>\r\n                    <vdr-currency-input\r\n                        clrInput\r\n                        [(ngModel)]="variantFormValues[variant.id].price"\r\n                        (ngModelChange)="onFormChange()"\r\n                        [currencyCode]="currencyCode"\r\n                    ></vdr-currency-input>\r\n                </clr-input-container>\r\n            </td>\r\n            <td>\r\n                <clr-input-container>\r\n                    <input\r\n                        clrInput\r\n                        type="number"\r\n                        [(ngModel)]="variantFormValues[variant.id].stock"\r\n                        (change)="onFormChange()"\r\n                        min="0"\r\n                        step="1"\r\n                    />\r\n                </clr-input-container>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n',styles:[":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}"]}]}],de.ctorParameters=function(){return[{type:r.DataService}]},de.propDecorators={variantsChange:[{type:t.Output}]};var ue={provide:i.NG_VALUE_ACCESSOR,useExisting:t.forwardRef((function(){return pe})),multi:!0},pe=function(){function e(e){this.changeDetector=e,this.groupName="",this.disabled=!1,this.input="",this.isFocussed=!1,this.lastSelected=!1}return e.prototype.registerOnChange=function(e){this.onChangeFn=e},e.prototype.registerOnTouched=function(e){this.onTouchFn=e},e.prototype.setDisabledState=function(e){this.disabled=e,this.changeDetector.markForCheck()},e.prototype.writeValue=function(e){this.options=e||[]},e.prototype.focus=function(){this.textArea.nativeElement.focus()},e.prototype.removeOption=function(e){e.locked||(this.options=this.options.filter((function(t){return t.name!==e.name})),this.onChangeFn(this.options))},e.prototype.handleKey=function(e){switch(e.key){case",":case"Enter":this.addOptionValue(),e.preventDefault();break;case"Backspace":this.lastSelected?(this.removeLastOption(),this.lastSelected=!1):""===this.input&&(this.lastSelected=!0);break;default:this.lastSelected=!1}},e.prototype.handleBlur=function(){this.isFocussed=!1,this.addOptionValue()},e.prototype.addOptionValue=function(){this.options=p.unique(k(this.options,this.parseInputIntoOptions(this.input))),this.input="",this.onChangeFn(this.options)},e.prototype.parseInputIntoOptions=function(e){return e.split(/[,\n]/).map((function(e){return e.trim()})).filter((function(e){return""!==e})).map((function(e){return{name:e,locked:!1}}))},e.prototype.removeLastOption=function(){this.options[this.options.length-1].locked||(this.options=this.options.slice(0,this.options.length-1))},e}();pe.decorators=[{type:t.Component,args:[{selector:"vdr-option-value-input",template:'<div class="input-wrapper" [class.focus]="isFocussed" (click)="textArea.focus()">\r\n    <div class="chips" *ngIf="0 < options.length">\r\n        <vdr-chip\r\n            *ngFor="let option of options; last as isLast"\r\n            [icon]="option.locked ? \'lock\' : \'times\'"\r\n            [class.selected]="isLast && lastSelected"\r\n            [class.locked]="option.locked"\r\n            [colorFrom]="groupName"\r\n            (iconClick)="removeOption(option)"\r\n        >\r\n            {{ option.name }}\r\n        </vdr-chip>\r\n    </div>\r\n    <textarea\r\n        #textArea\r\n        (keyup)="handleKey($event)"\r\n        (focus)="isFocussed = true"\r\n        (blur)="handleBlur()"\r\n        [(ngModel)]="input"\r\n        [disabled]="disabled"\r\n    ></textarea>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.Default,providers:[ue],styles:[".input-wrapper{background-color:#fff;border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}"]}]}],pe.ctorParameters=function(){return[{type:t.ChangeDetectorRef}]},pe.propDecorators={groupName:[{type:t.Input}],textArea:[{type:t.ViewChild,args:["textArea",{static:!0}]}]};var me=function(){function e(e,n,a,o){this.modalService=e,this.changeDetector=n,this.viewportRuler=a,this.collectionDetailComponent=o,this.compact=!1,this.change=new t.EventEmitter,this.assets=[],this.updateCollectionPermissions=[r.Permission.UpdateCatalog,r.Permission.UpdateCollection],this.updateProductPermissions=[r.Permission.UpdateCatalog,r.Permission.UpdateProduct]}return Object.defineProperty(e.prototype,"assetsSetter",{set:function(e){this.assets=e.slice()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"updatePermissions",{get:function(){return this.collectionDetailComponent?this.updateCollectionPermissions:this.updateProductPermissions},enumerable:!1,configurable:!0}),e.prototype.selectAssets=function(){var e=this;this.modalService.fromComponent(r.AssetPickerDialogComponent,{size:"xl"}).subscribe((function(t){t&&t.length&&(e.assets=p.unique(e.assets.concat(t),"id"),e.featuredAsset||(e.featuredAsset=t[0]),e.emitChangeEvent(e.assets,e.featuredAsset),e.changeDetector.markForCheck())}))},e.prototype.setAsFeatured=function(e){this.featuredAsset=e,this.emitChangeEvent(this.assets,e)},e.prototype.isFeatured=function(e){return!!this.featuredAsset&&this.featuredAsset.id===e.id},e.prototype.previewAsset=function(e){this.modalService.fromComponent(r.AssetPreviewDialogComponent,{size:"xl",closable:!0,locals:{asset:e}}).subscribe()},e.prototype.removeAsset=function(e){this.assets=this.assets.filter((function(t){return t.id!==e.id})),this.featuredAsset&&this.featuredAsset.id===e.id&&(this.featuredAsset=this.assets.length>0?this.assets[0]:void 0),this.emitChangeEvent(this.assets,this.featuredAsset)},e.prototype.emitChangeEvent=function(e,t){this.change.emit({assets:e,featuredAsset:t})},e.prototype.dropListDropped=function(e){g.moveItemInArray(this.assets,e.previousContainer.data,e.container.data),this.emitChangeEvent(this.assets,this.featuredAsset)},e}();me.decorators=[{type:t.Component,args:[{selector:"vdr-product-assets",template:'<div class="card" *ngIf="!compact; else compactView">\r\n    <div class="card-img">\r\n        <div class="featured-asset">\r\n            <img\r\n                *ngIf="featuredAsset"\r\n                [src]="featuredAsset | assetPreview:\'small\'"\r\n                (click)="previewAsset(featuredAsset)"\r\n            />\r\n            <div class="placeholder" *ngIf="!featuredAsset" (click)="selectAssets()">\r\n                <clr-icon shape="image" size="128"></clr-icon>\r\n                <div>{{ \'catalog.no-featured-asset\' | translate }}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card-block"><ng-container *ngTemplateOutlet="assetList"></ng-container></div>\r\n    <div class="card-footer" *vdrIfPermissions="updatePermissions">\r\n        <button class="btn" (click)="selectAssets()">\r\n            <clr-icon shape="attachment"></clr-icon>\r\n            {{ \'asset.add-asset\' | translate }}\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #compactView>\r\n    <div class="featured-asset compact">\r\n        <img\r\n            *ngIf="featuredAsset"\r\n            [src]="featuredAsset | assetPreview:\'thumb\'"\r\n            (click)="previewAsset(featuredAsset)"\r\n        />\r\n\r\n        <div class="placeholder" *ngIf="!featuredAsset" (click)="selectAssets()"><clr-icon shape="image" size="150"></clr-icon></div>\r\n    </div>\r\n    <ng-container *ngTemplateOutlet="assetList"></ng-container>\r\n    <button\r\n        *vdrIfPermissions="updatePermissions"\r\n        class="compact-select btn btn-icon btn-sm btn-block"\r\n        [title]="\'asset.add-asset\' | translate"\r\n        (click)="selectAssets()"\r\n    >\r\n        <clr-icon shape="attachment"></clr-icon>\r\n        {{ \'asset.add-asset\' | translate }}\r\n    </button>\r\n</ng-template>\r\n\r\n<ng-template #assetList>\r\n    <div class="all-assets" [class.compact]="compact" cdkDropListGroup>\r\n        <div\r\n            *ngFor="let asset of assets; let index = index"\r\n            class="drop-list"\r\n            cdkDropList\r\n            cdkDropListOrientation="horizontal"\r\n            [cdkDropListData]="index"\r\n            [cdkDropListDisabled]="!(updatePermissions | hasPermission)"\r\n            (cdkDropListDropped)="dropListDropped($event)"\r\n        >\r\n            <vdr-dropdown cdkDrag>\r\n                <div\r\n                    class="asset-thumb"\r\n                    vdrDropdownTrigger\r\n                    [class.featured]="isFeatured(asset)"\r\n                    [title]=""\r\n                    tabindex="0"\r\n                >\r\n                    <img [src]="asset | assetPreview:\'tiny\'" />\r\n                </div>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button type="button" vdrDropdownItem (click)="previewAsset(asset)">\r\n                        {{ \'asset.preview\' | translate }}\r\n                    </button>\r\n                    <button\r\n                        type="button"\r\n                        [disabled]="isFeatured(asset) || !(updatePermissions | hasPermission)"\r\n                        vdrDropdownItem\r\n                        (click)="setAsFeatured(asset)"\r\n                    >\r\n                        {{ \'asset.set-as-featured-asset\' | translate }}\r\n                    </button>\r\n                    <div class="dropdown-divider"></div>\r\n                    <button\r\n                        type="button"\r\n                        class="remove-asset"\r\n                        vdrDropdownItem\r\n                        [disabled]="!(updatePermissions | hasPermission)"\r\n                        (click)="removeAsset(asset)"\r\n                    >\r\n                        {{ \'asset.remove-asset\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[":host{width:340px;display:block}:host.compact{width:162px}.placeholder{text-align:center;color:var(--color-grey-300)}.featured-asset{text-align:center;background:var(--color-component-bg-200);padding:6px;cursor:pointer}.featured-asset.compact{width:100%;min-height:40px;position:relative;padding:6px}.featured-asset .compact-select{position:absolute;bottom:6px;right:6px;margin:0}.all-assets{display:flex;flex-wrap:wrap}.all-assets .drop-list{min-width:60px}.all-assets .asset-thumb{margin:3px;padding:0;border:2px solid var(--color-component-border-100);cursor:pointer}.all-assets .asset-thumb.featured{border-color:var(--color-primary-500)}.all-assets .remove-asset{color:var(--color-warning-500)}.all-assets.compact .drop-list{min-width:54px}.all-assets.compact .asset-thumb{margin:1px;border-width:1px}.all-assets.compact .cdk-drag-placeholder,.all-assets.compact .cdk-drag-placeholder .asset-thumb{width:50px}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box:last-child{border:none}.all-assets.cdk-drop-list-dragging vdr-dropdown:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drop-list-dragging>:not(.cdk-drag-placeholder){display:none}"]}]}],me.ctorParameters=function(){return[{type:r.ModalService},{type:t.ChangeDetectorRef},{type:v.ViewportRuler},{type:S,decorators:[{type:t.Optional}]}]},me.propDecorators={assetsSetter:[{type:t.Input,args:["assets"]}],featuredAsset:[{type:t.Input}],compact:[{type:t.HostBinding,args:["class.compact"]},{type:t.Input}],change:[{type:t.Output}]};var ge=r.SingleSearchSelectionModelFactory,ve=function(){function e(){var e=this;this.searchTermChange=new t.EventEmitter,this.facetValueChange=new t.EventEmitter,this.lastTerm="",this.lastFacetValueIds=[],this.filterFacetResults=function(t,n){return!!e.isFacetValueItem(n)&&(n.facetValue.name.toLowerCase().startsWith(t.toLowerCase())||n.facetValue.facet.name.toLowerCase().startsWith(t.toLowerCase()))},this.isFacetValueItem=function(e){return"object"==typeof e&&!!e&&e.hasOwnProperty("facetValue")}}return e.prototype.setSearchTerm=function(e){var t=this;if(e)this.selectComponent.select({label:e,value:{label:e}});else{var n=this.selectComponent.selectedItems.find((function(e){return!t.isFacetValueItem(e.value)}));n&&this.selectComponent.unselect(n)}},e.prototype.setFacetValues=function(e){var t=this,n=this.selectComponent.items;this.selectComponent.selectedItems.forEach((function(n){t.isFacetValueItem(n.value)&&!e.includes(n.value.facetValue.id)&&t.selectComponent.unselect(n)})),e.map((function(e){return n.find((function(n){return t.isFacetValueItem(n)&&n.facetValue.id===e}))})).filter(l.notNullOrUndefined).forEach((function(e){t.selectComponent.selectedItems.find((function(n){var r=n.value;return!!t.isFacetValueItem(r)&&r.facetValue.id===e.facetValue.id}))||t.selectComponent.select({label:"",value:e})}))},e.prototype.onSelectChange=function(e){var t=this;Array.isArray(e)||(e=[e]);var n=e.find((function(e){return!t.isFacetValueItem(e)})),r=n?n.label:"",a=e.filter(this.isFacetValueItem).map((function(e){return e.facetValue.id}));r!==this.lastTerm&&(this.searchTermChange.emit(r),this.lastTerm=r),this.lastFacetValueIds.join(",")!==a.join(",")&&(this.facetValueChange.emit(a),this.lastFacetValueIds=a)},e.prototype.addTagFn=function(e){return{label:e}},e.prototype.isSearchHeaderSelected=function(){return-1===this.selectComponent.itemsList.markedIndex},e}();ve.decorators=[{type:t.Component,args:[{selector:"vdr-product-search-input",template:'<ng-select\r\n    [addTag]="addTagFn"\r\n    [placeholder]="\'catalog.search-product-name-or-code\' | translate"\r\n    [items]="facetValueResults"\r\n    [searchFn]="filterFacetResults"\r\n    [hideSelected]="true"\r\n    [multiple]="true"\r\n    [markFirst]="false"\r\n    (change)="onSelectChange($event)"\r\n    #selectComponent\r\n>\r\n    <ng-template ng-header-tmp>\r\n        <div\r\n            class="search-header"\r\n            *ngIf="selectComponent.searchTerm"\r\n            [class.selected]="isSearchHeaderSelected()"\r\n            (click)="selectComponent.selectTag()"\r\n        >\r\n            {{ \'catalog.search-for-term\' | translate }}: {{ selectComponent.searchTerm }}\r\n        </div>\r\n    </ng-template>\r\n    <ng-template ng-label-tmp let-item="item" let-clear="clear">\r\n        <ng-container *ngIf="item.facetValue">\r\n            <vdr-facet-value-chip\r\n                [facetValue]="item.facetValue"\r\n                [removable]="true"\r\n                (remove)="clear(item)"\r\n            ></vdr-facet-value-chip>\r\n        </ng-container>\r\n        <ng-container *ngIf="!item.facetValue">\r\n            <vdr-chip [icon]="\'times\'" (iconClick)="clear(item)">"{{ item.label }}"</vdr-chip>\r\n        </ng-container>\r\n    </ng-template>\r\n    <ng-template ng-option-tmp let-item="item" let-index="index" let-search="searchTerm">\r\n        <ng-container *ngIf="item.facetValue">\r\n            <vdr-facet-value-chip [facetValue]="item.facetValue" [removable]="false"></vdr-facet-value-chip>\r\n        </ng-container>\r\n    </ng-template>\r\n</ng-select>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,providers:[{provide:f.SELECTION_MODEL_FACTORY,useValue:ge}],styles:[":host{margin-top:6px;display:block;width:100%}:host ::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{background:none;margin:0}:host ::ng-deep .ng-dropdown-panel-items div.ng-option:last-child{display:none}:host ::ng-deep .ng-dropdown-panel .ng-dropdown-header{border:none;padding:0}:host ::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container{padding:0}:host ::ng-deep .ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{padding-left:8px}ng-select{width:100%;min-width:300px;margin-right:12px}.search-header{padding:8px 10px;border-bottom:1px solid var(--color-component-border-100);cursor:pointer}.search-header.selected,.search-header:hover{background-color:var(--color-component-bg-200)}"]}]}],ve.propDecorators={facetValueResults:[{type:t.Input}],searchTermChange:[{type:t.Output}],facetValueChange:[{type:t.Output}],selectComponent:[{type:t.ViewChild,args:["selectComponent",{static:!0}]}]};var fe=function(){function e(){this.updateVariantName=!0,this.codeInputTouched=!1}return e.prototype.ngOnInit=function(){var e,t,n,r=this,a=this.productOption.translations.find((function(e){return e.languageCode===r.activeLanguage}));if(this.name=null!==(n=null==a?void 0:a.name)&&void 0!==n?n:"",this.code=this.productOption.code,this.customFieldsForm=new i.FormGroup({}),this.customFields){var o=a&&a.customFields||{};try{for(var s=F(this.customFields),c=s.next();!c.done;c=s.next()){var l=c.value,d=l.name,u="localeString"===l.type?o[d]:this.productOption.customFields[d];this.customFieldsForm.addControl(l.name,new i.FormControl(u))}}catch(t){e={error:t}}finally{try{c&&!c.done&&(t=s.return)&&t.call(s)}finally{if(e)throw e.error}}}},e.prototype.update=function(){var e=r.createUpdatedTranslatable({translatable:this.productOption,languageCode:this.activeLanguage,updatedFields:{code:this.code,name:this.name,customFields:this.customFieldsForm.value},customFieldConfig:this.customFields,defaultTranslation:{languageCode:this.activeLanguage,name:""}});this.resolveWith(Object.assign(Object.assign({},e),{autoUpdate:this.updateVariantName}))},e.prototype.cancel=function(){this.resolveWith()},e.prototype.updateCode=function(e){this.codeInputTouched||this.productOption.code||(this.code=c.normalizeString(e,"-"))},e}();fe.decorators=[{type:t.Component,args:[{selector:"vdr-update-product-option-dialog",template:'<ng-template vdrDialogTitle>{{ \'catalog.update-product-option\' | translate }}</ng-template>\r\n<vdr-form-field [label]="\'catalog.option-name\' | translate" for="name">\r\n    <input\r\n        id="name"\r\n        type="text"\r\n        #nameInput="ngModel"\r\n        [(ngModel)]="name"\r\n        required\r\n        (input)="updateCode($event.target.value)"\r\n    />\r\n</vdr-form-field>\r\n<vdr-form-field [label]="\'common.code\' | translate" for="code">\r\n    <input id="code" type="text" #codeInput="ngModel" required [(ngModel)]="code" pattern="[a-z0-9_-]+" />\r\n</vdr-form-field>\r\n<clr-checkbox-wrapper>\r\n    <input type="checkbox" clrCheckbox [(ngModel)]="updateVariantName" />\r\n    <label>{{ \'catalog.auto-update-option-variant-name\' | translate }}</label>\r\n</clr-checkbox-wrapper>\r\n<section *ngIf="customFields.length">\r\n    <label>{{ \'common.custom-fields\' | translate }}</label>\r\n    <ng-container *ngFor="let customField of customFields">\r\n        <vdr-custom-field-control\r\n            *ngIf="customFieldsForm.get(customField.name)"\r\n            entityName="ProductOption"\r\n            [customFieldsFormGroup]="customFieldsForm"\r\n            [customField]="customField"\r\n            [readonly]="!([\'UpdateCatalog\', \'UpdateProduct\'] | hasPermission)"\r\n        ></vdr-custom-field-control>\r\n    </ng-container>\r\n</section>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type="button" class="btn" (click)="cancel()">{{ \'common.cancel\' | translate }}</button>\r\n    <button\r\n        type="submit"\r\n        (click)="update()"\r\n        [disabled]="\r\n            nameInput.invalid ||\r\n            codeInput.invalid ||\r\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\r\n        "\r\n        class="btn btn-primary"\r\n    >\r\n        {{ \'catalog.update-product-option\' | translate }}\r\n    </button>\r\n</ng-template>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}];var he=function(){function e(e,n,a){this.changeDetector=e,this.modalService=n,this.dataService=a,this.assignToChannel=new t.EventEmitter,this.removeFromChannel=new t.EventEmitter,this.assetChange=new t.EventEmitter,this.selectionChange=new t.EventEmitter,this.selectFacetValueClick=new t.EventEmitter,this.updateProductOption=new t.EventEmitter,this.selectedVariantIds=[],this.pagination={currentPage:1,itemsPerPage:10},this.formGroupMap=new Map,this.GlobalFlag=r.GlobalFlag,this.updatePermission=[r.Permission.UpdateCatalog,r.Permission.UpdateProduct]}return e.prototype.ngOnInit=function(){var e=this;this.dataService.settings.getGlobalSettings("cache-first").single$.subscribe((function(t){var n=t.globalSettings;e.globalTrackInventory=n.trackInventory,e.globalOutOfStockThreshold=n.outOfStockThreshold,e.changeDetector.markForCheck()})),this.subscription=this.formArray.valueChanges.subscribe((function(){return e.changeDetector.markForCheck()})),this.subscription.add(this.formArray.valueChanges.pipe(o.map((function(e){return e.length})),o.debounceTime(1),o.distinctUntilChanged()).subscribe((function(){e.buildFormGroupMap()}))),this.buildFormGroupMap()},e.prototype.ngOnChanges=function(e){var t,n;"facets"in e&&e.facets.currentValue&&(this.facetValues=r.flattenFacetValues(this.facets)),"variants"in e&&(null===(t=e.variants.currentValue)||void 0===t?void 0:t.length)!==(null===(n=e.variants.previousValue)||void 0===n?void 0:n.length)&&(this.pagination.currentPage=1)},e.prototype.ngOnDestroy=function(){this.subscription&&this.subscription.unsubscribe()},e.prototype.isDefaultChannel=function(e){return e===u.DEFAULT_CHANNEL_CODE},e.prototype.trackById=function(e,t){return t.id},e.prototype.inventoryIsNotTracked=function(e){var t,n=null===(t=e.get("trackInventory"))||void 0===t?void 0:t.value;return n===r.GlobalFlag.FALSE||n===r.GlobalFlag.INHERIT&&!1===this.globalTrackInventory},e.prototype.getTaxCategoryName=function(e){var t=e.get(["taxCategoryId"]);if(t&&this.taxCategories){var n=this.taxCategories.find((function(e){return e.id===t.value}));return n?n.name:""}return""},e.prototype.getSaleableStockLevel=function(e){var t=e.useGlobalOutOfStockThreshold?this.globalOutOfStockThreshold:e.outOfStockThreshold;return e.stockOnHand-e.stockAllocated-t},e.prototype.areAllSelected=function(){return!!this.variants&&this.selectedVariantIds.length===this.variants.length},e.prototype.onAssetChange=function(e,t){this.assetChange.emit(Object.assign({variantId:e},t));var n=this.variants.findIndex((function(t){return t.id===e}));this.formArray.at(n).markAsDirty()},e.prototype.toggleSelectAll=function(){this.areAllSelected()?this.selectedVariantIds=[]:this.selectedVariantIds=this.variants.map((function(e){return e.id})),this.selectionChange.emit(this.selectedVariantIds)},e.prototype.toggleSelectVariant=function(e){var t=this.selectedVariantIds.indexOf(e);-1<t?this.selectedVariantIds.splice(t,1):this.selectedVariantIds.push(e),this.selectionChange.emit(this.selectedVariantIds)},e.prototype.optionGroupName=function(e){var t,n=this,r=this.optionGroups.find((function(t){return t.id===e}));if(r)return(null!==(t=null==r?void 0:r.translations.find((function(e){return e.languageCode===n.activeLanguage})))&&void 0!==t?t:r.translations[0]).name},e.prototype.optionName=function(e){var t,n=this;return(null!==(t=e.translations.find((function(e){return e.languageCode===n.activeLanguage})))&&void 0!==t?t:e.translations[0]).name},e.prototype.pendingFacetValues=function(e){var t=this;if(this.facets){var n=this.getFacetValueIds(e.id),r=e.facetValues.map((function(e){return e.id}));return n.filter((function(e){return!r.includes(e)})).map((function(e){return t.facetValues.find((function(t){return t.id===e}))})).filter(l.notNullOrUndefined)}return[]},e.prototype.existingFacetValues=function(e){return k(this.getFacetValueIds(e.id)).filter((function(t){return e.facetValues.map((function(e){return e.id})).includes(t)})).map((function(t){return e.facetValues.find((function(e){return e.id===t}))})).filter(l.notNullOrUndefined)},e.prototype.removeFacetValue=function(e,t){var n=this.formGroupMap.get(e.id);if(n){var r=n.value.facetValueIds.filter((function(e){return e!==t}));n.patchValue({facetValueIds:r}),n.markAsDirty()}},e.prototype.isVariantSelected=function(e){return-1<this.selectedVariantIds.indexOf(e)},e.prototype.editOption=function(e){var t=this;this.modalService.fromComponent(fe,{size:"md",locals:{productOption:e,activeLanguage:this.activeLanguage,customFields:this.customOptionFields}}).subscribe((function(e){e&&t.updateProductOption.emit(e)}))},e.prototype.buildFormGroupMap=function(){var e,t;this.formGroupMap.clear();try{for(var n=F(this.formArray.controls),r=n.next();!r.done;r=n.next()){var a=r.value;this.formGroupMap.set(a.value.id,a)}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}this.changeDetector.markForCheck()},e.prototype.getFacetValueIds=function(e){var t;return(null===(t=this.formGroupMap.get(e))||void 0===t?void 0:t.value).facetValueIds},e}();he.decorators=[{type:t.Component,args:[{selector:"vdr-product-variants-list",template:'<div class="variants-list">\r\n    <div\r\n        class="variant-container card"\r\n        *ngFor="let variant of variants | paginate: pagination; trackBy: trackById; let i = index"\r\n        [class.disabled]="!formGroupMap.get(variant.id)?.get(\'enabled\')?.value"\r\n    >\r\n        <ng-container *ngIf="formGroupMap.get(variant.id) as formGroup" [formGroup]="formGroup">\r\n            <div class="card-block header-row">\r\n                <div class="details">\r\n                    <vdr-title-input class="sku" [readonly]="!(updatePermission | hasPermission)">\r\n                        <clr-input-container>\r\n                            <input\r\n                                clrInput\r\n                                type="text"\r\n                                formControlName="sku"\r\n                                [readonly]="!(updatePermission | hasPermission)"\r\n                                [placeholder]="\'catalog.sku\' | translate"\r\n                            />\r\n                        </clr-input-container>\r\n                    </vdr-title-input>\r\n                    <vdr-title-input class="name" [readonly]="!(updatePermission | hasPermission)">\r\n                        <clr-input-container>\r\n                            <input\r\n                                clrInput\r\n                                type="text"\r\n                                formControlName="name"\r\n                                [readonly]="!(updatePermission | hasPermission)"\r\n                                [placeholder]="\'common.name\' | translate"\r\n                            />\r\n                        </clr-input-container>\r\n                    </vdr-title-input>\r\n                </div>\r\n                <div class="right-controls">\r\n                    <clr-toggle-wrapper *vdrIfPermissions="updatePermission">\r\n                        <input type="checkbox" clrToggle name="enabled" formControlName="enabled" />\r\n                        <label>{{ \'common.enabled\' | translate }}</label>\r\n                    </clr-toggle-wrapper>\r\n                </div>\r\n            </div>\r\n            <div class="card-block">\r\n                <div class="variant-body">\r\n                    <div class="assets">\r\n                        <vdr-product-assets\r\n                            [compact]="true"\r\n                            [assets]="pendingAssetChanges[variant.id]?.assets || variant.assets"\r\n                            [featuredAsset]="pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset"\r\n                            (change)="onAssetChange(variant.id, $event)"\r\n                        ></vdr-product-assets>\r\n                    </div>\r\n                    <div class="variant-form-inputs">\r\n                        <div class="standard-fields">\r\n                            <div class="variant-form-input-row">\r\n                                <div class="tax-category">\r\n                                    <clr-select-container\r\n                                        *vdrIfPermissions="updatePermission; else taxCategoryLabel"\r\n                                    >\r\n                                        <label>{{ \'catalog.tax-category\' | translate }}</label>\r\n                                        <select clrSelect name="options" formControlName="taxCategoryId">\r\n                                            <option\r\n                                                *ngFor="let taxCategory of taxCategories"\r\n                                                [value]="taxCategory.id"\r\n                                            >\r\n                                                {{ taxCategory.name }}\r\n                                            </option>\r\n                                        </select>\r\n                                    </clr-select-container>\r\n                                    <ng-template #taxCategoryLabel>\r\n                                        <label class="clr-control-label">{{\r\n                                            \'catalog.tax-category\' | translate\r\n                                        }}</label>\r\n                                        <div class="tax-category-label">\r\n                                            {{ getTaxCategoryName(formGroup) }}\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </div>\r\n                                <div class="price">\r\n                                    <clr-input-container>\r\n                                        <label>{{ \'catalog.price\' | translate }}</label>\r\n                                        <vdr-currency-input\r\n                                            *ngIf="!channelPriceIncludesTax"\r\n                                            clrInput\r\n                                            [currencyCode]="variant.currencyCode"\r\n                                            [readonly]="!(updatePermission | hasPermission)"\r\n                                            formControlName="price"\r\n                                        ></vdr-currency-input>\r\n                                        <vdr-currency-input\r\n                                            *ngIf="channelPriceIncludesTax"\r\n                                            clrInput\r\n                                            [currencyCode]="variant.currencyCode"\r\n                                            [readonly]="!(updatePermission | hasPermission)"\r\n                                            formControlName="priceWithTax"\r\n                                        ></vdr-currency-input>\r\n                                    </clr-input-container>\r\n                                </div>\r\n                                <vdr-variant-price-detail\r\n                                    [price]="formGroup.get(\'price\')!.value"\r\n                                    [currencyCode]="variant.currencyCode"\r\n                                    [priceIncludesTax]="channelPriceIncludesTax"\r\n                                    [taxCategoryId]="formGroup.get(\'taxCategoryId\')!.value"\r\n                                ></vdr-variant-price-detail>\r\n                            </div>\r\n                            <div class="variant-form-input-row">\r\n                                <clr-select-container *vdrIfPermissions="updatePermission">\r\n                                    <label\r\n                                        >{{ \'catalog.track-inventory\' | translate }}\r\n                                        <vdr-help-tooltip\r\n                                            [content]="\'catalog.track-inventory-tooltip\' | translate"\r\n                                        ></vdr-help-tooltip>\r\n                                    </label>\r\n                                    <select clrSelect name="options" formControlName="trackInventory">\r\n                                        <option [value]="GlobalFlag.TRUE">\r\n                                            {{ \'catalog.track-inventory-true\' | translate }}\r\n                                        </option>\r\n                                        <option [value]="GlobalFlag.FALSE">\r\n                                            {{ \'catalog.track-inventory-false\' | translate }}\r\n                                        </option>\r\n                                        <option [value]="GlobalFlag.INHERIT">\r\n                                            {{ \'catalog.track-inventory-inherit\' | translate }}\r\n                                        </option>\r\n                                    </select>\r\n                                </clr-select-container>\r\n                                <clr-input-container>\r\n                                    <label\r\n                                        >{{ \'catalog.stock-on-hand\' | translate }}\r\n                                        <vdr-help-tooltip\r\n                                            [content]="\'catalog.stock-on-hand-tooltip\' | translate"\r\n                                        ></vdr-help-tooltip\r\n                                    ></label>\r\n                                    <input\r\n                                        [class.inventory-untracked]="inventoryIsNotTracked(formGroup)"\r\n                                        clrInput\r\n                                        type="number"\r\n                                        min="0"\r\n                                        step="1"\r\n                                        formControlName="stockOnHand"\r\n                                        [readonly]="!(updatePermission | hasPermission)"\r\n                                        [vdrDisabled]="inventoryIsNotTracked(formGroup)"\r\n                                    />\r\n                                </clr-input-container>\r\n                                <div [class.inventory-untracked]="inventoryIsNotTracked(formGroup)">\r\n                                    <label class="clr-control-label"\r\n                                        >{{ \'catalog.stock-allocated\' | translate }}\r\n                                        <vdr-help-tooltip\r\n                                            [content]="\'catalog.stock-allocated-tooltip\' | translate"\r\n                                        ></vdr-help-tooltip\r\n                                    ></label>\r\n                                    <div class="value">\r\n                                        {{ variant.stockAllocated }}\r\n                                    </div>\r\n                                </div>\r\n                                <div [class.inventory-untracked]="inventoryIsNotTracked(formGroup)">\r\n                                    <label class="clr-control-label"\r\n                                        >{{ \'catalog.stock-saleable\' | translate }}\r\n                                        <vdr-help-tooltip\r\n                                            [content]="\'catalog.stock-saleable-tooltip\' | translate"\r\n                                        ></vdr-help-tooltip\r\n                                    ></label>\r\n                                    <div class="value">\r\n                                        {{ getSaleableStockLevel(variant) }}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="variant-form-input-row">\r\n                                <div\r\n                                    class="out-of-stock-threshold-wrapper"\r\n                                    [class.inventory-untracked]="inventoryIsNotTracked(formGroup)"\r\n                                >\r\n                                    <label class="clr-control-label"\r\n                                        >{{ \'catalog.out-of-stock-threshold\' | translate\r\n                                        }}<vdr-help-tooltip\r\n                                            [content]="\'catalog.out-of-stock-threshold-tooltip\' | translate"\r\n                                        ></vdr-help-tooltip\r\n                                    ></label>\r\n                                    <div class="flex">\r\n                                        <clr-input-container>\r\n                                            <input\r\n                                                clrInput\r\n                                                type="number"\r\n                                                [formControl]="formGroup.get(\'outOfStockThreshold\')"\r\n                                                [readonly]="!(updatePermission | hasPermission)"\r\n                                                [vdrDisabled]="\r\n                                                    formGroup.get(\'useGlobalOutOfStockThreshold\')?.value !==\r\n                                                        false || inventoryIsNotTracked(formGroup)\r\n                                                "\r\n                                            />\r\n                                        </clr-input-container>\r\n                                        <clr-toggle-wrapper>\r\n                                            <input\r\n                                                type="checkbox"\r\n                                                clrToggle\r\n                                                name="useGlobalOutOfStockThreshold"\r\n                                                formControlName="useGlobalOutOfStockThreshold"\r\n                                                [vdrDisabled]="\r\n                                                    !(updatePermission | hasPermission) ||\r\n                                                    inventoryIsNotTracked(formGroup)\r\n                                                "\r\n                                            />\r\n                                            <label\r\n                                                >{{ \'catalog.use-global-value\' | translate }} ({{\r\n                                                    globalOutOfStockThreshold\r\n                                                }})</label\r\n                                            >\r\n                                        </clr-toggle-wrapper>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="custom-fields">\r\n                            <div class="variant-form-input-row">\r\n                                <section formGroupName="customFields" *ngIf="customFields.length">\r\n                                    \x3c!--<label>{{ \'common.custom-fields\' | translate }}</label>--\x3e\r\n                                    <ng-container *ngFor="let customField of customFields">\r\n                                        <vdr-custom-field-control\r\n                                            *ngIf="formGroup.get([\'customFields\', customField.name])"\r\n                                            entityName="ProductVariant"\r\n                                            [compact]="true"\r\n                                            [customFieldsFormGroup]="formGroup.get(\'customFields\')"\r\n                                            [readonly]="!(updatePermission | hasPermission)"\r\n                                            [customField]="customField"\r\n                                        ></vdr-custom-field-control>\r\n                                    </ng-container>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="card-block">\r\n                <div class="options-facets">\r\n                    <vdr-entity-info [entity]="variant"></vdr-entity-info>\r\n                    <div *ngIf="variant.options.length">\r\n                        <div class="options">\r\n                            <vdr-chip\r\n                                *ngFor="let option of variant.options | sort: \'groupId\'"\r\n                                [colorFrom]="optionGroupName(option.groupId)"\r\n                                [invert]="true"\r\n                                (iconClick)="editOption(option)"\r\n                                [icon]="(updatePermission | hasPermission) && \'pencil\'"\r\n                            >\r\n                                <span class="option-group-name">{{ optionGroupName(option.groupId) }}</span>\r\n                                {{ optionName(option) }}\r\n                            </vdr-chip>\r\n                        </div>\r\n                    </div>\r\n                    <div class="flex-spacer"></div>\r\n                    <div class="facets">\r\n                        <vdr-facet-value-chip\r\n                            *ngFor="let facetValue of existingFacetValues(variant)"\r\n                            [facetValue]="facetValue"\r\n                            [removable]="updatePermission | hasPermission"\r\n                            (remove)="removeFacetValue(variant, facetValue.id)"\r\n                        ></vdr-facet-value-chip>\r\n                        <vdr-facet-value-chip\r\n                            *ngFor="let facetValue of pendingFacetValues(variant)"\r\n                            [facetValue]="facetValue"\r\n                            [removable]="updatePermission | hasPermission"\r\n                            (remove)="removeFacetValue(variant, facetValue.id)"\r\n                        ></vdr-facet-value-chip>\r\n                        <button\r\n                            *vdrIfPermissions="updatePermission"\r\n                            class="btn btn-sm btn-secondary"\r\n                            (click)="selectFacetValueClick.emit([variant.id])"\r\n                        >\r\n                            <clr-icon shape="plus"></clr-icon>\r\n                            {{ \'catalog.add-facets\' | translate }}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ng-container *vdrIfMultichannel>\r\n                <div class="card-block" *vdrIfDefaultChannelActive>\r\n                    <div class="flex channel-assignment">\r\n                        <ng-container *ngFor="let channel of variant.channels">\r\n                            <vdr-chip\r\n                                *ngIf="!isDefaultChannel(channel.code)"\r\n                                icon="times-circle"\r\n                                [title]="\'catalog.remove-from-channel\' | translate"\r\n                                (iconClick)="\r\n                                    removeFromChannel.emit({ channelId: channel.id, variant: variant })\r\n                                "\r\n                            >\r\n                                <vdr-channel-badge [channelCode]="channel.code"></vdr-channel-badge>\r\n                                {{ channel.code | channelCodeToLabel }}\r\n                            </vdr-chip>\r\n                        </ng-container>\r\n                        <button class="btn btn-sm" (click)="assignToChannel.emit(variant)">\r\n                            <clr-icon shape="layers"></clr-icon>\r\n                            {{ \'catalog.assign-to-channel\' | translate }}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n    <div class="table-footer">\r\n        <vdr-items-per-page-controls [(itemsPerPage)]="pagination.itemsPerPage"></vdr-items-per-page-controls>\r\n\r\n        <vdr-pagination-controls\r\n            [currentPage]="pagination.currentPage"\r\n            [itemsPerPage]="pagination.itemsPerPage"\r\n            (pageChange)="pagination.currentPage = $event"\r\n        ></vdr-pagination-controls>\r\n    </div>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".with-selected{display:flex;min-height:52px;align-items:center;border:1px solid var(--color-component-border-100);border-radius:3px;padding:6px 18px}.with-selected>label,.with-selected vdr-select-toggle{margin-right:12px}.variant-container{transition:background-color .2s;min-height:330px}.variant-container.disabled{background-color:var(--color-component-bg-200)}.variant-container .header-row{display:flex;align-items:center;flex-wrap:wrap}.variant-container .variant-body{display:flex;flex-direction:column}@media screen and (min-width:768px){.variant-container .variant-body{flex-direction:row}}.variant-container .details{display:flex;flex-direction:column;flex:1;margin-right:12px}@media screen and (min-width:768px){.variant-container .details{flex-direction:row;height:36px}}.variant-container .details .name{flex:1}.variant-container .details .name ::ng-deep .clr-control-container{width:100%}.variant-container .details .name ::ng-deep .clr-control-container input.clr-input{min-width:100%}.variant-container .details .sku{width:160px;margin-right:20px;flex:0}.variant-container .details ::ng-deep .name input{min-width:300px}.variant-container .right-controls{display:flex}.variant-container .tax-category-label{margin-top:3px}.variant-container .variant-form-inputs{flex:1;display:flex;flex-direction:column}@media screen and (min-width:768px){.variant-container .variant-form-inputs{flex-direction:row}}.variant-container .variant-form-input-row{display:flex;flex-wrap:wrap}@media screen and (min-width:768px){.variant-container .variant-form-input-row{margin:0 6px 8px 24px}}.variant-container .variant-form-input-row>*{margin-right:24px;margin-bottom:24px}.variant-container .track-inventory-toggle{margin-top:22px}.variant-container .clr-form-control{margin-top:0}.variant-container .facets{display:flex;align-items:center}.variant-container .pricing{display:flex}.variant-container .pricing>div{margin-right:12px}.variant-container .option-group-name{color:var(--color-text-200);text-transform:uppercase;font-size:10px;margin-right:3px;height:11px}.variant-container .options-facets{display:flex;color:var(--color-grey-400)}.channel-assignment{justify-content:flex-end}.channel-assignment .btn{margin:6px 12px 6px 0}.out-of-stock-threshold-wrapper{display:flex;flex-direction:column}.out-of-stock-threshold-wrapper clr-toggle-wrapper{margin-left:24px}.inventory-untracked{opacity:.5}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:6px}"]}]}],he.ctorParameters=function(){return[{type:t.ChangeDetectorRef},{type:r.ModalService},{type:r.DataService}]},he.propDecorators={formArray:[{type:t.Input,args:["productVariantsFormArray"]}],variants:[{type:t.Input}],channelPriceIncludesTax:[{type:t.Input}],taxCategories:[{type:t.Input}],facets:[{type:t.Input}],optionGroups:[{type:t.Input}],customFields:[{type:t.Input}],customOptionFields:[{type:t.Input}],activeLanguage:[{type:t.Input}],pendingAssetChanges:[{type:t.Input}],assignToChannel:[{type:t.Output}],removeFromChannel:[{type:t.Output}],assetChange:[{type:t.Output}],selectionChange:[{type:t.Output}],selectFacetValueClick:[{type:t.Output}],updateProductOption:[{type:t.Output}]};var ye=function(){function e(e){this.changeDetector=e,this.formGroupMap=new Map,this.updatePermission=[r.Permission.UpdateCatalog,r.Permission.UpdateProduct]}return e.prototype.ngOnInit=function(){var e=this;this.subscription=this.formArray.valueChanges.pipe(o.map((function(e){return e.length})),o.debounceTime(1),o.distinctUntilChanged()).subscribe((function(){e.buildFormGroupMap()})),this.buildFormGroupMap()},e.prototype.ngOnDestroy=function(){this.subscription&&this.subscription.unsubscribe()},e.prototype.getFeaturedAsset=function(e){var t;return(null===(t=this.pendingAssetChanges[e.id])||void 0===t?void 0:t.featuredAsset)||e.featuredAsset},e.prototype.optionGroupName=function(e){var t=this.optionGroups.find((function(t){return t.id===e}));return t&&t.name},e.prototype.buildFormGroupMap=function(){var e,t;this.formGroupMap.clear();try{for(var n=F(this.formArray.controls),r=n.next();!r.done;r=n.next()){var a=r.value;this.formGroupMap.set(a.value.id,a)}}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}this.changeDetector.markForCheck()},e}();ye.decorators=[{type:t.Component,args:[{selector:"vdr-product-variants-table",template:'<vdr-data-table [items]="variants">\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column>{{ \'common.name\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'catalog.sku\' | translate }}</vdr-dt-column>\r\n    <ng-container *ngFor="let optionGroup of optionGroups | sort: \'id\'">\r\n        <vdr-dt-column>{{ optionGroup.name }}</vdr-dt-column>\r\n    </ng-container>\r\n    <vdr-dt-column>{{ \'catalog.price\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'catalog.stock-on-hand\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'common.enabled\' | translate }}</vdr-dt-column>\r\n    <ng-template let-variant="item" let-i="index">\r\n        <ng-container *ngIf="formGroupMap.get(variant.id) as formGroup" [formGroup]="formGroup">\r\n            <td class="left align-middle" [class.disabled]="!formGroup.get(\'enabled\')!.value">\r\n                <div class="card-img">\r\n                    <div class="featured-asset">\r\n                        <img\r\n                            *ngIf="getFeaturedAsset(variant) as featuredAsset; else placeholder"\r\n                            [src]="featuredAsset | assetPreview: \'tiny\'"\r\n                        />\r\n                        <ng-template #placeholder>\r\n                            <div class="placeholder">\r\n                                <clr-icon shape="image" size="48"></clr-icon>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td class="left align-middle" [class.disabled]="!formGroup.get(\'enabled\')!.value">\r\n                <clr-input-container>\r\n                    <input\r\n                        clrInput\r\n                        type="text"\r\n                        formControlName="name"\r\n                        [readonly]="!(updatePermission | hasPermission)"\r\n                        [placeholder]="\'common.name\' | translate"\r\n                    />\r\n                </clr-input-container>\r\n            </td>\r\n            <td class="left align-middle" [class.disabled]="!formGroup.get(\'enabled\')!.value">\r\n                <clr-input-container>\r\n                    <input\r\n                        clrInput\r\n                        type="text"\r\n                        formControlName="sku"\r\n                        [readonly]="!(updatePermission | hasPermission)"\r\n                        [placeholder]="\'catalog.sku\' | translate"\r\n                    />\r\n                </clr-input-container>\r\n            </td>\r\n            <ng-container *ngFor="let option of variant.options | sort: \'groupId\'">\r\n                <td\r\n                    class="left align-middle"\r\n                    [class.disabled]="!formGroup.get(\'enabled\')!.value"\r\n                    [style.color]="optionGroupName(option.groupId) | stringToColor"\r\n                >\r\n                    {{ option.name }}\r\n                </td>\r\n            </ng-container>\r\n            <td class="left align-middle price" [class.disabled]="!formGroup.get(\'enabled\')!.value">\r\n                <clr-input-container>\r\n                    <vdr-currency-input\r\n                        *ngIf="!channelPriceIncludesTax"\r\n                        clrInput\r\n                        [currencyCode]="variant.currencyCode"\r\n                        [readonly]="!(updatePermission | hasPermission)"\r\n                        formControlName="price"\r\n                    ></vdr-currency-input>\r\n                    <vdr-currency-input\r\n                        *ngIf="channelPriceIncludesTax"\r\n                        clrInput\r\n                        [currencyCode]="variant.currencyCode"\r\n                        [readonly]="!(updatePermission | hasPermission)"\r\n                        formControlName="priceWithTax"\r\n                    ></vdr-currency-input>\r\n                </clr-input-container>\r\n            </td>\r\n            <td class="left align-middle stock" [class.disabled]="!formGroup.get(\'enabled\')!.value">\r\n                <clr-input-container>\r\n                    <input\r\n                        clrInput\r\n                        type="number"\r\n                        min="0"\r\n                        step="1"\r\n                        formControlName="stockOnHand"\r\n                        [readonly]="!(updatePermission | hasPermission)"\r\n                    />\r\n                </clr-input-container>\r\n            </td>\r\n            <td class="left align-middle stock" [class.disabled]="!formGroup.get(\'enabled\')!.value">\r\n                <clr-toggle-wrapper>\r\n                    <input\r\n                        type="checkbox"\r\n                        clrToggle\r\n                        name="enabled"\r\n                        formControlName="enabled"\r\n                        [vdrDisabled]="!(updatePermission | hasPermission)"\r\n                    />\r\n                </clr-toggle-wrapper>\r\n            </td>\r\n        </ng-container>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".placeholder{color:var(--color-grey-300)}.price input,.stock input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}"]}]}],ye.ctorParameters=function(){return[{type:t.ChangeDetectorRef}]},ye.propDecorators={formArray:[{type:t.Input,args:["productVariantsFormArray"]}],variants:[{type:t.Input}],channelPriceIncludesTax:[{type:t.Input}],optionGroups:[{type:t.Input}],pendingAssetChanges:[{type:t.Input}]};var be=function(){function e(e){this.dataService=e,this.priceChange$=new s.BehaviorSubject(0),this.taxCategoryIdChange$=new s.BehaviorSubject("")}return e.prototype.ngOnInit=function(){var e=this.dataService.settings.getTaxRates(999,0,"cache-first").mapStream((function(e){return e.taxRates.items})),t=this.dataService.settings.getActiveChannel("cache-first").refetchOnChannelChange().mapStream((function(e){return e.activeChannel}));this.taxRate$=s.combineLatest(t,e,this.taxCategoryIdChange$).pipe(o.map((function(e){var t=I(e,3),n=t[0],r=t[1],a=t[2],o=n.defaultTaxZone;if(!o)return 0;var i=r.find((function(e){return e.zone.id===o.id&&e.category.id===a}));return i?i.value:0}))),this.grossPrice$=s.combineLatest(this.taxRate$,this.priceChange$).pipe(o.map((function(e){var t=I(e,2),n=t[0],r=t[1];return Math.round(r*((100+n)/100))})))},e.prototype.ngOnChanges=function(e){"price"in e&&this.priceChange$.next(e.price.currentValue),"taxCategoryId"in e&&this.taxCategoryIdChange$.next(e.taxCategoryId.currentValue)},e}();be.decorators=[{type:t.Component,args:[{selector:"vdr-variant-price-detail",template:'<label class="clr-control-label">{{ \'catalog.taxes\' | translate }}</label>\r\n<div *ngIf="priceIncludesTax" class="value">\r\n    {{ \'catalog.price-includes-tax-at\' | translate: { rate: taxRate$ | async } }}\r\n</div>\r\n<div *ngIf="!priceIncludesTax" class="value">\r\n    {{\r\n        \'catalog.price-with-tax-in-default-zone\'\r\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\r\n    }}\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[":host{display:flex;flex-direction:column}.value{margin-top:3px}"]}]}],be.ctorParameters=function(){return[{type:r.DataService}]},be.propDecorators={priceIncludesTax:[{type:t.Input}],price:[{type:t.Input}],currencyCode:[{type:t.Input}],taxCategoryId:[{type:t.Input}]};var Ce=function(){};Ce.decorators=[{type:t.NgModule,args:[{imports:[r.SharedModule,n.RouterModule.forChild(X)],exports:[],declarations:[M,L,D,V,de,he,A,x,me,be,w,S,se,ce,oe,ye,ve,pe,fe,E,$,P,G]}]}],e.ApplyFacetDialogComponent=A,e.AssetDetailComponent=P,e.AssetListComponent=x,e.AssetResolver=U,e.AssignProductsToChannelDialogComponent=$,e.CatalogModule=Ce,e.CollectionContentsComponent=oe,e.CollectionDetailComponent=S,e.CollectionListComponent=w,e.CollectionResolver=j,e.CollectionTreeComponent=se,e.CollectionTreeNodeComponent=ce,e.ConfirmVariantDeletionDialogComponent=G,e.FacetDetailComponent=V,e.FacetListComponent=D,e.FacetResolver=R,e.GenerateProductVariantsComponent=de,e.GeneratedVariant=N,e.OPTION_VALUE_INPUT_VALUE_ACCESSOR=ue,e.OptionValueInputComponent=pe,e.ProductAssetsComponent=me,e.ProductDetailComponent=L,e.ProductDetailService=T,e.ProductListComponent=M,e.ProductResolver=B,e.ProductSearchInputComponent=ve,e.ProductVariantsEditorComponent=E,e.ProductVariantsListComponent=he,e.ProductVariantsResolver=q,e.ProductVariantsTableComponent=ye,e.UpdateProductOptionDialogComponent=fe,e.VariantPriceDetailComponent=be,e.arrayToTree=ie,e.assetBreadcrumb=ae,e.catalogRoutes=X,e.collectionBreadcrumb=re,e.facetBreadcrumb=ne,e.productBreadcrumb=ee,e.productVariantEditorBreadcrumb=te,e.replaceLast=O,e.ɵ0=_,e.ɵ1=z,e.ɵ2=W,e.ɵ3=H,e.ɵ4=J,e.ɵ5=Y,e.ɵ6=Q,e.ɵ7=K,e.ɵ8=Z,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=vendure-admin-ui-catalog.umd.min.js.map