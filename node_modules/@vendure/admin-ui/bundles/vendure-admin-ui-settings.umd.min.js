!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@vendure/admin-ui/core"),require("rxjs/operators"),require("@angular/forms"),require("@angular/router"),require("@biesbjerg/ngx-translate-extract-marker"),require("@vendure/common/lib/shared-constants"),require("rxjs"),require("@vendure/common/lib/normalize-string"),require("@vendure/common/lib/unique")):"function"==typeof define&&define.amd?define("@vendure/admin-ui/settings",["exports","@angular/core","@vendure/admin-ui/core","rxjs/operators","@angular/forms","@angular/router","@biesbjerg/ngx-translate-extract-marker","@vendure/common/lib/shared-constants","rxjs","@vendure/common/lib/normalize-string","@vendure/common/lib/unique"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).vendure=e.vendure||{},e.vendure["admin-ui"]=e.vendure["admin-ui"]||{},e.vendure["admin-ui"].settings={}),e.ng.core,e.vendure["admin-ui"].core,e.rxjs.operators,e.ng.forms,e.ng.router,e.ngxTranslateExtractMarker,e.sharedConstants,e.rxjs,e.normalizeString,e.unique)}(this,(function(e,t,r,n,a,o,i,s,l,c,d){"use strict";var m=function(){function e(e){this.dataService=e,this.currentMembers=[],this.selectedMemberIds=[]}return e.prototype.ngOnInit=function(){var e=this.currentMembers.map((function(e){return e.id}));this.availableCountries$=this.dataService.settings.getCountries(999).mapStream((function(e){return e.countries.items})).pipe(n.map((function(t){return t.filter((function(t){return!e.includes(t.id)}))})))},e.prototype.cancel=function(){this.resolveWith()},e.prototype.add=function(){this.resolveWith(this.selectedMemberIds)},e}();m.decorators=[{type:t.Component,args:[{selector:"vdr-add-country-to-zone-dialog",template:'<ng-template vdrDialogTitle>{{ \'settings.add-countries-to-zone\' | translate: { zoneName: zoneName } }}</ng-template>\r\n\r\n<vdr-zone-member-list\r\n    [members]="availableCountries$ | async"\r\n    [selectedMemberIds]="selectedMemberIds"\r\n    (selectionChange)="selectedMemberIds = $event"\r\n>\r\n</vdr-zone-member-list>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type="button" class="btn" (click)="cancel()">{{ \'common.cancel\' | translate }}</button>\r\n    <button type="submit" (click)="add()" [disabled]="!selectedMemberIds.length" class="btn btn-primary">\r\n        {{ \'settings.add-countries-to-zone\' | translate: { zoneName: zoneName } }}\r\n    </button>\r\n</ng-template>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],m.ctorParameters=function(){return[{type:r.DataService}]};
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
var u=function(e,t){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)};function p(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}u(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}Object.create;function v(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function g(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,a,o=r.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)i.push(n.value)}catch(e){a={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(a)throw a.error}}return i}function f(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(g(arguments[t]));return e}Object.create;var h=function(e){function t(t,r,n,o,i,s,l){var c=e.call(this,r,t,n,i)||this;return c.changeDetector=o,c.dataService=i,c.formBuilder=s,c.notificationService=l,c.selectedRoles=[],c.selectedRolePermissions={},c.selectedChannelId=null,c.customFields=c.getCustomFieldConfig("Administrator"),c.detailForm=c.formBuilder.group({emailAddress:["",a.Validators.required],firstName:["",a.Validators.required],lastName:["",a.Validators.required],password:[""],roles:[[]],customFields:c.formBuilder.group(c.customFields.reduce((function(e,t){var r;return Object.assign(Object.assign({},e),((r={})[t.name]="",r))}),{}))}),c}return p(t,e),t.prototype.getAvailableChannels=function(){return Object.values(this.selectedRolePermissions)},t.prototype.ngOnInit=function(){var e=this;this.init(),this.administrator$=this.entity$,this.allRoles$=this.dataService.administrator.getRoles(999).mapStream((function(e){return e.roles.items.filter((function(e){return e.code!==s.CUSTOMER_ROLE_CODE}))})),this.dataService.client.userStatus().single$.subscribe((function(t){if(!t.userStatus.permissions.includes(r.Permission.UpdateAdministrator)){var n=e.detailForm.get("roles");n&&n.disable()}})),this.permissionDefinitions=this.serverConfigService.getPermissionDefinitions()},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.customFieldIsSet=function(e){return!!this.detailForm.get(["customFields",e])},t.prototype.rolesChanged=function(e){this.buildPermissionsMap()},t.prototype.getPermissionsForSelectedChannel=function(){function e(e){return Object.entries(e).filter((function(e){var t=g(e,2);t[0];return t[1]})).map((function(e){var t=g(e,2),r=t[0];t[1];return r}))}if(this.selectedChannelId&&this.selectedRolePermissions[this.selectedChannelId])return e(this.selectedRolePermissions[this.selectedChannelId].permissions);var t=Object.values(this.selectedRolePermissions);return 0<t.length?(this.selectedChannelId=t[0].channelId,e(t[0].permissions)):[]},t.prototype.create=function(){var e=this,t=this.detailForm.value,r={emailAddress:t.emailAddress,firstName:t.firstName,lastName:t.lastName,password:t.password,customFields:t.customFields,roleIds:t.roles.map((function(e){return e.id}))};this.dataService.administrator.createAdministrator(r).subscribe((function(t){e.notificationService.success(i.marker("common.notify-create-success"),{entity:"Administrator"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.createAdministrator.id],{relativeTo:e.route})}),(function(t){e.notificationService.error(i.marker("common.notify-create-error"),{entity:"Administrator"})}))},t.prototype.save=function(){var e=this;this.administrator$.pipe(n.take(1),n.mergeMap((function(t){var r=t.id,n=e.detailForm.value,a={id:r,emailAddress:n.emailAddress,firstName:n.firstName,lastName:n.lastName,password:n.password,customFields:n.customFields,roleIds:n.roles.map((function(e){return e.id}))};return e.dataService.administrator.updateAdministrator(a)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-update-success"),{entity:"Administrator"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck()}),(function(t){e.notificationService.error(i.marker("common.notify-update-error"),{entity:"Administrator"})}))},t.prototype.setFormValues=function(e,t){var r,n;if(this.detailForm.patchValue({emailAddress:e.emailAddress,firstName:e.firstName,lastName:e.lastName,roles:e.user.roles}),this.customFields.length){var o=this.detailForm.get("customFields");try{for(var i=v(this.customFields),s=i.next();!s.done;s=i.next()){var l=s.value.name,c=e.customFields[l],d=o.get(l);d&&d.patchValue(c)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(r)throw r.error}}}var m=this.detailForm.get("password");m&&(e.id?m.setValidators([]):m.setValidators([a.Validators.required])),this.buildPermissionsMap()},t.prototype.buildPermissionsMap=function(){var e,t,r,n,a,o,i,s,l=this.detailForm.get("roles");if(l){var c=l.value,d=new Map,m=new Map;try{for(var u=v(c),p=u.next();!p.done;p=u.next()){var g=p.value,f=function(e){var t=d.get(e.id)||new Set;g.permissions.forEach((function(e){return t.add(e)})),d.set(e.id,t),m.set(e.id,e.code)};try{for(var h=(r=void 0,v(g.channels)),b=h.next();!b.done;b=h.next()){f(b.value)}}catch(e){r={error:e}}finally{try{b&&!b.done&&(n=h.return)&&n.call(h)}finally{if(r)throw r.error}}}}catch(t){e={error:t}}finally{try{p&&!p.done&&(t=u.return)&&t.call(u)}finally{if(e)throw e.error}}this.selectedRolePermissions={};try{for(var y=v(Array.from(d.keys())),C=y.next();!C.done;C=y.next()){var S=C.value,k=d.get(S),D={};try{for(var P=(i=void 0,v(this.serverConfigService.getPermissionDefinitions())),F=P.next();!F.done;F=P.next()){var I=F.value;D[I.name]=k.has(I.name)}}catch(e){i={error:e}}finally{try{F&&!F.done&&(s=P.return)&&s.call(P)}finally{if(i)throw i.error}}this.selectedRolePermissions[S]={channelId:S,channelCode:m.get(S),permissions:D}}}catch(e){a={error:e}}finally{try{C&&!C.done&&(o=y.return)&&o.call(y)}finally{if(a)throw a.error}}}},t}(r.BaseDetailComponent);h.decorators=[{type:t.Component,args:[{selector:"vdr-admin-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="administrator-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="detailForm.invalid || detailForm.pristine"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                *vdrIfPermissions="\'UpdateAdministrator\'"\r\n                [disabled]="detailForm.invalid || detailForm.pristine"\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm">\r\n    <vdr-form-field [label]="\'settings.email-address\' | translate" for="emailAddress">\r\n        <input\r\n            id="emailAddress"\r\n            type="text"\r\n            formControlName="emailAddress"\r\n            [readonly]="!(\'UpdateAdministrator\' | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.first-name\' | translate" for="firstName">\r\n        <input\r\n            id="firstName"\r\n            type="text"\r\n            formControlName="firstName"\r\n            [readonly]="!(\'UpdateAdministrator\' | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.last-name\' | translate" for="lastName">\r\n        <input\r\n            id="lastName"\r\n            type="text"\r\n            formControlName="lastName"\r\n            [readonly]="!(\'UpdateAdministrator\' | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field *ngIf="isNew$ | async" [label]="\'settings.password\' | translate" for="password">\r\n        <input id="password" type="password" formControlName="password" />\r\n    </vdr-form-field>\r\n    <vdr-form-field\r\n        *ngIf="!(isNew$ | async) && (\'UpdateAdministrator\' | hasPermission)"\r\n        [label]="\'settings.password\' | translate"\r\n        for="password"\r\n        [readOnlyToggle]="true"\r\n    >\r\n        <input id="password" type="password" formControlName="password" />\r\n    </vdr-form-field>\r\n    <section formGroupName="customFields" *ngIf="customFields.length">\r\n        <label>{{ \'common.custom-fields\' | translate }}</label>\r\n        <ng-container *ngFor="let customField of customFields">\r\n            <vdr-custom-field-control\r\n                *ngIf="customFieldIsSet(customField.name)"\r\n                entityName="Administrator"\r\n                [customFieldsFormGroup]="detailForm.get(\'customFields\')"\r\n                [customField]="customField"\r\n            ></vdr-custom-field-control>\r\n        </ng-container>\r\n    </section>\r\n    <label class="clr-control-label">{{ \'settings.roles\' | translate }}</label>\r\n    <ng-select\r\n        [items]="allRoles$ | async"\r\n        [multiple]="true"\r\n        [hideSelected]="true"\r\n        formControlName="roles"\r\n        (change)="rolesChanged($event)"\r\n        bindLabel="description"\r\n    ></ng-select>\r\n\r\n    <ul class="nav" role="tablist">\r\n        <li role="presentation" class="nav-item" *ngFor="let channel of getAvailableChannels()">\r\n            <button\r\n                [id]="channel.channelId"\r\n                (click)="selectedChannelId = channel.channelId"\r\n                class="btn btn-link nav-link"\r\n                [class.active]="selectedChannelId === channel.channelId"\r\n                [attr.aria-selected]="selectedChannelId === channel.channelId"\r\n                type="button"\r\n            >\r\n                {{ channel.channelCode | channelCodeToLabel | translate }}\r\n            </button>\r\n        </li>\r\n    </ul>\r\n    <vdr-permission-grid\r\n        [activePermissions]="getPermissionsForSelectedChannel()"\r\n        [permissionDefinitions]="permissionDefinitions"\r\n        [readonly]="true"\r\n    ></vdr-permission-grid>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],h.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var b=function(e){function t(t,r,n,a,o){var i=e.call(this,r,n)||this;return i.dataService=t,i.modalService=a,i.notificationService=o,e.prototype.setQueryFn.call(i,(function(){for(var e,t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return(e=i.dataService.administrator).getAdministrators.apply(e,f(t))}),(function(e){return e.administrators})),i}return p(t,e),t.prototype.deleteAdministrator=function(e){var t=this;return this.modalService.dialog({title:i.marker("catalog.confirm-delete-administrator"),body:e.firstName+" "+e.lastName,buttons:[{type:"secondary",label:i.marker("common.cancel")},{type:"danger",label:i.marker("common.delete"),returnValue:!0}]}).pipe(n.switchMap((function(r){return r?t.dataService.administrator.deleteAdministrator(e.id):l.EMPTY}))).subscribe((function(){t.notificationService.success(i.marker("common.notify-delete-success"),{entity:"Administrator"}),t.refresh()}),(function(e){t.notificationService.error(i.marker("common.notify-delete-error"),{entity:"Administrator"})}))},t}(r.BaseListComponent);b.decorators=[{type:t.Component,args:[{selector:"vdr-administrator-list",template:'<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="administrator-list"></vdr-action-bar-items>\r\n        <a class="btn btn-primary" [routerLink]="[\'./create\']" *vdrIfPermissions="\'CreateAdministrator\'">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'admin.create-new-administrator\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]="items$ | async"\r\n    [itemsPerPage]="itemsPerPage$ | async"\r\n    [totalItems]="totalItems$ | async"\r\n    [currentPage]="currentPage$ | async"\r\n    (pageChange)="setPageNumber($event)"\r\n    (itemsPerPageChange)="setItemsPerPage($event)"\r\n>\r\n    <vdr-dt-column>{{ \'settings.first-name\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'settings.last-name\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'settings.email-address\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-administrator="item">\r\n        <td class="left align-middle">{{ administrator.firstName }}</td>\r\n        <td class="left align-middle">{{ administrator.lastName }}</td>\r\n        <td class="left align-middle">{{ administrator.emailAddress }}</td>\r\n        <td class="right align-middle">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', administrator.id]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td>\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deleteAdministrator(administrator)"\r\n                        [disabled]="!(\'DeleteAdministrator\' | hasPermission)"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',styles:[""]}]}],b.ctorParameters=function(){return[{type:r.DataService},{type:o.Router},{type:o.ActivatedRoute},{type:r.ModalService},{type:r.NotificationService}]};var y=function(e){function t(t,n,o,i,s,l,c){var d=e.call(this,n,t,o,s)||this;return d.serverConfigService=o,d.changeDetector=i,d.dataService=s,d.formBuilder=l,d.notificationService=c,d.currencyCodes=Object.values(r.CurrencyCode),d.updatePermission=[r.Permission.SuperAdmin,r.Permission.UpdateChannel,r.Permission.CreateChannel],d.customFields=d.getCustomFieldConfig("Channel"),d.detailForm=d.formBuilder.group({code:["",a.Validators.required],token:["",a.Validators.required],pricesIncludeTax:[!1],currencyCode:[""],defaultShippingZoneId:["",a.Validators.required],defaultLanguageCode:[],defaultTaxZoneId:["",a.Validators.required],customFields:d.formBuilder.group(d.customFields.reduce((function(e,t){var r;return Object.assign(Object.assign({},e),((r={})[t.name]="",r))}),{}))}),d}return p(t,e),t.prototype.ngOnInit=function(){this.init(),this.zones$=this.dataService.settings.getZones().mapSingle((function(e){return e.zones})),this.availableLanguageCodes$=this.serverConfigService.getAvailableLanguages()},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.customFieldIsSet=function(e){return!!this.detailForm.get(["customFields",e])},t.prototype.saveButtonEnabled=function(){return this.detailForm.dirty&&this.detailForm.valid},t.prototype.create=function(){var e=this;if(this.detailForm.dirty){var t=this.detailForm.value,r={code:t.code,token:t.token,defaultLanguageCode:t.defaultLanguageCode,pricesIncludeTax:t.pricesIncludeTax,currencyCode:t.currencyCode,defaultShippingZoneId:t.defaultShippingZoneId,defaultTaxZoneId:t.defaultTaxZoneId,customFields:t.customFields};this.dataService.settings.createChannel(r).pipe(n.mergeMap((function(t){var r=t.createChannel;return e.dataService.auth.currentUser().single$.pipe(n.map((function(e){return{me:e.me,createChannel:r}})))})),n.mergeMap((function(t){var r=t.me,a=t.createChannel;return e.dataService.client.updateUserChannels(r.channels).pipe(n.map((function(){return a})))}))).subscribe((function(t){switch(t.__typename){case"Channel":e.notificationService.success(i.marker("common.notify-create-success"),{entity:"Channel"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.id],{relativeTo:e.route});break;case"LanguageNotAvailableError":e.notificationService.error(t.message)}}))}},t.prototype.save=function(){var e=this;if(this.detailForm.dirty){var t=this.detailForm.value;this.entity$.pipe(n.take(1),n.mergeMap((function(r){var n={id:r.id,code:t.code,token:t.token,pricesIncludeTax:t.pricesIncludeTax,currencyCode:t.currencyCode,defaultShippingZoneId:t.defaultShippingZoneId,defaultLanguageCode:t.defaultLanguageCode,defaultTaxZoneId:t.defaultTaxZoneId,customFields:t.customFields};return e.dataService.settings.updateChannel(n)}))).subscribe((function(t){var r=t.updateChannel;switch(r.__typename){case"Channel":e.notificationService.success(i.marker("common.notify-update-success"),{entity:"Channel"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck();break;case"LanguageNotAvailableError":e.notificationService.error(r.message)}}))}},t.prototype.setFormValues=function(e,t){var r,n;if(this.detailForm.patchValue({code:e.code,token:e.token||this.generateToken(),pricesIncludeTax:e.pricesIncludeTax,currencyCode:e.currencyCode,defaultShippingZoneId:e.defaultShippingZone?e.defaultShippingZone.id:"",defaultLanguageCode:e.defaultLanguageCode,defaultTaxZoneId:e.defaultTaxZone?e.defaultTaxZone.id:""}),this.customFields.length){var a=this.detailForm.get("customFields");try{for(var o=v(this.customFields),i=o.next();!i.done;i=o.next()){var l=i.value.name,c=e.customFields[l],d=a.get(l);d&&d.patchValue(c)}}catch(e){r={error:e}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}}if(e.code===s.DEFAULT_CHANNEL_CODE){var m=this.detailForm.get("code");m&&m.disable()}},t.prototype.generateToken=function(){var e=function(){return Math.random().toString(36).substr(3,10)};return""+e()+e()},t}(r.BaseDetailComponent);y.decorators=[{type:t.Component,args:[{selector:"vdr-channel-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="channel-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="!saveButtonEnabled()"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                *vdrIfPermissions="[\'SuperAdmin\', \'UpdateChannel\']"\r\n                [disabled]="!saveButtonEnabled()"\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm">\r\n    <vdr-form-field [label]="\'common.code\' | translate" for="code">\r\n        <input id="code" type="text" [readonly]="!(updatePermission | hasPermission)" formControlName="code" />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.channel-token\' | translate" for="token">\r\n        <input id="token" type="text" [readonly]="!(updatePermission | hasPermission)" formControlName="token" />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.currency\' | translate" for="defaultTaxZoneId">\r\n        <select\r\n            clrSelect\r\n            name="currencyCode"\r\n            formControlName="currencyCode"\r\n            [vdrDisabled]="!(updatePermission | hasPermission)"\r\n        >\r\n            <option *ngFor="let code of currencyCodes" [value]="code">{{ code | localeCurrencyName }}</option>\r\n        </select>\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'common.default-language\' | translate" for="defaultLanguage">\r\n        <select\r\n            clrSelect\r\n            name="defaultLanguageCode"\r\n            formControlName="defaultLanguageCode"\r\n            [vdrDisabled]="!(updatePermission | hasPermission)"\r\n        >\r\n            <option *ngFor="let languageCode of availableLanguageCodes$ | async" [value]="languageCode">\r\n                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\r\n            </option>\r\n        </select>\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.prices-include-tax\' | translate" for="pricesIncludeTax">\r\n        <clr-toggle-wrapper>\r\n            <input\r\n                type="checkbox"\r\n                clrToggle\r\n                id="pricesIncludeTax"\r\n                formControlName="pricesIncludeTax"\r\n                [vdrDisabled]="!(updatePermission | hasPermission)"\r\n            />\r\n        </clr-toggle-wrapper>\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.default-tax-zone\' | translate" for="defaultTaxZoneId">\r\n        <select\r\n            clrSelect\r\n            name="defaultTaxZoneId"\r\n            formControlName="defaultTaxZoneId"\r\n            [vdrDisabled]="!(updatePermission | hasPermission)"\r\n        >\r\n            <option selected value style="display: none"></option>\r\n            <option *ngFor="let zone of zones$ | async" [value]="zone.id">{{ zone.name }}</option>\r\n        </select>\r\n    </vdr-form-field>\r\n    <clr-alert\r\n        *ngIf="detailForm.value.code && !detailForm.value.defaultTaxZoneId"\r\n        clrAlertType="danger"\r\n        [clrAlertClosable]="false"\r\n    >\r\n        <clr-alert-item>\r\n            <span class="alert-text">\r\n                {{ \'error.no-default-tax-zone-set\' | translate }}\r\n            </span>\r\n        </clr-alert-item>\r\n    </clr-alert>\r\n\r\n    <vdr-form-field [label]="\'settings.default-shipping-zone\' | translate" for="defaultShippingZoneId">\r\n        <select\r\n            clrSelect\r\n            name="defaultShippingZoneId"\r\n            formControlName="defaultShippingZoneId"\r\n            [vdrDisabled]="!(updatePermission | hasPermission)"\r\n        >\r\n            <option selected value style="display: none"></option>            \r\n            <option *ngFor="let zone of zones$ | async" [value]="zone.id">{{ zone.name }}</option>\r\n        </select>\r\n    </vdr-form-field>\r\n    <clr-alert\r\n        *ngIf="detailForm.value.code && !detailForm.value.defaultShippingZoneId"\r\n        clrAlertType="warning"\r\n        [clrAlertClosable]="false"\r\n    >\r\n        <clr-alert-item>\r\n            <span class="alert-text">\r\n                {{ \'error.no-default-shipping-zone-set\' | translate }}\r\n            </span>\r\n        </clr-alert-item>\r\n    </clr-alert>\r\n\r\n    <section formGroupName="customFields" *ngIf="customFields.length">\r\n        <label>{{ \'common.custom-fields\' | translate }}</label>\r\n        <ng-container *ngFor="let customField of customFields">\r\n            <vdr-custom-field-control\r\n                *ngIf="customFieldIsSet(customField.name)"\r\n                entityName="Channel"\r\n                [customFieldsFormGroup]="detailForm.get(\'customFields\')"\r\n                [customField]="customField"\r\n            ></vdr-custom-field-control>\r\n        </ng-container>\r\n    </section>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:["clr-alert{max-width:30rem;margin-bottom:12px}"]}]}],y.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var C=function(){function e(e,t,r){var a=this;this.dataService=e,this.modalService=t,this.notificationService=r,this.refresh$=new l.Subject,this.channels$=this.refresh$.pipe(n.startWith(1),n.switchMap((function(){return a.dataService.settings.getChannels().mapStream((function(e){return e.channels}))})))}return e.prototype.isDefaultChannel=function(e){return e===s.DEFAULT_CHANNEL_CODE},e.prototype.deleteChannel=function(e){var t=this;this.modalService.dialog({title:i.marker("catalog.confirm-delete-channel"),buttons:[{type:"secondary",label:i.marker("common.cancel")},{type:"danger",label:i.marker("common.delete"),returnValue:!0}]}).pipe(n.switchMap((function(r){return r?t.dataService.settings.deleteChannel(e):l.EMPTY})),n.mergeMap((function(){return t.dataService.auth.currentUser().single$})),n.mergeMap((function(e){return t.dataService.client.updateUserChannels(e.me.channels)}))).subscribe((function(){t.notificationService.success(i.marker("common.notify-delete-success"),{entity:"Channel"}),t.refresh$.next(1)}),(function(e){t.notificationService.error(i.marker("common.notify-delete-error"),{entity:"Channel"})}))},e}();C.decorators=[{type:t.Component,args:[{selector:"vdr-channel-list",template:'<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="channel-list"></vdr-action-bar-items>\r\n        <a class="btn btn-primary" [routerLink]="[\'./create\']" *vdrIfPermissions="\'SuperAdmin\'">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'settings.create-new-channel\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table [items]="channels$ | async">\r\n    <vdr-dt-column>{{ \'common.code\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-channel="item">\r\n        <td class="left align-middle">\r\n            <vdr-channel-badge [channelCode]="channel.code"></vdr-channel-badge>\r\n            {{ channel.code | channelCodeToLabel | translate }}\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', channel.id]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger [disabled]="isDefaultChannel(channel.code)">\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deleteChannel(channel.id)"\r\n                        [disabled]="!([\'SuperAdmin\', \'DeleteChannel\'] | hasPermission)"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],C.ctorParameters=function(){return[{type:r.DataService},{type:r.ModalService},{type:r.NotificationService}]};var S=function(e){function t(t,n,o,i,s,l,c){var d=e.call(this,n,t,o,s)||this;return d.changeDetector=i,d.dataService=s,d.formBuilder=l,d.notificationService=c,d.updatePermission=[r.Permission.UpdateSettings,r.Permission.UpdateCountry],d.detailForm=d.formBuilder.group({code:["",a.Validators.required],name:["",a.Validators.required],enabled:[!0]}),d}return p(t,e),t.prototype.ngOnInit=function(){this.init(),this.country$=this.entity$},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.create=function(){var e=this;this.detailForm.dirty&&l.combineLatest(this.country$,this.languageCode$).pipe(n.take(1),n.mergeMap((function(t){var n=g(t,2),a=n[0],o=n[1],i=e.detailForm.value,s=r.createUpdatedTranslatable({translatable:a,updatedFields:i,languageCode:o,defaultTranslation:{name:i.name,languageCode:o}});return e.dataService.settings.createCountry(s)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-create-success"),{entity:"Country"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.createCountry.id],{relativeTo:e.route})}),(function(t){e.notificationService.error(i.marker("common.notify-create-error"),{entity:"Country"})}))},t.prototype.save=function(){var e=this;l.combineLatest(this.country$,this.languageCode$).pipe(n.take(1),n.mergeMap((function(t){var n=g(t,2),a=n[0],o=n[1],i=e.detailForm.value,s=r.createUpdatedTranslatable({translatable:a,updatedFields:i,languageCode:o,defaultTranslation:{name:i.name,languageCode:o}});return e.dataService.settings.updateCountry(s)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-update-success"),{entity:"Country"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck()}),(function(t){e.notificationService.error(i.marker("common.notify-update-error"),{entity:"Country"})}))},t.prototype.setFormValues=function(e,t){var n=r.findTranslation(e,t);this.detailForm.patchValue({code:e.code,name:n?n.name:"",enabled:e.enabled})},t}(r.BaseDetailComponent);S.decorators=[{type:t.Component,args:[{selector:"vdr-country-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n        <vdr-language-selector\r\n            [disabled]="isNew$ | async"\r\n            [availableLanguageCodes]="availableLanguages$ | async"\r\n            [currentLanguageCode]="languageCode$ | async"\r\n            (languageCodeChange)="setLanguage($event)"\r\n        ></vdr-language-selector>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="country-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="detailForm.invalid || detailForm.pristine"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class="btn btn-primary"\r\n                *vdrIfPermissions="updatePermission"\r\n                (click)="save()"\r\n                [disabled]="detailForm.invalid || detailForm.pristine"\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm">\r\n    <vdr-form-field [label]="\'common.code\' | translate" for="code">\r\n        <input\r\n            id="code"\r\n            type="text"\r\n            formControlName="code"\r\n            [readonly]="!(updatePermission | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'common.name\' | translate" for="name">\r\n        <input\r\n            id="name"\r\n            type="text"\r\n            formControlName="name"\r\n            [readonly]="!(updatePermission | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'common.enabled\' | translate" for="enabled">\r\n        <clr-toggle-wrapper>\r\n            <input\r\n                type="checkbox"\r\n                clrToggle\r\n                id="enabled"\r\n                formControlName="enabled"\r\n                [vdrDisabled]="!(updatePermission | hasPermission)"\r\n            />\r\n        </clr-toggle-wrapper>\r\n    </vdr-form-field>\r\n</form>\r\n',styles:[""]}]}],S.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var k=function(){function e(e,t,r){this.dataService=e,this.notificationService=t,this.modalService=r,this.searchTerm=new a.FormControl(""),this.countries=[],this.destroy$=new l.Subject}return e.prototype.ngOnInit=function(){var e=this,t=this.searchTerm.valueChanges.pipe(n.startWith(null),n.switchMap((function(t){return e.dataService.settings.getCountries(999,0,t).stream$})),n.tap((function(t){return e.countries=t.countries.items})),n.map((function(e){return e.countries.items})));this.zones$=this.dataService.settings.getZones().mapStream((function(e){return e.zones})),this.countriesWithZones$=l.combineLatest(t,this.zones$).pipe(n.map((function(e){var t=g(e,2),r=t[0],n=t[1];return r.map((function(e){return Object.assign(Object.assign({},e),{zones:n.filter((function(t){return!!t.members.find((function(t){return t.id===e.id}))}))})}))})))},e.prototype.ngOnDestroy=function(){this.destroy$.next(),this.destroy$.complete()},e.prototype.deleteCountry=function(e){var t=this;this.modalService.dialog({title:i.marker("catalog.confirm-delete-country"),buttons:[{type:"secondary",label:i.marker("common.cancel")},{type:"danger",label:i.marker("common.delete"),returnValue:!0}]}).pipe(n.switchMap((function(r){return r?t.dataService.settings.deleteCountry(e):l.EMPTY}))).subscribe((function(e){e.deleteCountry.result===r.DeletionResult.DELETED?(t.notificationService.success(i.marker("common.notify-delete-success"),{entity:"Country"}),t.dataService.settings.getCountries(999,0).single$.subscribe()):t.notificationService.error(e.deleteCountry.message||"")}),(function(e){t.notificationService.error(i.marker("common.notify-delete-error"),{entity:"Country"})}))},e.prototype.isZone=function(e){return e.hasOwnProperty("id")},e}();k.decorators=[{type:t.Component,args:[{selector:"vdr-country-list",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <input\r\n            type="text"\r\n            name="searchTerm"\r\n            [formControl]="searchTerm"\r\n            [placeholder]="\'settings.search-country-by-name\' | translate"\r\n            class="search-input"\r\n        />\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="country-list"></vdr-action-bar-items>\r\n        <a class="btn btn-primary" [routerLink]="[\'./create\']" *vdrIfPermissions="[\'CreateSettings\', \'CreateCountry\']">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'settings.create-new-country\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]="countriesWithZones$ | async"\r\n>\r\n    <vdr-dt-column>{{ \'common.code\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column [expand]="true">{{ \'common.name\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'settings.zone\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'common.enabled\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-country="item">\r\n        <td class="left align-middle">{{ country.code }}</td>\r\n        <td class="left align-middle">{{ country.name }}</td>\r\n        <td class="left align-middle">\r\n            <a [routerLink]="[\'/settings\', \'zones\', { contents: zone.id }]" *ngFor="let zone of country.zones">\r\n            <vdr-chip [colorFrom]="zone.name">{{ zone.name }}</vdr-chip>\r\n            </a>\r\n        </td>\r\n        <td class="left align-middle">\r\n            <clr-icon\r\n                [class.is-success]="country.enabled"\r\n                [attr.shape]="country.enabled ? \'check\' : \'times\'"\r\n            ></clr-icon>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', country.id]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deleteCountry(country.id)"\r\n                        vdrDropdownItem\r\n                        [disabled]="!([\'DeleteSettings\', \'DeleteCountry\'] | hasPermission)"\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".search-input{margin-top:6px;min-width:300px}"]}]}],k.ctorParameters=function(){return[{type:r.DataService},{type:r.NotificationService},{type:r.ModalService}]};var D=function(e){function t(t,n,o,i,s,l,c){var d=e.call(this,n,t,o,s)||this;return d.changeDetector=i,d.dataService=s,d.formBuilder=l,d.notificationService=c,d.languageCodes=Object.values(r.LanguageCode),d.updatePermission=[r.Permission.UpdateSettings,r.Permission.UpdateGlobalSettings],d.customFields=d.getCustomFieldConfig("GlobalSettings"),d.detailForm=d.formBuilder.group({availableLanguages:[""],trackInventory:!1,outOfStockThreshold:[0,a.Validators.required],customFields:d.formBuilder.group(d.customFields.reduce((function(e,t){var r;return Object.assign(Object.assign({},e),((r={})[t.name]="",r))}),{}))}),d}return p(t,e),t.prototype.ngOnInit=function(){var e=this;this.init(),this.dataService.client.userStatus().single$.subscribe((function(t){if(!t.userStatus.permissions.includes(r.Permission.UpdateSettings)){var n=e.detailForm.get("availableLanguages");n&&n.disable()}}))},t.prototype.customFieldIsSet=function(e){return!!this.detailForm.get(["customFields",e])},t.prototype.save=function(){var e=this;this.detailForm.dirty&&this.dataService.settings.updateGlobalSettings(this.detailForm.value).pipe(n.tap((function(t){var r=t.updateGlobalSettings;switch(r.__typename){case"GlobalSettings":e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.notificationService.success(i.marker("common.notify-update-success"),{entity:"Settings"});break;case"ChannelDefaultLanguageError":e.notificationService.error(r.message)}})),n.switchMap((function(){return e.serverConfigService.refreshGlobalSettings()})),n.withLatestFrom(this.dataService.client.uiState().single$)).subscribe((function(t){var r=g(t,2),n=r[0].globalSettings,a=r[1].uiState,o=n.availableLanguages;o.length&&!o.includes(a.contentLanguage)&&e.dataService.client.setContentLanguage(o[0]).subscribe()}))},t.prototype.setFormValues=function(e,t){var r,n;if(this.detailForm.patchValue({availableLanguages:e.availableLanguages,trackInventory:e.trackInventory,outOfStockThreshold:e.outOfStockThreshold}),this.customFields.length){var a=this.detailForm.get("customFields");try{for(var o=v(this.customFields),i=o.next();!i.done;i=o.next()){var s=i.value.name,l=e.customFields[s],c=a.get(s);c&&c.patchValue(l)}}catch(e){r={error:e}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}}},t}(r.BaseDetailComponent);D.decorators=[{type:t.Component,args:[{selector:"vdr-global-settings",template:'<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="global-settings-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            (click)="save()"\r\n            *vdrIfPermissions="updatePermission"\r\n            [disabled]="detailForm.invalid || detailForm.pristine"\r\n        >\r\n            {{ \'common.update\' | translate }}\r\n        </button>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm">\r\n    <vdr-form-field [label]="\'common.available-languages\' | translate" for="availableLanguages">\r\n        <ng-select\r\n            [items]="languageCodes"\r\n            [addTag]="false"\r\n            [hideSelected]="true"\r\n            multiple="true"\r\n            appendTo="body"\r\n            formControlName="availableLanguages"\r\n        >\r\n            <ng-template ng-label-tmp let-item="item" let-clear="clear">\r\n                <span class="ng-value-icon left" (click)="clear.call(null, item)" aria-hidden="true">\r\n                    ×\r\n                </span>\r\n                <span class="ng-value-label">{{ item | localeLanguageName }} ({{ item }})</span>\r\n            </ng-template>\r\n            <ng-template ng-option-tmp let-item="item">\r\n                {{ item | localeLanguageName }} ({{ item }})\r\n            </ng-template>\r\n        </ng-select>\r\n    </vdr-form-field>\r\n    <vdr-form-field\r\n        [label]="\'settings.global-out-of-stock-threshold\' | translate"\r\n        for="outOfStockThreshold"\r\n        [tooltip]="\'settings.global-out-of-stock-threshold-tooltip\' | translate"\r\n    >\r\n        <input\r\n            id="outOfStockThreshold"\r\n            type="number"\r\n            formControlName="outOfStockThreshold"\r\n            [readonly]="!(updatePermission | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field\r\n        [label]="\'settings.track-inventory-default\' | translate"\r\n        for="enabled"\r\n        [tooltip]="\'catalog.track-inventory-tooltip\' | translate"\r\n    >\r\n        <clr-toggle-wrapper>\r\n            <input\r\n                type="checkbox"\r\n                clrToggle\r\n                name="enabled"\r\n                formControlName="trackInventory"\r\n                [vdrDisabled]="!(updatePermission | hasPermission)"\r\n            />\r\n        </clr-toggle-wrapper>\r\n    </vdr-form-field>\r\n    <section formGroupName="customFields" *ngIf="customFields.length">\r\n        <label>{{ \'common.custom-fields\' | translate }}</label>\r\n        <ng-container *ngFor="let customField of customFields">\r\n            <vdr-custom-field-control\r\n                *ngIf="customFieldIsSet(customField.name)"\r\n                entityName="GlobalSettings"\r\n                [customFieldsFormGroup]="detailForm.get(\'customFields\')"\r\n                [customField]="customField"\r\n            ></vdr-custom-field-control>\r\n        </ng-container>\r\n    </section>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:["::ng-deep ng-select .ng-arrow-wrapper .ng-arrow,::ng-deep ng-select .ng-select-container>span,::ng-deep ng-select .ng-value>span{margin:0!important}"]}]}],D.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var P=function(e){function t(t,n,o,i,s,l,c){var d=e.call(this,n,t,o,s)||this;return d.changeDetector=i,d.dataService=s,d.formBuilder=l,d.notificationService=c,d.checkers=[],d.handlers=[],d.updatePermission=[r.Permission.UpdateSettings,r.Permission.UpdatePaymentMethod],d.detailForm=d.formBuilder.group({code:["",a.Validators.required],name:["",a.Validators.required],description:"",enabled:[!0,a.Validators.required],checker:{},handler:{}}),d}return p(t,e),t.prototype.ngOnInit=function(){var e=this;this.init(),l.combineLatest([this.dataService.settings.getPaymentMethodOperations().single$,this.entity$.pipe(n.take(1))]).subscribe((function(t){var r=g(t,2),n=r[0],a=r[1];e.checkers=n.paymentMethodEligibilityCheckers,e.handlers=n.paymentMethodHandlers,e.changeDetector.markForCheck(),e.selectedCheckerDefinition=n.paymentMethodEligibilityCheckers.find((function(e){return e.code===(a.checker&&a.checker.code)})),e.selectedHandlerDefinition=n.paymentMethodHandlers.find((function(e){return e.code===(a.handler&&a.handler.code)}))}))},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.updateCode=function(e,t){if(!e){var r=this.detailForm.get(["code"]);r&&r.pristine&&r.setValue(c.normalizeString(t,"-"))}},t.prototype.configArgsIsPopulated=function(){var e=this.detailForm.get("configArgs");return!!e&&0<Object.keys(e.controls).length},t.prototype.selectChecker=function(e){this.selectedCheckerDefinition=e,this.selectedChecker=r.configurableDefinitionToInstance(e);var t=this.detailForm.get("checker");t&&(t.clearValidators(),t.updateValueAndValidity({onlySelf:!0}),t.patchValue(this.selectedChecker)),this.detailForm.markAsDirty()},t.prototype.selectHandler=function(e){this.selectedHandlerDefinition=e,this.selectedHandler=r.configurableDefinitionToInstance(e);var t=this.detailForm.get("handler");t&&(t.clearValidators(),t.updateValueAndValidity({onlySelf:!0}),t.patchValue(this.selectedHandler)),this.detailForm.markAsDirty()},t.prototype.removeChecker=function(){this.selectedChecker=null,this.detailForm.markAsDirty()},t.prototype.removeHandler=function(){this.selectedHandler=null,this.detailForm.markAsDirty()},t.prototype.create=function(){var e=this,t=this.selectedChecker,a=this.selectedHandler;a&&this.entity$.pipe(n.take(1),n.mergeMap((function(n){n.id;var o=e.detailForm.value,i={name:o.name,code:o.code,description:o.description,enabled:o.enabled,checker:t?r.toConfigurableOperationInput(t,o.checker):null,handler:r.toConfigurableOperationInput(a,o.handler)};return e.dataService.settings.createPaymentMethod(i)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-create-success"),{entity:"PaymentMethod"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.createPaymentMethod.id],{relativeTo:e.route})}),(function(t){e.notificationService.error(i.marker("common.notify-create-error"),{entity:"PaymentMethod"})}))},t.prototype.save=function(){var e=this,t=this.selectedChecker,a=this.selectedHandler;a&&this.entity$.pipe(n.take(1),n.mergeMap((function(n){var o=n.id,i=e.detailForm.value,s={id:o,name:i.name,code:i.code,description:i.description,enabled:i.enabled,checker:t?r.toConfigurableOperationInput(t,i.checker):null,handler:r.toConfigurableOperationInput(a,i.handler)};return e.dataService.settings.updatePaymentMethod(s)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-update-success"),{entity:"PaymentMethod"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck()}),(function(t){e.notificationService.error(i.marker("common.notify-update-error"),{entity:"PaymentMethod"})}))},t.prototype.setFormValues=function(e){this.detailForm.patchValue({name:e.name,code:e.code,description:e.description,enabled:e.enabled,checker:e.checker||{},handler:e.handler||{}}),this.selectedChecker||(this.selectedChecker=e.checker&&{code:e.checker.code,args:e.checker.args.map((function(e){return Object.assign(Object.assign({},e),{value:r.getConfigArgValue(e.value)})}))}),this.selectedHandler||(this.selectedHandler=e.handler&&{code:e.handler.code,args:e.handler.args.map((function(e){return Object.assign(Object.assign({},e),{value:r.getConfigArgValue(e.value)})}))})},t}(r.BaseDetailComponent);P.decorators=[{type:t.Component,args:[{selector:"vdr-payment-method-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="payment-method-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            [disabled]="detailForm.pristine || detailForm.invalid"\r\n            (click)="create()"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                *vdrIfPermissions="updatePermission"\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                [disabled]="detailForm.pristine || detailForm.invalid || !selectedHandler"\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm" *ngIf="entity$ | async as paymentMethod">\r\n    <vdr-form-field [label]="\'common.name\' | translate" for="name">\r\n        <input\r\n            id="name"\r\n            type="text"\r\n            formControlName="name"\r\n            [readonly]="!(updatePermission | hasPermission)"\r\n            (input)="updateCode(paymentMethod.code, $event.target.value)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field\r\n        [label]="\'common.code\' | translate"\r\n        for="code"\r\n        [readOnlyToggle]="updatePermission | hasPermission"\r\n    >\r\n        <input\r\n            id="code"\r\n            type="text"\r\n            formControlName="code"\r\n            [readonly]="!(updatePermission | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-rich-text-editor\r\n        formControlName="description"\r\n        [readonly]="!(updatePermission | hasPermission)"\r\n        [label]="\'common.description\' | translate"\r\n    ></vdr-rich-text-editor>\r\n    <vdr-form-field [label]="\'common.enabled\' | translate" for="description">\r\n        <clr-toggle-wrapper>\r\n            <input\r\n                type="checkbox"\r\n                clrToggle\r\n                id="enabled"\r\n                [vdrDisabled]="!(updatePermission | hasPermission)"\r\n                formControlName="enabled"\r\n            />\r\n        </clr-toggle-wrapper>\r\n    </vdr-form-field>\r\n\r\n    <div class="clr-row mt4">\r\n        <div class="clr-col">\r\n            <label class="clr-control-label">{{ \'settings.payment-eligibility-checker\' | translate }}</label>\r\n            <vdr-configurable-input\r\n                *ngIf="selectedChecker && selectedCheckerDefinition"\r\n                [operation]="selectedChecker"\r\n                [operationDefinition]="selectedCheckerDefinition"\r\n                [readonly]="!(updatePermission | hasPermission)"\r\n                (remove)="removeChecker()"\r\n                formControlName="checker"\r\n            ></vdr-configurable-input>\r\n            <div *ngIf="!selectedChecker || !selectedCheckerDefinition">\r\n                <vdr-dropdown>\r\n                    <button class="btn btn-outline" vdrDropdownTrigger>\r\n                        <clr-icon shape="plus"></clr-icon>\r\n                        {{ \'common.select\' | translate }}\r\n                    </button>\r\n                    <vdr-dropdown-menu vdrPosition="bottom-left">\r\n                        <button\r\n                            *ngFor="let checker of checkers"\r\n                            type="button"\r\n                            vdrDropdownItem\r\n                            (click)="selectChecker(checker)"\r\n                        >\r\n                            {{ checker.description }}\r\n                        </button>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class="clr-col">\r\n            <label class="clr-control-label">{{ \'settings.payment-handler\' | translate }}</label>\r\n            <vdr-configurable-input\r\n                *ngIf="selectedHandler && selectedHandlerDefinition"\r\n                [operation]="selectedHandler"\r\n                [operationDefinition]="selectedHandlerDefinition"\r\n                [readonly]="!(updatePermission | hasPermission)"\r\n                (remove)="removeHandler()"\r\n                formControlName="handler"\r\n            ></vdr-configurable-input>\r\n            <div *ngIf="!selectedHandler || !selectedHandlerDefinition">\r\n                <vdr-dropdown>\r\n                    <button class="btn btn-outline" vdrDropdownTrigger>\r\n                        <clr-icon shape="plus"></clr-icon>\r\n                        {{ \'common.select\' | translate }}\r\n                    </button>\r\n                    <vdr-dropdown-menu vdrPosition="bottom-left">\r\n                        <button\r\n                            *ngFor="let handler of handlers"\r\n                            type="button"\r\n                            vdrDropdownItem\r\n                            (click)="selectHandler(handler)"\r\n                        >\r\n                            {{ handler.description }}\r\n                        </button>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],P.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var F=function(e){function t(t,r,n,a,o){var i=e.call(this,r,n)||this;return i.dataService=t,i.modalService=a,i.notificationService=o,e.prototype.setQueryFn.call(i,(function(){for(var e,t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return(e=i.dataService.settings).getPaymentMethods.apply(e,f(t)).refetchOnChannelChange()}),(function(e){return e.paymentMethods})),i}return p(t,e),t.prototype.deletePaymentMethod=function(e){var t=this;this.showModalAndDelete(e).pipe(n.switchMap((function(a){return a.result===r.DeletionResult.DELETED?[!0]:t.showModalAndDelete(e,a.message||"").pipe(n.map((function(e){return e.result===r.DeletionResult.DELETED})))})),n.switchMap((function(){return t.dataService.settings.getPaymentMethods(100).single$}))).subscribe((function(){t.notificationService.success(i.marker("common.notify-delete-success"),{entity:"PaymentMethod"}),t.refresh()}),(function(e){t.notificationService.error(i.marker("common.notify-delete-error"),{entity:"PaymentMethod"})}))},t.prototype.showModalAndDelete=function(e,t){var r=this;return this.modalService.dialog({title:i.marker("settings.confirm-delete-payment-method"),body:t,buttons:[{type:"secondary",label:i.marker("common.cancel")},{type:"danger",label:i.marker("common.delete"),returnValue:!0}]}).pipe(n.switchMap((function(n){return n?r.dataService.settings.deletePaymentMethod(e,!!t):l.EMPTY})),n.map((function(e){return e.deletePaymentMethod})))},t}(r.BaseListComponent);F.decorators=[{type:t.Component,args:[{selector:"vdr-payment-method-list",template:'<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="payment-method-list"></vdr-action-bar-items>\r\n        <a class="btn btn-primary" [routerLink]="[\'./create\']" *vdrIfPermissions="[\'CreateSettings\', \'CreatePaymentMethod\']">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'settings.create-new-payment-method\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]="items$ | async"\r\n    [itemsPerPage]="itemsPerPage$ | async"\r\n    [totalItems]="totalItems$ | async"\r\n    [currentPage]="currentPage$ | async"\r\n    (pageChange)="setPageNumber($event)"\r\n    (itemsPerPageChange)="setItemsPerPage($event)"\r\n>\r\n    <vdr-dt-column>{{ \'common.code\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'common.enabled\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-paymentMethod="item">\r\n        <td class="left align-middle">{{ paymentMethod.code }}</td>\r\n        <td class="left align-middle">{{ paymentMethod.enabled }}</td>\r\n        <td class="right align-middle">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', paymentMethod.id]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deletePaymentMethod(paymentMethod.id)"\r\n                        [disabled]="!([\'DeleteSettings\', \'DeletePaymentMethod\'] | hasPermission)"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],F.ctorParameters=function(){return[{type:r.DataService},{type:o.Router},{type:o.ActivatedRoute},{type:r.ModalService},{type:r.NotificationService}]};var I=function(){function e(){this.readonly=!1,this.permissionChange=new t.EventEmitter}return e.prototype.ngOnInit=function(){this.buildGrid()},e.prototype.setPermission=function(e,t){this.readonly||this.permissionChange.emit({permission:e,value:t})},e.prototype.toggleAll=function(e){var t,r,n=this,a=e.some((function(e){return!n.activePermissions.includes(e.name)}));try{for(var o=v(e),i=o.next();!i.done;i=o.next()){var s=i.value;this.permissionChange.emit({permission:s.name,value:a})}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}},e.prototype.buildGrid=function(){var e,t,r,n=this,a=new Map,o=[],i=/^(Create|Read|Update|Delete)([a-zA-Z]+)$/;try{for(var s=v(this.permissionDefinitions),l=s.next();!l.done;l=s.next()){var c=l.value;if(i.test(c.name)){var d=null===(r=c.name.match(i))||void 0===r?void 0:r[2];if(d){var m=a.get(d);m?m.push(c):a.set(d,[c])}}else c.assignable&&o.push(c)}}catch(t){e={error:t}}finally{try{l&&!l.done&&(t=s.return)&&t.call(s)}finally{if(e)throw e.error}}this.gridData=f(o.map((function(e){return{label:e.name,description:e.description,permissions:[e]}})),Array.from(a.entries()).map((function(e){var t=g(e,2),r=t[0],a=t[1];return{label:r,description:n.extractCrudDescription(a[0]),permissions:a}})))},e.prototype.extractCrudDescription=function(e){return e.description.replace(/Grants permission to [\w]+/,"Grants permissions on")},e}();I.decorators=[{type:t.Component,args:[{selector:"vdr-permission-grid",template:'<table class="table">\r\n    <tbody>\r\n        <tr *ngFor="let section of gridData">\r\n            <td class="permission-group left">\r\n                <div><strong>{{ section.label | translate }}</strong></div>\r\n                <small>{{ section.description | translate }}</small><br>\r\n                <button *ngIf="1 < section.permissions.length && !readonly" class="btn btn-sm btn-link" (click)="toggleAll(section.permissions)">\r\n                    {{ \'common.toggle-all\' | translate }}\r\n                </button>\r\n            </td>\r\n            <td *ngFor="let permission of section.permissions" [attr.colspan]="section.permissions.length === 1 ? 4 : 1">\r\n                <vdr-select-toggle\r\n                    size="small"\r\n                    [title]="permission.description"\r\n                    [label]="permission.name"\r\n                    [disabled]="readonly"\r\n                    [selected]="activePermissions?.includes(permission.name)"\r\n                    (selectedChange)="setPermission(permission.name, $event)"\r\n                ></vdr-select-toggle>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:["td.permission-group{max-width:300px;background-color:var(--color-component-bg-200)}"]}]}],I.propDecorators={permissionDefinitions:[{type:t.Input}],activePermissions:[{type:t.Input}],readonly:[{type:t.Input}],permissionChange:[{type:t.Output}]};var w=function(e){function t(t,r,n,o,i,s,l){var c=e.call(this,r,t,n,i)||this;return c.changeDetector=o,c.dataService=i,c.formBuilder=s,c.notificationService=l,c.customFields=c.getCustomFieldConfig("Administrator"),c.detailForm=c.formBuilder.group({emailAddress:["",a.Validators.required],firstName:["",a.Validators.required],lastName:["",a.Validators.required],password:[""],customFields:c.formBuilder.group(c.customFields.reduce((function(e,t){var r;return Object.assign(Object.assign({},e),((r={})[t.name]="",r))}),{}))}),c}return p(t,e),t.prototype.ngOnInit=function(){this.init()},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.customFieldIsSet=function(e){return!!this.detailForm.get(["customFields",e])},t.prototype.save=function(){var e=this;this.entity$.pipe(n.take(1),n.mergeMap((function(t){t.id;var r=e.detailForm.value,n={emailAddress:r.emailAddress,firstName:r.firstName,lastName:r.lastName,password:r.password,customFields:r.customFields};return e.dataService.administrator.updateActiveAdministrator(n)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-update-success"),{entity:"Administrator"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck()}),(function(t){e.notificationService.error(i.marker("common.notify-update-error"),{entity:"Administrator"})}))},t.prototype.setFormValues=function(e,t){var r,n;if(this.detailForm.patchValue({emailAddress:e.emailAddress,firstName:e.firstName,lastName:e.lastName}),this.customFields.length){var a=this.detailForm.get("customFields");try{for(var o=v(this.customFields),i=o.next();!i.done;i=o.next()){var s=i.value.name,l=e.customFields[s],c=a.get(s);c&&c.patchValue(l)}}catch(e){r={error:e}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}}},t}(r.BaseDetailComponent);w.decorators=[{type:t.Component,args:[{selector:"vdr-profile",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="administrator-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            (click)="save()"\r\n            [disabled]="detailForm.invalid || detailForm.pristine"\r\n        >\r\n            {{ \'common.update\' | translate }}\r\n        </button>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm">\r\n    <vdr-form-field [label]="\'settings.email-address\' | translate" for="emailAddress">\r\n        <input id="emailAddress" type="text" formControlName="emailAddress" />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.first-name\' | translate" for="firstName">\r\n        <input id="firstName" type="text" formControlName="firstName" />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.last-name\' | translate" for="lastName">\r\n        <input id="lastName" type="text" formControlName="lastName" />\r\n    </vdr-form-field>\r\n    <vdr-form-field *ngIf="isNew$ | async" [label]="\'settings.password\' | translate" for="password">\r\n        <input id="password" type="password" formControlName="password" />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.password\' | translate" for="password" [readOnlyToggle]="true">\r\n        <input id="password" type="password" formControlName="password" />\r\n    </vdr-form-field>\r\n    <section formGroupName="customFields" *ngIf="customFields.length">\r\n        <label>{{ \'common.custom-fields\' | translate }}</label>\r\n        <ng-container *ngFor="let customField of customFields">\r\n            <vdr-custom-field-control\r\n                *ngIf="customFieldIsSet(customField.name)"\r\n                entityName="Administrator"\r\n                [customFieldsFormGroup]="detailForm.get(\'customFields\')"\r\n                [customField]="customField"\r\n            ></vdr-custom-field-control>\r\n        </ng-container>\r\n    </section>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],w.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var x=function(e){function t(t,r,n,o,i,s,l){var c=e.call(this,r,t,n,i)||this;return c.changeDetector=o,c.dataService=i,c.formBuilder=s,c.notificationService=l,c.detailForm=c.formBuilder.group({code:["",a.Validators.required],description:["",a.Validators.required],channelIds:[],permissions:[]}),c}return p(t,e),t.prototype.ngOnInit=function(){this.init(),this.role$=this.entity$,this.permissionDefinitions=this.serverConfigService.getPermissionDefinitions()},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.updateCode=function(e){var t=this.detailForm.get(["code"]);t&&t.pristine&&t.setValue(c.normalizeString(e,"-"))},t.prototype.setPermission=function(e){var t=this.detailForm.get("permissions");if(t){var r=t.value,n=!0===e.value?d.unique(f(r,[e.permission])):r.filter((function(t){return t!==e.permission}));t.setValue(n),t.markAsDirty()}},t.prototype.create=function(){var e=this,t=this.detailForm.value;this.dataService.administrator.createRole(t).subscribe((function(t){e.notificationService.success(i.marker("common.notify-create-success"),{entity:"Role"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.createRole.id],{relativeTo:e.route})}),(function(t){e.notificationService.error(i.marker("common.notify-create-error"),{entity:"Role"})}))},t.prototype.save=function(){var e=this;this.role$.pipe(n.take(1),n.mergeMap((function(t){var r=t.id,n=e.detailForm.value,a=Object.assign({id:r},n);return e.dataService.administrator.updateRole(a)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-update-success"),{entity:"Role"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck()}),(function(t){e.notificationService.error(i.marker("common.notify-update-error"),{entity:"Role"})}))},t.prototype.setFormValues=function(e,t){this.detailForm.patchValue({description:e.description,code:e.code,channelIds:e.channels.map((function(e){return e.id})),permissions:e.permissions}),this.changeDetector.detectChanges()},t}(r.BaseDetailComponent);x.decorators=[{type:t.Component,args:[{selector:"vdr-role-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="role-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="detailForm.invalid || detailForm.pristine"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                *vdrIfPermissions="\'UpdateAdministrator\'"\r\n                [disabled]="detailForm.invalid || detailForm.pristine"\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm">\r\n    <vdr-form-field [label]="\'common.description\' | translate" for="description">\r\n        <input\r\n            id="description"\r\n            type="text"\r\n            formControlName="description"\r\n            [readonly]="!(\'UpdateAdministrator\' | hasPermission)"\r\n            (input)="updateCode($event.target.value)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field\r\n        [label]="\'common.code\' | translate"\r\n        for="code"\r\n        [readOnlyToggle]="\'UpdateAdministrator\' | hasPermission"\r\n    >\r\n        <input\r\n            id="code"\r\n            type="text"\r\n            formControlName="code"\r\n            [readonly]="!(\'UpdateAdministrator\' | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.channel\' | translate">\r\n        <vdr-channel-assignment-control\r\n            formControlName="channelIds"\r\n            [vdrDisabled]="!(\'UpdateAdministrator\' | hasPermission)"\r\n        ></vdr-channel-assignment-control>\r\n    </vdr-form-field>\r\n    <label>{{ \'settings.permissions\' | translate }}</label>\r\n    <vdr-permission-grid\r\n        [permissionDefinitions]="permissionDefinitions"\r\n        [activePermissions]="detailForm.get(\'permissions\')?.value"\r\n        (permissionChange)="setPermission($event)"\r\n        [readonly]="!(\'UpdateAdministrator\' | hasPermission)"\r\n    ></vdr-permission-grid>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],x.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var T=function(e){function t(t,r,n,a,o){var i=e.call(this,a,o)||this;return i.modalService=t,i.notificationService=r,i.dataService=n,i.initialLimit=3,i.displayLimit={},e.prototype.setQueryFn.call(i,(function(){for(var e,t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return(e=i.dataService.administrator).getRoles.apply(e,f(t))}),(function(e){return e.roles})),i}return p(t,e),t.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.visibleRoles$=this.items$.pipe(n.map((function(e){return e.filter((function(e){return e.code!==s.CUSTOMER_ROLE_CODE}))})))},t.prototype.toggleDisplayLimit=function(e){this.displayLimit[e.id]===e.permissions.length?this.displayLimit[e.id]=this.initialLimit:this.displayLimit[e.id]=e.permissions.length},t.prototype.isDefaultRole=function(e){return e.code===s.SUPER_ADMIN_ROLE_CODE||e.code===s.CUSTOMER_ROLE_CODE},t.prototype.deleteRole=function(e){var t=this;this.modalService.dialog({title:i.marker("settings.confirm-delete-role"),buttons:[{type:"secondary",label:i.marker("common.cancel")},{type:"danger",label:i.marker("common.delete"),returnValue:!0}]}).pipe(n.switchMap((function(r){return r?t.dataService.administrator.deleteRole(e):l.EMPTY}))).subscribe((function(){t.notificationService.success(i.marker("common.notify-delete-success"),{entity:"Role"}),t.refresh()}),(function(e){t.notificationService.error(i.marker("common.notify-delete-error"),{entity:"Role"})}))},t}(r.BaseListComponent);T.decorators=[{type:t.Component,args:[{selector:"vdr-role-list",template:'<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="role-list"></vdr-action-bar-items>\r\n        <a class="btn btn-primary" [routerLink]="[\'./create\']" *vdrIfPermissions="\'CreateAdministrator\'">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'settings.create-new-role\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]="visibleRoles$ | async"\r\n    [itemsPerPage]="itemsPerPage$ | async"\r\n    [totalItems]="totalItems$ | async"\r\n    [currentPage]="currentPage$ | async"\r\n    (pageChange)="setPageNumber($event)"\r\n    (itemsPerPageChange)="setItemsPerPage($event)"\r\n>\r\n    <vdr-dt-column>{{ \'common.description\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'common.code\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'settings.channel\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'settings.permissions\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-role="item">\r\n        <td class="left align-middle">{{ role.description }}</td>\r\n        <td class="left align-middle"><span *ngIf="!isDefaultRole(role)">{{ role.code }}</span></td>\r\n        <td class="left align-middle">\r\n            <ng-container *ngIf="!isDefaultRole(role)">\r\n                <vdr-chip *ngFor="let channel of role.channels">\r\n                    <vdr-channel-badge [channelCode]="channel.code"></vdr-channel-badge>\r\n                    {{ channel.code | channelCodeToLabel | translate }}\r\n                </vdr-chip>\r\n            </ng-container>\r\n        </td>\r\n        <td class="left align-middle">\r\n            <ng-container *ngIf="!isDefaultRole(role); else defaultRole">\r\n                <vdr-chip *ngFor="let permission of role.permissions |  slice: 0:displayLimit[role.id] || 3">{{ permission }}</vdr-chip>\r\n                <button\r\n                    class="btn btn-sm btn-secondary btn-icon"\r\n                    *ngIf="role.permissions.length > initialLimit"\r\n                    (click)="toggleDisplayLimit(role)"\r\n                >\r\n                    <ng-container *ngIf="(displayLimit[role.id] || 0) < role.permissions.length; else collapse">\r\n                        <clr-icon shape="plus"></clr-icon>\r\n                        {{ role.permissions.length - initialLimit }}\r\n                    </ng-container>\r\n                    <ng-template #collapse>\r\n                        <clr-icon shape="minus"></clr-icon>\r\n                    </ng-template>\r\n                </button>\r\n            </ng-container>\r\n            <ng-template #defaultRole>\r\n                <span class="default-role-label">{{ \'settings.default-role-label\' | translate }}</span>\r\n            </ng-template>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-table-row-action\r\n                *ngIf="!isDefaultRole(role)"\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', role.id]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger [disabled]="isDefaultRole(role)">\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deleteRole(role.id)"\r\n                        [disabled]="!(\'SuperAdmin\' | hasPermission)"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".default-role-label{color:var(--color-grey-400)}"]}]}],T.ctorParameters=function(){return[{type:r.ModalService},{type:r.NotificationService},{type:r.DataService},{type:o.Router},{type:o.ActivatedRoute}]};var R=function(){this.okToRun=!1,this.testDataUpdated=!1,this.runTest=new t.EventEmitter};R.decorators=[{type:t.Component,args:[{selector:"vdr-shipping-eligibility-test-result",template:'<div class="test-result card">\r\n    <div class="card-header">\r\n        {{ \'settings.test-result\' | translate }}\r\n    </div>\r\n    <div class="card-block" *ngFor="let quote of testResult">\r\n        <div class="result-details" [class.stale]="testDataUpdated">\r\n            <vdr-labeled-data [label]="\'settings.shipping-method\' | translate">\r\n                {{ quote.name }}\r\n            </vdr-labeled-data>\r\n            <div class="price-row">\r\n                <vdr-labeled-data [label]="\'common.price\' | translate">\r\n                    {{ quote.price | localeCurrency: currencyCode }}\r\n                </vdr-labeled-data>\r\n                <vdr-labeled-data [label]="\'common.price-with-tax\' | translate">\r\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\r\n                </vdr-labeled-data>\r\n            </div>\r\n            <vdr-object-tree *ngIf="quote.metadata" [value]="quote.metadata"></vdr-object-tree>\r\n        </div>\r\n    </div>\r\n    <div class="card-block" *ngIf="testResult?.length === 0">\r\n        <clr-icon shape="ban" class="is-solid error"></clr-icon>\r\n        {{ \'settings.no-eligible-shipping-methods\' | translate }}\r\n    </div>\r\n    <div class="card-footer">\r\n        <button class="btn btn-secondary" (click)="runTest.emit()" [disabled]="!okToRun">\r\n            {{ \'settings.test-shipping-methods\' | translate }}\r\n        </button>\r\n    </div>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.price-row{display:flex}.price-row>:not(:first-child){margin-left:24px}clr-icon.error{color:var(--color-error-500)}"]}]}],R.propDecorators={testResult:[{type:t.Input}],okToRun:[{type:t.Input}],testDataUpdated:[{type:t.Input}],currencyCode:[{type:t.Input}],runTest:[{type:t.Output}]};var M=function(e){function t(t,n,o,i,s,c,d){var m=e.call(this,n,t,o,s)||this;return m.changeDetector=i,m.dataService=s,m.formBuilder=c,m.notificationService=d,m.checkers=[],m.calculators=[],m.fulfillmentHandlers=[],m.testDataUpdated=!1,m.updatePermission=[r.Permission.UpdateSettings,r.Permission.UpdateShippingMethod],m.fetchTestResult$=new l.Subject,m.customFields=m.getCustomFieldConfig("ShippingMethod"),m.detailForm=m.formBuilder.group({code:["",a.Validators.required],name:["",a.Validators.required],description:"",fulfillmentHandler:["",a.Validators.required],checker:{},calculator:{},customFields:m.formBuilder.group(m.customFields.reduce((function(e,t){var r;return Object.assign(Object.assign({},e),((r={})[t.name]="",r))}),{}))}),m}return p(t,e),t.prototype.ngOnInit=function(){var e=this;this.init(),l.combineLatest([this.dataService.shippingMethod.getShippingMethodOperations().single$,this.entity$.pipe(n.take(1))]).subscribe((function(t){var r=g(t,2),n=r[0],a=r[1];e.checkers=n.shippingEligibilityCheckers,e.calculators=n.shippingCalculators,e.fulfillmentHandlers=n.fulfillmentHandlers,e.changeDetector.markForCheck(),e.selectedCheckerDefinition=n.shippingEligibilityCheckers.find((function(e){return e.code===(a.checker&&a.checker.code)})),e.selectedCalculatorDefinition=n.shippingCalculators.find((function(e){return e.code===(a.calculator&&a.calculator.code)}))})),this.activeChannel$=this.dataService.settings.getActiveChannel().mapStream((function(e){return e.activeChannel})),this.testResult$=this.fetchTestResult$.pipe(n.switchMap((function(t){var n=g(t,2),a=n[0],o=n[1];if(!e.selectedChecker||!e.selectedCalculator)return l.of(void 0);var i=e.detailForm.value,s={shippingAddress:Object.assign(Object.assign({},a),{streetLine1:"test"}),lines:o.map((function(e){return{productVariantId:e.id,quantity:e.quantity}})),checker:r.toConfigurableOperationInput(e.selectedChecker,i.checker),calculator:r.toConfigurableOperationInput(e.selectedCalculator,i.calculator)};return e.dataService.shippingMethod.testShippingMethod(s).mapSingle((function(e){return e.testShippingMethod}))}))),l.merge(this.detailForm.get(["checker"]).valueChanges,this.detailForm.get(["calculator"]).valueChanges).pipe(n.takeUntil(this.destroy$)).subscribe((function(){return e.testDataUpdated=!0}))},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.customFieldIsSet=function(e){return!!this.detailForm.get(["customFields",e])},t.prototype.updateCode=function(e,t){if(!e){var r=this.detailForm.get(["code"]);r&&r.pristine&&r.setValue(c.normalizeString(t,"-"))}},t.prototype.selectChecker=function(e){this.selectedCheckerDefinition=e,this.selectedChecker=r.configurableDefinitionToInstance(e);var t=this.detailForm.get("checker");t&&(t.clearValidators(),t.updateValueAndValidity({onlySelf:!0}),t.patchValue(this.selectedChecker)),this.detailForm.markAsDirty()},t.prototype.selectCalculator=function(e){this.selectedCalculatorDefinition=e,this.selectedCalculator=r.configurableDefinitionToInstance(e);var t=this.detailForm.get("calculator");t&&(t.clearValidators(),t.updateValueAndValidity({onlySelf:!0}),t.patchValue(this.selectedCalculator)),this.detailForm.markAsDirty()},t.prototype.create=function(){var e=this,t=this.selectedChecker,a=this.selectedCalculator;t&&a&&l.combineLatest([this.entity$,this.languageCode$]).pipe(n.take(1),n.mergeMap((function(n){var o=g(n,2),i=o[0],s=o[1],l=e.detailForm.value,c=Object.assign(Object.assign({},e.getUpdatedShippingMethod(i,e.detailForm,s)),{checker:r.toConfigurableOperationInput(t,l.checker),calculator:r.toConfigurableOperationInput(a,l.calculator)});return e.dataService.shippingMethod.createShippingMethod(c)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-create-success"),{entity:"ShippingMethod"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.createShippingMethod.id],{relativeTo:e.route})}),(function(t){e.notificationService.error(i.marker("common.notify-create-error"),{entity:"ShippingMethod"})}))},t.prototype.save=function(){var e=this,t=this.selectedChecker,a=this.selectedCalculator;t&&a&&l.combineLatest([this.entity$,this.languageCode$]).pipe(n.take(1),n.mergeMap((function(n){var o=g(n,2),i=o[0],s=o[1],l=e.detailForm.value,c=Object.assign(Object.assign({},e.getUpdatedShippingMethod(i,e.detailForm,s)),{checker:r.toConfigurableOperationInput(t,l.checker),calculator:r.toConfigurableOperationInput(a,l.calculator)});return e.dataService.shippingMethod.updateShippingMethod(c)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-update-success"),{entity:"ShippingMethod"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck()}),(function(t){e.notificationService.error(i.marker("common.notify-update-error"),{entity:"ShippingMethod"})}))},t.prototype.setTestOrderLines=function(e){this.testOrderLines=e,this.testDataUpdated=!0},t.prototype.setTestAddress=function(e){this.testAddress=e,this.testDataUpdated=!0},t.prototype.allTestDataPresent=function(){return!!(this.testAddress&&this.testOrderLines&&this.testOrderLines.length&&this.selectedChecker&&this.selectedCalculator)},t.prototype.runTest=function(){this.fetchTestResult$.next([this.testAddress,this.testOrderLines]),this.testDataUpdated=!1},t.prototype.getUpdatedShippingMethod=function(e,t,n){var a=t.value,o=r.createUpdatedTranslatable({translatable:e,updatedFields:a,customFieldConfig:this.customFields,languageCode:n,defaultTranslation:{languageCode:n,name:e.name||"",description:e.description||""}});return Object.assign(Object.assign({},o),{fulfillmentHandler:a.fulfillmentHandler})},t.prototype.setFormValues=function(e,t){var n,a,o,i,s,l,c=r.findTranslation(e,t);if(this.detailForm.patchValue({name:null!==(o=null==c?void 0:c.name)&&void 0!==o?o:"",description:null!==(i=null==c?void 0:c.description)&&void 0!==i?i:"",code:e.code,fulfillmentHandler:e.fulfillmentHandlerCode,checker:e.checker||{},calculator:e.calculator||{}}),this.selectedChecker||(this.selectedChecker=e.checker&&{code:e.checker.code,args:e.checker.args.map((function(e){return Object.assign(Object.assign({},e),{value:r.getConfigArgValue(e.value)})}))}),this.selectedCalculator||(this.selectedCalculator=e.calculator&&{code:null===(s=e.calculator)||void 0===s?void 0:s.code,args:null===(l=e.calculator)||void 0===l?void 0:l.args.map((function(e){return Object.assign(Object.assign({},e),{value:r.getConfigArgValue(e.value)})}))}),this.customFields.length){var d=this.detailForm.get("customFields");try{for(var m=v(this.customFields),u=m.next();!u.done;u=m.next()){var p=u.value,g=p.name,f="localeString"===p.type?c.customFields[g]:e.customFields[g],h=d.get(g);h&&h.patchValue(f)}}catch(e){n={error:e}}finally{try{u&&!u.done&&(a=m.return)&&a.call(m)}finally{if(n)throw n.error}}}},t}(r.BaseDetailComponent);M.decorators=[{type:t.Component,args:[{selector:"vdr-shipping-method-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n        <vdr-language-selector\r\n            [disabled]="isNew$ | async"\r\n            [availableLanguageCodes]="availableLanguages$ | async"\r\n            [currentLanguageCode]="languageCode$ | async"\r\n            (languageCodeChange)="setLanguage($event)"\r\n        ></vdr-language-selector>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="shipping-method-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                *vdrIfPermissions="updatePermission"\r\n                [disabled]="\r\n                    detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\r\n                "\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm" *ngIf="entity$ | async as shippingMethod">\r\n    <vdr-form-field [label]="\'common.name\' | translate" for="name">\r\n        <input\r\n            id="name"\r\n            type="text"\r\n            formControlName="name"\r\n            [readonly]="!(updatePermission | hasPermission)"\r\n            (input)="updateCode(shippingMethod.code, $event.target.value)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field\r\n        [label]="\'common.code\' | translate"\r\n        for="code"\r\n        [readOnlyToggle]="updatePermission | hasPermission"\r\n    >\r\n        <input\r\n            id="code"\r\n            type="text"\r\n            formControlName="code"\r\n            [readonly]="!(updatePermission | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-rich-text-editor\r\n        formControlName="description"\r\n        [readonly]="!(updatePermission | hasPermission)"\r\n        [label]="\'common.description\' | translate"\r\n    ></vdr-rich-text-editor>\r\n    <vdr-form-field [label]="\'settings.fulfillment-handler\' | translate" for="fulfillmentHandler" class="mb2">\r\n        <select\r\n            name="fulfillmentHandler"\r\n            formControlName="fulfillmentHandler"\r\n            [vdrDisabled]="!(updatePermission | hasPermission)"\r\n        >\r\n            <option *ngFor="let handler of fulfillmentHandlers" [value]="handler.code">\r\n                {{ handler.code }}: {{ handler.description }}\r\n            </option>\r\n        </select>\r\n    </vdr-form-field>\r\n\r\n    <section formGroupName="customFields" *ngIf="customFields.length">\r\n        <label>{{ \'common.custom-fields\' | translate }}</label>\r\n        <ng-container *ngFor="let customField of customFields">\r\n            <vdr-custom-field-control\r\n                *ngIf="customFieldIsSet(customField.name)"\r\n                entityName="ShippingMethod"\r\n                [customFieldsFormGroup]="detailForm.get(\'customFields\')"\r\n                [customField]="customField"\r\n            ></vdr-custom-field-control>\r\n        </ng-container>\r\n    </section>\r\n\r\n    <div class="clr-row mt4">\r\n        <div class="clr-col">\r\n            <label class="clr-control-label">{{ \'settings.shipping-eligibility-checker\' | translate }}</label>\r\n            <vdr-configurable-input\r\n                *ngIf="selectedChecker && selectedCheckerDefinition"\r\n                [operation]="selectedChecker"\r\n                [operationDefinition]="selectedCheckerDefinition"\r\n                [readonly]="!(updatePermission | hasPermission)"\r\n                (remove)="selectedChecker = null"\r\n                formControlName="checker"\r\n            ></vdr-configurable-input>\r\n            <div *ngIf="!selectedChecker || !selectedCheckerDefinition">\r\n                <vdr-dropdown>\r\n                    <button class="btn btn-outline" vdrDropdownTrigger>\r\n                        <clr-icon shape="plus"></clr-icon>\r\n                        {{ \'common.select\' | translate }}\r\n                    </button>\r\n                    <vdr-dropdown-menu vdrPosition="bottom-left">\r\n                        <button\r\n                            *ngFor="let checker of checkers"\r\n                            type="button"\r\n                            vdrDropdownItem\r\n                            (click)="selectChecker(checker)"\r\n                        >\r\n                            {{ checker.description }}\r\n                        </button>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class="clr-col">\r\n            <label class="clr-control-label">{{ \'settings.shipping-calculator\' | translate }}</label>\r\n            <vdr-configurable-input\r\n                *ngIf="selectedCalculator && selectedCalculatorDefinition"\r\n                [operation]="selectedCalculator"\r\n                [operationDefinition]="selectedCalculatorDefinition"\r\n                [readonly]="!(updatePermission | hasPermission)"\r\n                (remove)="selectedCalculator = null"\r\n                formControlName="calculator"\r\n            ></vdr-configurable-input>\r\n            <div *ngIf="!selectedCalculator || !selectedCalculatorDefinition">\r\n                <vdr-dropdown>\r\n                    <button class="btn btn-outline" vdrDropdownTrigger>\r\n                        <clr-icon shape="plus"></clr-icon>\r\n                        {{ \'common.select\' | translate }}\r\n                    </button>\r\n                    <vdr-dropdown-menu vdrPosition="bottom-left">\r\n                        <button\r\n                            *ngFor="let calculator of calculators"\r\n                            type="button"\r\n                            vdrDropdownItem\r\n                            (click)="selectCalculator(calculator)"\r\n                        >\r\n                            {{ calculator.description }}\r\n                        </button>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n<div class="testing-tool">\r\n    <clr-accordion>\r\n        <clr-accordion-panel>\r\n            <clr-accordion-title>{{ \'settings.test-shipping-method\' | translate }}</clr-accordion-title>\r\n            <clr-accordion-content *clrIfExpanded>\r\n                <div class="clr-row">\r\n                    <div class="clr-col">\r\n                        <vdr-test-order-builder\r\n                            (orderLinesChange)="setTestOrderLines($event)"\r\n                        ></vdr-test-order-builder>\r\n                    </div>\r\n                    <div class="clr-col">\r\n                        <vdr-test-address-form\r\n                            (addressChange)="setTestAddress($event)"\r\n                        ></vdr-test-address-form>\r\n                        <vdr-shipping-method-test-result\r\n                            [currencyCode]="(activeChannel$ | async)?.currencyCode"\r\n                            [okToRun]="allTestDataPresent() && testDataUpdated && detailForm.valid"\r\n                            [testDataUpdated]="testDataUpdated"\r\n                            [testResult]="testResult$ | async"\r\n                            (runTest)="runTest()"\r\n                        ></vdr-shipping-method-test-result>\r\n                    </div>\r\n                </div>\r\n            </clr-accordion-content>\r\n        </clr-accordion-panel>\r\n    </clr-accordion>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".testing-tool{margin-top:48px;margin-bottom:128px}.testing-tool h4{margin-bottom:12px}"]}]}],M.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var A=function(e){function t(t,r,n,a,o,i){var s=e.call(this,o,i)||this;return s.modalService=t,s.notificationService=r,s.dataService=n,s.serverConfigService=a,s.testDataUpdated=!1,s.fetchTestResult$=new l.Subject,e.prototype.setQueryFn.call(s,(function(){for(var e,t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return(e=s.dataService.shippingMethod).getShippingMethods.apply(e,f(t)).refetchOnChannelChange()}),(function(e){return e.shippingMethods})),s}return p(t,e),t.prototype.ngOnInit=function(){var t=this;e.prototype.ngOnInit.call(this),this.testResult$=this.fetchTestResult$.pipe(n.switchMap((function(e){var r=g(e,2),n=r[0],a=r[1],o={shippingAddress:Object.assign(Object.assign({},n),{streetLine1:"test"}),lines:a.map((function(e){return{productVariantId:e.id,quantity:e.quantity}}))};return t.dataService.shippingMethod.testEligibleShippingMethods(o).mapSingle((function(e){return e.testEligibleShippingMethods}))}))),this.activeChannel$=this.dataService.settings.getActiveChannel().mapStream((function(e){return e.activeChannel})),this.availableLanguages$=this.serverConfigService.getAvailableLanguages(),this.contentLanguage$=this.dataService.client.uiState().mapStream((function(e){return e.uiState.contentLanguage})).pipe(n.tap((function(){return t.refresh()})))},t.prototype.deleteShippingMethod=function(e){var t=this;this.modalService.dialog({title:i.marker("catalog.confirm-delete-shipping-method"),buttons:[{type:"secondary",label:i.marker("common.cancel")},{type:"danger",label:i.marker("common.delete"),returnValue:!0}]}).pipe(n.switchMap((function(r){return r?t.dataService.shippingMethod.deleteShippingMethod(e):l.EMPTY}))).subscribe((function(){t.notificationService.success(i.marker("common.notify-delete-success"),{entity:"ShippingMethod"}),t.refresh()}),(function(e){t.notificationService.error(i.marker("common.notify-delete-error"),{entity:"ShippingMethod"})}))},t.prototype.setTestOrderLines=function(e){this.testOrderLines=e,this.testDataUpdated=!0},t.prototype.setTestAddress=function(e){this.testAddress=e,this.testDataUpdated=!0},t.prototype.allTestDataPresent=function(){return!!(this.testAddress&&this.testOrderLines&&this.testOrderLines.length)},t.prototype.runTest=function(){this.fetchTestResult$.next([this.testAddress,this.testOrderLines]),this.testDataUpdated=!1},t.prototype.setLanguage=function(e){this.dataService.client.setContentLanguage(e).subscribe()},t}(r.BaseListComponent);A.decorators=[{type:t.Component,args:[{selector:"vdr-shipping-method-list",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-language-selector\r\n            [availableLanguageCodes]="availableLanguages$ | async"\r\n            [currentLanguageCode]="contentLanguage$ | async"\r\n            (languageCodeChange)="setLanguage($event)"\r\n        ></vdr-language-selector>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="shipping-method-list"></vdr-action-bar-items>\r\n        <a\r\n            class="btn btn-primary"\r\n            [routerLink]="[\'./create\']"\r\n            *vdrIfPermissions="[\'CreateSettings\', \'CreateShippingMethod\']"\r\n        >\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'settings.create-new-shipping-method\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]="items$ | async"\r\n    [itemsPerPage]="itemsPerPage$ | async"\r\n    [totalItems]="totalItems$ | async"\r\n    [currentPage]="currentPage$ | async"\r\n    (pageChange)="setPageNumber($event)"\r\n    (itemsPerPageChange)="setItemsPerPage($event)"\r\n>\r\n    <vdr-dt-column>{{ \'common.code\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'common.name\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-shippingMethod="item">\r\n        <td class="left align-middle">{{ shippingMethod.code }}</td>\r\n        <td class="left align-middle">{{ shippingMethod.name }}</td>\r\n        <td class="right align-middle">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', shippingMethod.id]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deleteShippingMethod(shippingMethod.id)"\r\n                        [disabled]="!([\'DeleteSettings\', \'DeleteShippingMethod\'] | hasPermission)"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n\r\n<div class="testing-tool">\r\n    <clr-accordion>\r\n        <clr-accordion-panel>\r\n            <clr-accordion-title>{{ \'settings.test-shipping-methods\' | translate }}</clr-accordion-title>\r\n            <clr-accordion-content *clrIfExpanded>\r\n                <div class="clr-row">\r\n                    <div class="clr-col">\r\n                        <vdr-test-order-builder\r\n                            (orderLinesChange)="setTestOrderLines($event)"\r\n                        ></vdr-test-order-builder>\r\n                    </div>\r\n                    <div class="clr-col">\r\n                        <vdr-test-address-form\r\n                            (addressChange)="setTestAddress($event)"\r\n                        ></vdr-test-address-form>\r\n                        <vdr-shipping-eligibility-test-result\r\n                            [currencyCode]="(activeChannel$ | async)?.currencyCode"\r\n                            [okToRun]="allTestDataPresent()"\r\n                            [testDataUpdated]="testDataUpdated"\r\n                            [testResult]="testResult$ | async"\r\n                            (runTest)="runTest()"\r\n                        ></vdr-shipping-eligibility-test-result>\r\n                    </div>\r\n                </div>\r\n            </clr-accordion-content>\r\n        </clr-accordion-panel>\r\n    </clr-accordion>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".testing-tool{margin-top:48px}"]}]}],A.ctorParameters=function(){return[{type:r.ModalService},{type:r.NotificationService},{type:r.DataService},{type:r.ServerConfigService},{type:o.Router},{type:o.ActivatedRoute}]};var N=function(){this.okToRun=!1,this.testDataUpdated=!1,this.runTest=new t.EventEmitter};N.decorators=[{type:t.Component,args:[{selector:"vdr-shipping-method-test-result",template:'<div\r\n    class="test-result card"\r\n    [ngClass]="{\r\n        success: testResult?.eligible === true,\r\n        error: testResult?.eligible === false,\r\n        unknown: !testResult\r\n    }"\r\n>\r\n    <div class="card-header">\r\n        {{ \'settings.test-result\' | translate }}\r\n    </div>\r\n    <div class="card-block">\r\n        <div class="result-details" [class.stale]="testDataUpdated">\r\n            <vdr-labeled-data [label]="\'settings.eligible\' | translate">\r\n                <div class="eligible-icon">\r\n                    <clr-icon\r\n                        shape="success-standard"\r\n                        class="is-solid success"\r\n                        *ngIf="testResult?.eligible"\r\n                    ></clr-icon>\r\n                    <clr-icon\r\n                        shape="ban"\r\n                        class="is-solid error"\r\n                        *ngIf="testResult?.eligible === false"\r\n                    ></clr-icon>\r\n                    <clr-icon shape="unknown-status" *ngIf="!testResult"></clr-icon>\r\n                </div>\r\n                {{ testResult?.eligible }}\r\n            </vdr-labeled-data>\r\n            <div class="price-row">\r\n                <vdr-labeled-data\r\n                    [label]="\'common.price\' | translate"\r\n                    *ngIf="testResult?.quote?.price != null"\r\n                >\r\n                    {{ testResult.quote?.price | localeCurrency: currencyCode }}\r\n                </vdr-labeled-data>\r\n                <vdr-labeled-data\r\n                    [label]="\'common.price-with-tax\' | translate"\r\n                    *ngIf="testResult?.quote?.priceWithTax != null"\r\n                >\r\n                    {{ testResult.quote?.priceWithTax | localeCurrency: currencyCode }}\r\n                </vdr-labeled-data>\r\n            </div>\r\n            <vdr-object-tree\r\n                *ngIf="testResult?.quote?.metadata"\r\n                [value]="testResult?.quote?.metadata"\r\n            ></vdr-object-tree>\r\n        </div>\r\n    </div>\r\n    <div class="card-footer">\r\n        <button class="btn btn-secondary" (click)="runTest.emit()" [disabled]="!okToRun">\r\n            {{ \'settings.test-shipping-method\' | translate }}\r\n        </button>\r\n    </div>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".test-result.success .card-block{background-color:var(--color-success-100)}.test-result.error .card-block{background-color:var(--color-error-100)}.test-result.unknown .card-block{background-color:var(--color-component-bg-100)}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.eligible-icon{display:inline-block}.eligible-icon .success{color:var(--color-success-500)}.eligible-icon .error{color:var(--color-error-500)}.price-row{display:flex}.price-row>:not(:first-child){margin-left:24px}"]}]}],N.propDecorators={testResult:[{type:t.Input}],okToRun:[{type:t.Input}],testDataUpdated:[{type:t.Input}],currencyCode:[{type:t.Input}],runTest:[{type:t.Output}]};var $=function(e){function t(t,n,o,i,s,l,c){var d=e.call(this,n,t,o,s)||this;return d.changeDetector=i,d.dataService=s,d.formBuilder=l,d.notificationService=c,d.updatePermission=[r.Permission.UpdateSettings,r.Permission.UpdateTaxCategory],d.detailForm=d.formBuilder.group({name:["",a.Validators.required],isDefault:!1}),d}return p(t,e),t.prototype.ngOnInit=function(){this.init(),this.taxCategory$=this.entity$},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.saveButtonEnabled=function(){return this.detailForm.dirty&&this.detailForm.valid},t.prototype.create=function(){var e=this;if(this.detailForm.dirty){var t=this.detailForm.value,r={name:t.name,isDefault:t.isDefault};this.dataService.settings.createTaxCategory(r).subscribe((function(t){e.notificationService.success(i.marker("common.notify-create-success"),{entity:"TaxCategory"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.createTaxCategory.id],{relativeTo:e.route})}),(function(t){e.notificationService.error(i.marker("common.notify-create-error"),{entity:"TaxCategory"})}))}},t.prototype.save=function(){var e=this;if(this.detailForm.dirty){var t=this.detailForm.value;this.taxCategory$.pipe(n.take(1),n.mergeMap((function(r){var n={id:r.id,name:t.name,isDefault:t.isDefault};return e.dataService.settings.updateTaxCategory(n)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-update-success"),{entity:"TaxCategory"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck()}),(function(t){e.notificationService.error(i.marker("common.notify-update-error"),{entity:"TaxCategory"})}))}},t.prototype.setFormValues=function(e,t){this.detailForm.patchValue({name:e.name,isDefault:e.isDefault})},t}(r.BaseDetailComponent);$.decorators=[{type:t.Component,args:[{selector:"vdr-tax-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="tax-category-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="!saveButtonEnabled()"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                [disabled]="!saveButtonEnabled()"\r\n                *vdrIfPermissions="updatePermission"\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm">\r\n    <vdr-form-field [label]="\'common.name\' | translate" for="name">\r\n        <input\r\n            id="name"\r\n            type="text"\r\n            formControlName="name"\r\n            [readonly]="!(updatePermission | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'common.default-tax-category\' | translate" for="isDefault">\r\n        <clr-toggle-wrapper>\r\n            <input\r\n                type="checkbox"\r\n                clrToggle\r\n                id="isDefault"\r\n                [vdrDisabled]="!(updatePermission | hasPermission)"\r\n                formControlName="isDefault"\r\n            />\r\n        </clr-toggle-wrapper>\r\n    </vdr-form-field>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],$.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var O=function(){function e(e,t,r){this.dataService=e,this.notificationService=t,this.modalService=r,this.queryResult=this.dataService.settings.getTaxCategories(),this.taxCategories$=this.queryResult.mapStream((function(e){return e.taxCategories}))}return e.prototype.deleteTaxCategory=function(e){var t=this;return this.modalService.dialog({title:i.marker("settings.confirm-delete-tax-category"),body:e.name,buttons:[{type:"secondary",label:i.marker("common.cancel")},{type:"danger",label:i.marker("common.delete"),returnValue:!0}]}).pipe(n.switchMap((function(r){return r?t.dataService.settings.deleteTaxCategory(e.id):l.EMPTY})),n.map((function(e){return e.deleteTaxCategory}))).subscribe((function(e){e.result===r.DeletionResult.DELETED?(t.notificationService.success(i.marker("common.notify-delete-success"),{entity:"TaxRate"}),t.queryResult.ref.refetch()):t.notificationService.error(e.message||i.marker("common.notify-delete-error"),{entity:"TaxRate"})}),(function(e){t.notificationService.error(i.marker("common.notify-delete-error"),{entity:"TaxRate"})}))},e}();O.decorators=[{type:t.Component,args:[{selector:"vdr-tax-list",template:'<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="tax-category-list"></vdr-action-bar-items>\r\n        <a class="btn btn-primary" [routerLink]="[\'./create\']" *vdrIfPermissions="[\'CreateSettings\', \'CreateTaxCategory\']">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'settings.create-new-tax-category\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table [items]="taxCategories$ | async">\r\n    <vdr-dt-column>{{ \'common.name\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-taxCategory="item">\r\n        <td class="left align-middle">{{ taxCategory.name }}</td>\r\n        <td class="left align-middle">\r\n            <vdr-chip *ngIf="taxCategory.isDefault">{{ \'common.default-tax-category\' | translate }}</vdr-chip>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', taxCategory.id]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deleteTaxCategory(taxCategory)"\r\n                        [disabled]="!([\'DeleteSettings\', \'DeleteTaxCategory\'] | hasPermission)"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],O.ctorParameters=function(){return[{type:r.DataService},{type:r.NotificationService},{type:r.ModalService}]};var L=function(e){function t(t,n,o,i,s,l,c){var d=e.call(this,n,t,o,s)||this;return d.changeDetector=i,d.dataService=s,d.formBuilder=l,d.notificationService=c,d.updatePermission=[r.Permission.UpdateSettings,r.Permission.UpdateTaxRate],d.detailForm=d.formBuilder.group({name:["",a.Validators.required],enabled:[!0],value:[0,a.Validators.required],taxCategoryId:[""],zoneId:[""],customerGroupId:[""]}),d}return p(t,e),t.prototype.ngOnInit=function(){this.init(),this.taxCategories$=this.dataService.settings.getTaxCategories().mapSingle((function(e){return e.taxCategories})),this.zones$=this.dataService.settings.getZones().mapSingle((function(e){return e.zones}))},t.prototype.ngOnDestroy=function(){this.destroy()},t.prototype.saveButtonEnabled=function(){return this.detailForm.dirty&&this.detailForm.valid},t.prototype.create=function(){var e=this;if(this.detailForm.dirty){var t=this.detailForm.value,r={name:t.name,enabled:t.enabled,value:t.value,categoryId:t.taxCategoryId,zoneId:t.zoneId,customerGroupId:t.customerGroupId};this.dataService.settings.createTaxRate(r).subscribe((function(t){e.notificationService.success(i.marker("common.notify-create-success"),{entity:"TaxRate"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck(),e.router.navigate(["../",t.createTaxRate.id],{relativeTo:e.route})}),(function(t){e.notificationService.error(i.marker("common.notify-create-error"),{entity:"TaxRate"})}))}},t.prototype.save=function(){var e=this;if(this.detailForm.dirty){var t=this.detailForm.value;this.entity$.pipe(n.take(1),n.mergeMap((function(r){var n={id:r.id,name:t.name,enabled:t.enabled,value:t.value,categoryId:t.taxCategoryId,zoneId:t.zoneId,customerGroupId:t.customerGroupId};return e.dataService.settings.updateTaxRate(n)}))).subscribe((function(t){e.notificationService.success(i.marker("common.notify-update-success"),{entity:"TaxRate"}),e.detailForm.markAsPristine(),e.changeDetector.markForCheck()}),(function(t){e.notificationService.error(i.marker("common.notify-update-error"),{entity:"TaxRate"})}))}},t.prototype.setFormValues=function(e,t){this.detailForm.patchValue({name:e.name,enabled:e.enabled,value:e.value,taxCategoryId:e.category?e.category.id:"",zoneId:e.zone?e.zone.id:"",customerGroupId:e.customerGroup?e.customerGroup.id:""})},t}(r.BaseDetailComponent);L.decorators=[{type:t.Component,args:[{selector:"vdr-tax-rate-detail",template:'<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <vdr-entity-info [entity]="entity$ | async"></vdr-entity-info>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="tax-rate-detail"></vdr-action-bar-items>\r\n        <button\r\n            class="btn btn-primary"\r\n            *ngIf="isNew$ | async; else updateButton"\r\n            (click)="create()"\r\n            [disabled]="!saveButtonEnabled()"\r\n        >\r\n            {{ \'common.create\' | translate }}\r\n        </button>\r\n        <ng-template #updateButton>\r\n            <button\r\n                class="btn btn-primary"\r\n                (click)="save()"\r\n                [disabled]="!saveButtonEnabled()"\r\n                *vdrIfPermissions="updatePermission"\r\n            >\r\n                {{ \'common.update\' | translate }}\r\n            </button>\r\n        </ng-template>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<form class="form" [formGroup]="detailForm">\r\n    <vdr-form-field [label]="\'common.name\' | translate" for="name">\r\n        <input\r\n            id="name"\r\n            type="text"\r\n            formControlName="name"\r\n            [readonly]="!(updatePermission | hasPermission)"\r\n        />\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'common.enabled\' | translate" for="enabled">\r\n        <clr-toggle-wrapper>\r\n            <input\r\n                type="checkbox"\r\n                clrToggle\r\n                id="enabled"\r\n                formControlName="enabled"\r\n                [vdrDisabled]="!(updatePermission | hasPermission)"\r\n            />\r\n        </clr-toggle-wrapper>\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.rate\' | translate" for="value">\r\n        <vdr-affixed-input suffix="%">\r\n            <input\r\n                id="value"\r\n                type="number"\r\n                step="0.1"\r\n                formControlName="value"\r\n                [readonly]="!(updatePermission | hasPermission)"\r\n            />\r\n        </vdr-affixed-input>\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.tax-category\' | translate" for="taxCategoryId">\r\n        <select\r\n            clrSelect\r\n            name="taxCategoryId"\r\n            formControlName="taxCategoryId"\r\n            [vdrDisabled]="!(updatePermission | hasPermission)"\r\n        >\r\n            <option *ngFor="let taxCategory of taxCategories$ | async" [value]="taxCategory.id">\r\n                {{ taxCategory.name }}\r\n            </option>\r\n        </select>\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]="\'settings.zone\' | translate" for="zoneId">\r\n        <select\r\n            clrSelect\r\n            name="zoneId"\r\n            formControlName="zoneId"\r\n            [vdrDisabled]="!(updatePermission | hasPermission)"\r\n        >\r\n            <option *ngFor="let zone of zones$ | async" [value]="zone.id">{{ zone.name }}</option>\r\n        </select>\r\n    </vdr-form-field>\r\n</form>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],L.ctorParameters=function(){return[{type:o.Router},{type:o.ActivatedRoute},{type:r.ServerConfigService},{type:t.ChangeDetectorRef},{type:r.DataService},{type:a.FormBuilder},{type:r.NotificationService}]};var z=function(e){function t(t,r,n,a,o){var i=e.call(this,a,o)||this;return i.modalService=t,i.notificationService=r,i.dataService=n,e.prototype.setQueryFn.call(i,(function(){for(var e,t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return(e=i.dataService.settings).getTaxRates.apply(e,f(t))}),(function(e){return e.taxRates})),i}return p(t,e),t.prototype.deleteTaxRate=function(e){var t=this;return this.modalService.dialog({title:i.marker("settings.confirm-delete-tax-rate"),body:e.name,buttons:[{type:"secondary",label:i.marker("common.cancel")},{type:"danger",label:i.marker("common.delete"),returnValue:!0}]}).pipe(n.switchMap((function(r){return r?t.dataService.settings.deleteTaxRate(e.id):l.EMPTY})),n.map((function(e){return e.deleteTaxRate}))).subscribe((function(e){e.result===r.DeletionResult.DELETED?(t.notificationService.success(i.marker("common.notify-delete-success"),{entity:"TaxRate"}),t.refresh()):t.notificationService.error(e.message||i.marker("common.notify-delete-error"),{entity:"TaxRate"})}),(function(e){t.notificationService.error(i.marker("common.notify-delete-error"),{entity:"TaxRate"})}))},t}(r.BaseListComponent);z.decorators=[{type:t.Component,args:[{selector:"vdr-tax-rate-list",template:'<vdr-action-bar>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="tax-rate-list"></vdr-action-bar-items>\r\n        <a class="btn btn-primary" [routerLink]="[\'./create\']" *vdrIfPermissions="[\'CreateSettings\', \'CreateTaxRate\']">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'settings.create-new-tax-rate\' | translate }}\r\n        </a>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]="items$ | async"\r\n    [itemsPerPage]="itemsPerPage$ | async"\r\n    [totalItems]="totalItems$ | async"\r\n    [currentPage]="currentPage$ | async"\r\n    (pageChange)="setPageNumber($event)"\r\n    (itemsPerPageChange)="setItemsPerPage($event)"\r\n>\r\n    <vdr-dt-column>{{ \'common.name\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'settings.tax-category\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'settings.zone\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'settings.tax-rate\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-taxRate="item">\r\n        <td class="left align-middle">{{ taxRate.name }}</td>\r\n        <td class="left align-middle">{{ taxRate.category.name }}</td>\r\n        <td class="left align-middle">{{ taxRate.zone.name }}</td>\r\n        <td class="left align-middle">{{ taxRate.value }}%</td>\r\n        <td class="right align-middle">\r\n            <vdr-table-row-action\r\n                iconShape="edit"\r\n                [label]="\'common.edit\' | translate"\r\n                [linkTo]="[\'./\', taxRate.id]"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <vdr-dropdown>\r\n                <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                    {{ \'common.actions\' | translate }}\r\n                    <clr-icon shape="caret down"></clr-icon>\r\n                </button>\r\n                <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                    <button\r\n                        type="button"\r\n                        class="delete-button"\r\n                        (click)="deleteTaxRate(taxRate)"\r\n                        [disabled]="!([\'DeleteSettings\', \'DeleteTaxRate\'] | hasPermission)"\r\n                        vdrDropdownItem\r\n                    >\r\n                        <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                        {{ \'common.delete\' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}],z.ctorParameters=function(){return[{type:r.ModalService},{type:r.NotificationService},{type:r.DataService},{type:o.Router},{type:o.ActivatedRoute}]};var B=function(){function e(e,r,n){this.formBuilder=e,this.dataService=r,this.localStorageService=n,this.addressChange=new t.EventEmitter}return e.prototype.ngOnInit=function(){var e=this;this.availableCountries$=this.dataService.settings.getAvailableCountries().mapSingle((function(e){return e.countries.items}));var t=this.localStorageService.getForCurrentLocation("shippingTestAddress"),r=t||{city:"",countryCode:"",postalCode:"",province:""};this.addressChange.emit(r),this.form=this.formBuilder.group(r),this.subscription=this.form.valueChanges.subscribe((function(t){e.localStorageService.setForCurrentLocation("shippingTestAddress",t),e.addressChange.emit(t)}))},e.prototype.ngOnDestroy=function(){this.subscription&&this.subscription.unsubscribe()},e}();B.decorators=[{type:t.Component,args:[{selector:"vdr-test-address-form",template:'<div class="card">\r\n    <div class="card-header">\r\n        {{ \'settings.test-address\' | translate }}\r\n    </div>\r\n    <div class="card-block">\r\n        <form [formGroup]="form">\r\n            <clr-input-container>\r\n                <label>{{ \'customer.city\' | translate }}</label>\r\n                <input formControlName="city" type="text" clrInput />\r\n            </clr-input-container>\r\n            <clr-input-container>\r\n                <label>{{ \'customer.province\' | translate }}</label>\r\n                <input formControlName="province" type="text" clrInput />\r\n            </clr-input-container>\r\n            <clr-input-container>\r\n                <label>{{ \'customer.postal-code\' | translate }}</label>\r\n                <input formControlName="postalCode" type="text" clrInput />\r\n            </clr-input-container>\r\n            <clr-input-container>\r\n                <label>{{ \'customer.country\' | translate }}</label>\r\n                <select name="countryCode" formControlName="countryCode" clrInput clrSelect>\r\n                    <option *ngFor="let country of availableCountries$ | async" [value]="country.code">\r\n                        {{ country.name }}\r\n                    </option>\r\n                </select>\r\n            </clr-input-container>\r\n        </form>\r\n    </div>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:["clr-input-container{margin-bottom:12px}"]}]}],B.ctorParameters=function(){return[{type:a.FormBuilder},{type:r.DataService},{type:r.LocalStorageService}]},B.propDecorators={addressChange:[{type:t.Output}]};var j=function(){function e(e,r){this.dataService=e,this.localStorageService=r,this.orderLinesChange=new t.EventEmitter,this.lines=[]}return Object.defineProperty(e.prototype,"subTotal",{get:function(){return this.lines.reduce((function(e,t){return e+t.unitPriceWithTax*t.quantity}),0)},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.lines=this.loadFromLocalStorage(),this.lines&&this.orderLinesChange.emit(this.lines),this.dataService.settings.getActiveChannel("cache-first").single$.subscribe((function(t){e.currencyCode=t.activeChannel.currencyCode}))},e.prototype.selectResult=function(e){e&&this.addToLines(e)},e.prototype.addToLines=function(e){var t,r;this.lines.find((function(t){return t.id===e.productVariantId}))||(this.lines.push({id:e.productVariantId,name:e.productVariantName,preview:null!==(r=null===(t=e.productAsset)||void 0===t?void 0:t.preview)&&void 0!==r?r:"",quantity:1,sku:e.sku,unitPriceWithTax:"SinglePrice"===e.priceWithTax.__typename&&e.priceWithTax.value||0}),this.persistToLocalStorage(),this.orderLinesChange.emit(this.lines))},e.prototype.updateQuantity=function(){this.persistToLocalStorage(),this.orderLinesChange.emit(this.lines)},e.prototype.removeLine=function(e){this.lines=this.lines.filter((function(t){return t.id!==e.id})),this.persistToLocalStorage(),this.orderLinesChange.emit(this.lines)},e.prototype.persistToLocalStorage=function(){this.localStorageService.setForCurrentLocation("shippingTestOrder",this.lines)},e.prototype.loadFromLocalStorage=function(){return this.localStorageService.getForCurrentLocation("shippingTestOrder")||[]},e}();j.decorators=[{type:t.Component,args:[{selector:"vdr-test-order-builder",template:'<div class="card">\r\n    <div class="card-header">\r\n        {{ \'settings.test-order\' | translate }}\r\n    </div>\r\n    <table class="order-table table" *ngIf="lines.length; else emptyPlaceholder">\r\n        <thead>\r\n            <tr>\r\n                <th></th>\r\n                <th>{{ \'order.product-name\' | translate }}</th>\r\n                <th>{{ \'order.product-sku\' | translate }}</th>\r\n                <th>{{ \'order.unit-price\' | translate }}</th>\r\n                <th>{{ \'order.quantity\' | translate }}</th>\r\n                <th>{{ \'order.total\' | translate }}</th>\r\n            </tr>\r\n        </thead>\r\n        <tr *ngFor="let line of lines" class="order-line">\r\n            <td class="align-middle thumb">\r\n                <img [src]="line.preview + \'?preset=tiny\'" />\r\n            </td>\r\n            <td class="align-middle name">{{ line.name }}</td>\r\n            <td class="align-middle sku">{{ line.sku }}</td>\r\n            <td class="align-middle unit-price">\r\n                {{ line.unitPriceWithTax | localeCurrency: currencyCode }}\r\n            </td>\r\n            <td class="align-middle quantity">\r\n                <input\r\n                    [(ngModel)]="line.quantity"\r\n                    (change)="updateQuantity()"\r\n                    type="number"\r\n                    max="9999"\r\n                    min="1"\r\n                />\r\n                <button class="icon-button" (click)="removeLine(line)">\r\n                    <clr-icon shape="trash"></clr-icon>\r\n                </button>\r\n            </td>\r\n            <td class="align-middle total">\r\n                {{ (line.unitPriceWithTax * line.quantity) | localeCurrency: currencyCode }}\r\n            </td>\r\n        </tr>\r\n        <tr class="sub-total">\r\n            <td class="left">{{ \'order.sub-total\' | translate }}</td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td>{{ subTotal | localeCurrency: currencyCode }}</td>\r\n        </tr>\r\n    </table>\r\n\r\n    <ng-template #emptyPlaceholder>\r\n        <div class="card-block empty-placeholder">\r\n            <div class="empty-text">{{ \'settings.add-products-to-test-order\' | translate }}</div>\r\n            <clr-icon shape="arrow" dir="down" size="96"></clr-icon>\r\n        </div>\r\n    </ng-template>\r\n    <div class="card-block">\r\n        <vdr-product-selector (productSelected)="selectResult($event)"> </vdr-product-selector>\r\n    </div>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".empty-placeholder{color:var(--color-grey-400);text-align:center}.empty-text{font-size:22px}"]}]}],j.ctorParameters=function(){return[{type:r.DataService},{type:r.LocalStorageService}]},j.propDecorators={orderLinesChange:[{type:t.Output}]};var E=function(){function e(){}return e.prototype.cancel=function(){this.resolveWith()},e.prototype.save=function(){this.resolveWith(this.zone.name)},e}();E.decorators=[{type:t.Component,args:[{selector:"vdr-zone-detail-dialog",template:'<ng-template vdrDialogTitle>\r\n    <span *ngIf="zone.id">{{ \'settings.update-zone\' | translate }}</span>\r\n    <span *ngIf="!zone.id">{{ \'settings.create-zone\' | translate }}</span>\r\n</ng-template>\r\n\r\n<vdr-form-field [label]="\'common.name\' | translate" for="name">\r\n    <input id="name" type="text" [(ngModel)]="zone.name" [readonly]="!([\'UpdateSettings\', \'UpdateZone\'] | hasPermission)" />\r\n</vdr-form-field>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type="button" class="btn" (click)="cancel()">{{ \'common.cancel\' | translate }}</button>\r\n    <button type="submit" (click)="save()" [disabled]="!zone.name" class="btn btn-primary">\r\n        <span *ngIf="zone.id">{{ \'settings.update-zone\' | translate }}</span>\r\n        <span *ngIf="!zone.id">{{ \'settings.create-zone\' | translate }}</span>\r\n    </button>\r\n</ng-template>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[""]}]}];var V=function(){function e(e,t,r,n,a){this.dataService=e,this.notificationService=t,this.modalService=r,this.route=n,this.router=a,this.selectedMemberIds=[]}return e.prototype.ngOnInit=function(){var e=this;this.zones$=this.dataService.settings.getZones().mapStream((function(e){return e.zones}));var t=this.route.paramMap.pipe(n.map((function(e){return e.get("contents")})),n.distinctUntilChanged(),n.tap((function(){return e.selectedMemberIds=[]})));this.activeZone$=l.combineLatest(this.zones$,t).pipe(n.map((function(e){var t=g(e,2),r=t[0],n=t[1];if(n)return r.find((function(e){return e.id===n}))})))},e.prototype.create=function(){var e=this;this.modalService.fromComponent(E,{locals:{zone:{name:""}}}).pipe(n.switchMap((function(t){return t?e.dataService.settings.createZone({name:t,memberIds:[]}):l.EMPTY})),n.switchMap((function(){return e.dataService.settings.getZones().single$}))).subscribe((function(){e.notificationService.success(i.marker("common.notify-create-success"),{entity:"Zone"})}),(function(t){e.notificationService.error(i.marker("common.notify-create-error"),{entity:"Zone"})}))},e.prototype.delete=function(e){var t=this;this.modalService.dialog({title:i.marker("catalog.confirm-delete-zone"),buttons:[{type:"secondary",label:i.marker("common.cancel")},{type:"danger",label:i.marker("common.delete"),returnValue:!0}]}).pipe(n.switchMap((function(r){return r?t.dataService.settings.deleteZone(e):l.EMPTY})),n.switchMap((function(e){return e.deleteZone.result===r.DeletionResult.DELETED?t.dataService.settings.getZones().mapSingle((function(){return{errorMessage:!1}})):l.of({errorMessage:e.deleteZone.message})}))).subscribe((function(e){"string"==typeof e.errorMessage?t.notificationService.error(e.errorMessage):t.notificationService.success(i.marker("common.notify-delete-success"),{entity:"Zone"})}),(function(e){t.notificationService.error(i.marker("common.notify-delete-error"),{entity:"Zone"})}))},e.prototype.update=function(e){var t=this;this.modalService.fromComponent(E,{locals:{zone:e}}).pipe(n.switchMap((function(r){return r?t.dataService.settings.updateZone({id:e.id,name:r}):l.EMPTY}))).subscribe((function(){t.notificationService.success(i.marker("common.notify-update-success"),{entity:"Zone"})}),(function(e){t.notificationService.error(i.marker("common.notify-update-error"),{entity:"Zone"})}))},e.prototype.closeMembers=function(){var e=Object.assign({},this.route.snapshot.params);delete e.contents,this.router.navigate(["./",e],{relativeTo:this.route,queryParamsHandling:"preserve"})},e.prototype.addToZone=function(e){var t=this;this.modalService.fromComponent(m,{locals:{zoneName:e.name,currentMembers:e.members},size:"md"}).pipe(n.switchMap((function(r){return r?t.dataService.settings.addMembersToZone(e.id,r).pipe(n.mapTo(r)):l.EMPTY}))).subscribe({next:function(r){t.notificationService.success(i.marker("settings.add-countries-to-zone-success"),{countryCount:r.length,zoneName:e.name})},error:function(e){t.notificationService.error(e)}})},e.prototype.removeFromZone=function(e,t){var r=this;this.dataService.settings.removeMembersFromZone(e.id,t).subscribe({complete:function(){r.notificationService.success(i.marker("settings.remove-countries-from-zone-success"),{countryCount:t.length,zoneName:e.name})}})},e}();V.decorators=[{type:t.Component,args:[{selector:"vdr-zone-list",template:'<vdr-action-bar>\r\n    <vdr-ab-left> </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId="zone-list"></vdr-action-bar-items>\r\n        <button class="btn btn-primary" *vdrIfPermissions="[\'CreateSettings\', \'CreateZone\']" (click)="create()">\r\n            <clr-icon shape="plus"></clr-icon>\r\n            {{ \'settings.create-new-zone\' | translate }}\r\n        </button>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n<div class="zone-wrapper">\r\n    <table class="table zone-list">\r\n        <tbody>\r\n            <tr *ngFor="let zone of zones$ | async" [class.active]="zone.id === (activeZone$ | async)?.id">\r\n                <td class="left align-middle"><vdr-entity-info [entity]="zone"></vdr-entity-info></td>\r\n                <td class="left align-middle"><vdr-chip [colorFrom]="zone.name">{{ zone.name }}</vdr-chip></td>\r\n                <td class="text-right align-middle">\r\n                    <a\r\n                        class="btn btn-link btn-sm"\r\n                        [routerLink]="[\'./\', { contents: zone.id }]"\r\n                        queryParamsHandling="preserve"\r\n                    >\r\n                        <clr-icon shape="view-list"></clr-icon>\r\n                        {{ \'settings.view-zone-members\' | translate }}\r\n                    </a>\r\n                </td>\r\n                <td class="align-middle">\r\n                    <button class="btn btn-link btn-sm" (click)="update(zone)">\r\n                        <clr-icon shape="edit"></clr-icon>\r\n                        {{ \'common.edit\' | translate }}\r\n                    </button>\r\n                </td>\r\n                <td class="align-middle">\r\n                    <vdr-dropdown>\r\n                        <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                            {{ \'common.actions\' | translate }}\r\n                            <clr-icon shape="caret down"></clr-icon>\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                            <button\r\n                                class="button"\r\n                                vdrDropdownItem\r\n                                (click)="delete(zone.id)"\r\n                                [disabled]="!([\'DeleteSettings\', \'DeleteZone\'] | hasPermission)"\r\n                            >\r\n                                <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                                {{ \'common.delete\' | translate }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <div class="zone-members" [class.expanded]="activeZone$ | async">\r\n        <ng-container *ngIf="activeZone$ | async as activeZone">\r\n            <vdr-zone-member-list\r\n                [members]="activeZone.members"\r\n                [selectedMemberIds]="selectedMemberIds"\r\n                (selectionChange)="selectedMemberIds = $event"\r\n            >\r\n                <div *vdrZoneMemberListHeader>\r\n                    <div class="flex">\r\n                        <div class="header-title-row">\r\n                            {{ activeZone.name }} ({{ activeZone.members.length }})\r\n                        </div>\r\n                        <div class="flex-spacer"></div>\r\n                        <button type="button" class="close-button" (click)="closeMembers()">\r\n                            <clr-icon shape="close"></clr-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class="controls">\r\n                        <vdr-dropdown>\r\n                            <button\r\n                                type="button"\r\n                                class="btn btn-secondary btn-sm"\r\n                                vdrDropdownTrigger\r\n                                [disabled]="selectedMemberIds.length === 0"\r\n                            >\r\n                                {{ \'common.with-selected\' | translate }}\r\n                                <clr-icon shape="caret down"></clr-icon>\r\n                            </button>\r\n                            <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                                <button\r\n                                    type="button"\r\n                                    class="delete-button"\r\n                                    (click)="removeFromZone(activeZone, selectedMemberIds)"\r\n                                    vdrDropdownItem\r\n                                    [disabled]="!([\'UpdateSettings\', \'UpdateZone\'] | hasPermission)"\r\n                                >\r\n                                    <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                                    {{ \'settings.remove-from-zone\' | translate }}\r\n                                </button>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                        <button class="btn btn-secondary btn-sm" (click)="addToZone(activeZone)">\r\n                            {{ \'settings.add-countries-to-zone\' | translate: { zoneName: activeZone.name } }}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div *vdrZoneMemberControls="let member = member">\r\n                    <vdr-dropdown>\r\n                        <button type="button" class="btn btn-link btn-sm" vdrDropdownTrigger>\r\n                            {{ \'common.actions\' | translate }}\r\n                            <clr-icon shape="caret down"></clr-icon>\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition="bottom-right">\r\n                            <a\r\n                                type="button"\r\n                                [routerLink]="[\'/settings\', \'countries\', member.id]"\r\n                                vdrDropdownItem\r\n                            >\r\n                                <clr-icon shape="edit"></clr-icon>\r\n                                {{ \'common.edit\' | translate }}\r\n                            </a>\r\n                            <button\r\n                                type="button"\r\n                                class="delete-button"\r\n                                (click)="removeFromZone(activeZone, [member.id])"\r\n                                vdrDropdownItem\r\n                                [disabled]="!([\'UpdateSettings\', \'UpdateZone\'] | hasPermission)"\r\n                            >\r\n                                <clr-icon shape="trash" class="is-danger"></clr-icon>\r\n                                {{ \'settings.remove-from-zone\' | translate }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-zone-member-list>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".zone-wrapper{display:flex;height:calc(100% - 50px)}.zone-wrapper .zone-list{flex:1;overflow:auto;margin-top:0}.zone-wrapper .zone-list tr.active{background-color:var(--color-component-bg-200)}.zone-members{height:100%;width:0;opacity:0;visibility:hidden;overflow:auto;transition:width .3s,opacity .2s .3s,visibility 0s .3s}.zone-members.expanded{width:40vw;visibility:visible;opacity:1;padding-left:12px}.zone-members .close-button{margin:0;background:none;border:none;cursor:pointer}.zone-members ::ng-deep table.table{margin-top:0}.zone-members ::ng-deep table.table th{top:0}.zone-members .controls{display:flex;justify-content:space-between}"]}]}],V.ctorParameters=function(){return[{type:r.DataService},{type:r.NotificationService},{type:r.ModalService},{type:o.ActivatedRoute},{type:o.Router}]};var Z=function(e){this.templateRef=e};Z.decorators=[{type:t.Directive,args:[{selector:"[vdrZoneMemberControls]"}]}],Z.ctorParameters=function(){return[{type:t.TemplateRef}]};var U=function(e){this.templateRef=e};U.decorators=[{type:t.Directive,args:[{selector:"[vdrZoneMemberListHeader]"}]}],U.ctorParameters=function(){return[{type:t.TemplateRef}]};var q=function(){function e(){var e=this;this.members=[],this.selectedMemberIds=[],this.selectionChange=new t.EventEmitter,this.filterTerm="",this.isMemberSelected=function(t){return-1<e.selectedMemberIds.indexOf(t.id)}}return e.prototype.filteredMembers=function(){if(""!==this.filterTerm){var e=this.filterTerm.toLocaleLowerCase();return this.members.filter((function(t){return t.name.toLocaleLowerCase().includes(e)||t.code.toLocaleLowerCase().includes(e)}))}return this.members},e.prototype.areAllSelected=function(){return!!this.members&&this.selectedMemberIds.length===this.members.length},e.prototype.toggleSelectAll=function(){this.areAllSelected()?this.selectionChange.emit([]):this.selectionChange.emit(this.members.map((function(e){return e.id})))},e.prototype.toggleSelectMember=function(e){this.selectedMemberIds.includes(e.id)?this.selectionChange.emit(this.selectedMemberIds.filter((function(t){return t!==e.id}))):this.selectionChange.emit(f(this.selectedMemberIds,[e.id]))},e}();q.decorators=[{type:t.Component,args:[{selector:"vdr-zone-member-list",template:'<div class="members-header">\r\n    <ng-container *ngIf="headerTemplate">\r\n        <ng-container *ngTemplateOutlet="headerTemplate.templateRef"></ng-container>\r\n    </ng-container>\r\n    <input\r\n        type="text"\r\n        [placeholder]="\'settings.filter-by-member-name\' | translate"\r\n        [(ngModel)]="filterTerm"\r\n    />\r\n</div>\r\n<vdr-data-table\r\n    [items]="filteredMembers()"\r\n    [allSelected]="areAllSelected()"\r\n    [isRowSelectedFn]="([\'UpdateSettings\', \'UpdateZone\'] | hasPermission) && isMemberSelected"\r\n    (rowSelectChange)="toggleSelectMember($event)"\r\n    (allSelectChange)="toggleSelectAll()"\r\n>\r\n    <vdr-dt-column>{{ \'common.code\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'common.name\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ \'common.enabled\' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-member="item">\r\n        <td class="left align-middle">{{ member.code }}</td>\r\n        <td class="left align-middle">{{ member.name }}</td>\r\n        <td class="left align-middle">\r\n            <clr-icon\r\n                [class.is-success]="member.enabled"\r\n                [attr.shape]="member.enabled ? \'check\' : \'times\'"\r\n            ></clr-icon>\r\n        </td>\r\n        <td class="right align-middle">\r\n            <ng-container *ngIf="controlsTemplate">\r\n                <ng-container\r\n                    *ngTemplateOutlet="controlsTemplate.templateRef; context: { member: member }"\r\n                ></ng-container>\r\n            </ng-container>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".members-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:5;border-bottom:1px solid var(--color-component-border-200)}.members-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.members-header .clr-input{width:100%}"]}]}],q.propDecorators={members:[{type:t.Input}],selectedMemberIds:[{type:t.Input}],selectionChange:[{type:t.Output}],headerTemplate:[{type:t.ContentChild,args:[U]}],controlsTemplate:[{type:t.ContentChild,args:[Z]}]};var G=function(e){function t(t,r){return e.call(this,t,{__typename:"Administrator",id:"",createdAt:"",updatedAt:"",emailAddress:"",firstName:"",lastName:"",user:{roles:[]}},(function(e){return r.administrator.getAdministrator(e).mapStream((function(e){return e.administrator}))}))||this}return p(t,e),t}(r.BaseEntityResolver);G.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new G(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:G,providedIn:"root"}),G.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],G.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var _=function(e){function t(t,n){return e.call(this,t,{__typename:"Channel",id:"",createdAt:"",updatedAt:"",code:"",token:"",pricesIncludeTax:!1,currencyCode:r.CurrencyCode.USD,defaultLanguageCode:r.getDefaultUiLanguage(),defaultShippingZone:{},defaultTaxZone:{}},(function(e){return n.settings.getChannel(e).mapStream((function(e){return e.channel}))}))||this}return p(t,e),t}(r.BaseEntityResolver);_.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new _(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:_,providedIn:"root"}),_.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],_.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var H=function(e){function t(t,r){return e.call(this,t,{__typename:"Country",id:"",createdAt:"",updatedAt:"",code:"",name:"",enabled:!1,translations:[]},(function(e){return r.settings.getCountry(e).mapStream((function(e){return e.country}))}))||this}return p(t,e),t}(r.BaseEntityResolver);H.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new H(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:H,providedIn:"root"}),H.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],H.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var W=function(e){function t(t,r){return e.call(this,t,{},(function(){return r.settings.getGlobalSettings().mapStream((function(e){return e.globalSettings}))}))||this}return p(t,e),t}(r.BaseEntityResolver);W.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new W(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:W,providedIn:"root"}),W.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],W.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var Y=function(e){function t(t,r){return e.call(this,t,{__typename:"PaymentMethod",id:"",createdAt:"",updatedAt:"",name:"",code:"",description:"",enabled:!0,checker:void 0,handler:void 0},(function(e){return r.settings.getPaymentMethod(e).mapStream((function(e){return e.paymentMethod}))}))||this}return p(t,e),t}(r.BaseEntityResolver);Y.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Y(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:Y,providedIn:"root"}),Y.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Y.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var K=function(e){function t(t,r){return e.call(this,t,{__typename:"Administrator",id:"",createdAt:"",updatedAt:"",emailAddress:"",firstName:"",lastName:"",user:{roles:[]}},(function(e){return r.administrator.getActiveAdministrator().mapStream((function(e){return e.activeAdministrator}))}))||this}return p(t,e),t}(r.BaseEntityResolver);K.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new K(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:K,providedIn:"root"}),K.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],K.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var Q=function(e){function t(t,r){return e.call(this,t,{__typename:"Role",id:"",createdAt:"",updatedAt:"",code:"",description:"",permissions:[],channels:[]},(function(e){return r.administrator.getRole(e).mapStream((function(e){return e.role}))}))||this}return p(t,e),t}(r.BaseEntityResolver);Q.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new Q(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:Q,providedIn:"root"}),Q.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],Q.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var J=function(e){function t(t,r){return e.call(this,t,{__typename:"ShippingMethod",createdAt:"",updatedAt:"",id:"",code:"",name:"",description:"",fulfillmentHandlerCode:void 0,checker:void 0,calculator:void 0,translations:[]},(function(e){return r.shippingMethod.getShippingMethod(e).mapStream((function(e){return e.shippingMethod}))}))||this}return p(t,e),t}(r.BaseEntityResolver);J.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new J(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:J,providedIn:"root"}),J.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],J.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var X=function(e){function t(t,r){return e.call(this,t,{__typename:"TaxCategory",id:"",createdAt:"",updatedAt:"",name:"",isDefault:!1},(function(e){return r.settings.getTaxCategory(e).mapStream((function(e){return e.taxCategory}))}))||this}return p(t,e),t}(r.BaseEntityResolver);X.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new X(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:X,providedIn:"root"}),X.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],X.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var ee=function(e){function t(t,r){return e.call(this,t,{__typename:"TaxRate",id:"",createdAt:"",updatedAt:"",name:"",value:0,enabled:!0,category:{},zone:{},customerGroup:null},(function(e){return r.settings.getTaxRate(e).mapStream((function(e){return e.taxRate}))}))||this}return p(t,e),t}(r.BaseEntityResolver);ee.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new ee(t.ɵɵinject(o.Router),t.ɵɵinject(r.DataService))},token:ee,providedIn:"root"}),ee.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],ee.ctorParameters=function(){return[{type:o.Router},{type:r.DataService}]};var te={breadcrumb:i.marker("breadcrumb.profile")},re={breadcrumb:i.marker("breadcrumb.administrators")},ne={breadcrumb:Se},ae={breadcrumb:i.marker("breadcrumb.channels")},oe={breadcrumb:ke},ie={breadcrumb:i.marker("breadcrumb.roles")},se={breadcrumb:De},le={breadcrumb:i.marker("breadcrumb.tax-categories")},ce={breadcrumb:Pe},de={breadcrumb:i.marker("breadcrumb.tax-rates")},me={breadcrumb:Fe},ue={breadcrumb:i.marker("breadcrumb.countries")},pe={breadcrumb:Ie},ve={breadcrumb:i.marker("breadcrumb.zones")},ge={breadcrumb:i.marker("breadcrumb.shipping-methods")},fe={breadcrumb:we},he={breadcrumb:i.marker("breadcrumb.payment-methods")},be={breadcrumb:xe},ye={breadcrumb:i.marker("breadcrumb.global-settings")},Ce=[{path:"profile",component:w,resolve:r.createResolveData(K),canDeactivate:[r.CanDeactivateDetailGuard],data:te},{path:"administrators",component:b,data:re},{path:"administrators/:id",component:h,resolve:r.createResolveData(G),canDeactivate:[r.CanDeactivateDetailGuard],data:ne},{path:"channels",component:C,data:ae},{path:"channels/:id",component:y,resolve:r.createResolveData(_),canDeactivate:[r.CanDeactivateDetailGuard],data:oe},{path:"roles",component:T,data:ie},{path:"roles/:id",component:x,resolve:r.createResolveData(Q),canDeactivate:[r.CanDeactivateDetailGuard],data:se},{path:"tax-categories",component:O,data:le},{path:"tax-categories/:id",component:$,resolve:r.createResolveData(X),canDeactivate:[r.CanDeactivateDetailGuard],data:ce},{path:"tax-rates",component:z,data:de},{path:"tax-rates/:id",component:L,resolve:r.createResolveData(ee),canDeactivate:[r.CanDeactivateDetailGuard],data:me},{path:"countries",component:k,data:ue},{path:"countries/:id",component:S,resolve:r.createResolveData(H),canDeactivate:[r.CanDeactivateDetailGuard],data:pe},{path:"zones",component:V,data:ve},{path:"shipping-methods",component:A,data:ge},{path:"shipping-methods/:id",component:M,resolve:r.createResolveData(J),canDeactivate:[r.CanDeactivateDetailGuard],data:fe},{path:"payment-methods",component:F,data:he},{path:"payment-methods/:id",component:P,resolve:r.createResolveData(Y),canDeactivate:[r.CanDeactivateDetailGuard],data:be},{path:"global-settings",component:D,resolve:r.createResolveData(W),canDeactivate:[r.CanDeactivateDetailGuard],data:ye}];function Se(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.administrators",getName:function(e){return e.firstName+" "+e.lastName},route:"administrators"})}function ke(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.channels",getName:function(e){return e.code},route:"channels"})}function De(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.roles",getName:function(e){return e.description},route:"roles"})}function Pe(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.tax-categories",getName:function(e){return e.name},route:"tax-categories"})}function Fe(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.tax-rates",getName:function(e){return e.name},route:"tax-rates"})}function Ie(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.countries",getName:function(e){return e.name},route:"countries"})}function we(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.shipping-methods",getName:function(e){return e.name},route:"shipping-methods"})}function xe(e,t){return r.detailBreadcrumb({entity:e.entity,id:t.id,breadcrumbKey:"breadcrumb.payment-methods",getName:function(e){return e.code},route:"payment-methods"})}var Te=function(){};Te.decorators=[{type:t.NgModule,args:[{imports:[r.SharedModule,o.RouterModule.forChild(Ce)],declarations:[O,$,b,T,x,h,I,k,S,z,L,C,y,A,M,F,P,D,j,B,N,R,V,m,q,U,Z,E,w]}]}],e.AddCountryToZoneDialogComponent=m,e.AdminDetailComponent=h,e.AdministratorListComponent=b,e.AdministratorResolver=G,e.ChannelDetailComponent=y,e.ChannelListComponent=C,e.ChannelResolver=_,e.CountryDetailComponent=S,e.CountryListComponent=k,e.CountryResolver=H,e.GlobalSettingsComponent=D,e.GlobalSettingsResolver=W,e.PaymentMethodDetailComponent=P,e.PaymentMethodListComponent=F,e.PaymentMethodResolver=Y,e.PermissionGridComponent=I,e.ProfileComponent=w,e.ProfileResolver=K,e.RoleDetailComponent=x,e.RoleListComponent=T,e.RoleResolver=Q,e.SettingsModule=Te,e.ShippingEligibilityTestResultComponent=R,e.ShippingMethodDetailComponent=M,e.ShippingMethodListComponent=A,e.ShippingMethodResolver=J,e.ShippingMethodTestResultComponent=N,e.TaxCategoryDetailComponent=$,e.TaxCategoryListComponent=O,e.TaxCategoryResolver=X,e.TaxRateDetailComponent=L,e.TaxRateListComponent=z,e.TaxRateResolver=ee,e.TestAddressFormComponent=B,e.TestOrderBuilderComponent=j,e.ZoneDetailDialogComponent=E,e.ZoneListComponent=V,e.ZoneMemberControlsDirective=Z,e.ZoneMemberListComponent=q,e.ZoneMemberListHeaderDirective=U,e.administratorBreadcrumb=Se,e.channelBreadcrumb=ke,e.countryBreadcrumb=Ie,e.paymentMethodBreadcrumb=xe,e.roleBreadcrumb=De,e.settingsRoutes=Ce,e.shippingMethodBreadcrumb=we,e.taxCategoryBreadcrumb=Pe,e.taxRateBreadcrumb=Fe,e.ɵ0=te,e.ɵ1=re,e.ɵ10=me,e.ɵ11=ue,e.ɵ12=pe,e.ɵ13=ve,e.ɵ14=ge,e.ɵ15=fe,e.ɵ16=he,e.ɵ17=be,e.ɵ18=ye,e.ɵ2=ne,e.ɵ3=ae,e.ɵ4=oe,e.ɵ5=ie,e.ɵ6=se,e.ɵ7=le,e.ɵ8=ce,e.ɵ9=de,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=vendure-admin-ui-settings.umd.min.js.map