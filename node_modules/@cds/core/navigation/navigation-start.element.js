import{__decorate as t}from"tslib";import{LitElement as o,html as e}from"lit";import{I18nService as i,createId as s,spanWrapper as a,baseStyles as n,i18n as r,property as d,state as p,querySlot as l,querySlotAll as c}from"@cds/core/internal";import h from"./navigation-start.element.scss.js";import{NAVIGATION_TEXT_WRAPPER as u,getToggleIconDirection as v,manageScreenReaderElements as g}from"./utils/index.js";const y="cds-navigation-start";class x extends o{constructor(){super(...arguments),this.i18n=i.keys.navigation,this.expandedRoot=!1,this.hasFocus=!1,this.isGroupStart=!1,this.active=!1,this.expanded=!1}connectedCallback(){super.connectedCallback(),this.id||(this.id=s())}firstUpdated(t){var o;super.firstUpdated(t);const e=null===(o=this.shadowRoot)||void 0===o?void 0:o.querySelector("button");e&&(this.focusElement=e),this.handleStartButtonText()}handleStartButtonText(){var t;a(this.childNodes),null===(t=this.querySelector("span"))||void 0===t||t.setAttribute(u,"")}render(){return e`<div class="private-host"><button aria-expanded="${this.expanded}" cds-layout="horizontal align:stretch align:vertical-center" class="private-host" id="${this.isGroupStart?this.navigationGroupId:""}" type="button"><div cds-layout="horizontal align:vertical-center"><slot @slotchange="${this.handleStartButtonText}"></slot><span class="icon-slot" cds-layout="${this.expandedRoot?"align:right":"align:left"}"><slot name="cds-icon-slot">${this.startIcon?"":e`<cds-icon size="${!this.expandedRoot&&this.isGroupStart?"xs":"sm"}" shape="${this.isGroupStart?"angle":"angle-double"}" direction="${this.toggleIconDirection}"></cds-icon>`}</slot></span></div></button></div>`}static get styles(){return[n,h]}get toggleIconDirection(){return v(this)}updated(t){super.updated(t),g(this,this.expandedRoot)}}t([r()],x.prototype,"i18n",void 0),t([d({type:Boolean})],x.prototype,"expandedRoot",void 0),t([p({type:Boolean,reflect:!0})],x.prototype,"hasFocus",void 0),t([d({type:Boolean,reflect:!0})],x.prototype,"isGroupStart",void 0),t([d({type:String})],x.prototype,"navigationGroupId",void 0),t([p({type:Boolean,reflect:!0})],x.prototype,"active",void 0),t([p({type:Boolean,reflect:!0})],x.prototype,"expanded",void 0),t([l("[cds-navigation-start-icon]",{assign:"cds-icon-slot"})],x.prototype,"startIcon",void 0),t([c("[cds-navigation-sr-text]")],x.prototype,"itemText",void 0);export{x as CdsNavigationStart,y as CdsNavigationStartTagName};
//# sourceMappingURL=navigation-start.element.js.map
